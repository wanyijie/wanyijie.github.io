[{"id":0,"href":"/posts/python/django-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/","title":"Django 环境搭建","section":"python","content":"安装 Django\r#\r\r先安装 PIP，再通过 PIP 安装 Django\r#\r\r安装 PIP\ncd /data;\nmkdir tmp;\ncd tmp;\nwget https://bootstrap.pypa.io/get-pip.py;\npython ./get-pip.py;\n使用 PIP，安装 Django\npip install Django==1.11.7\n安装 Mysql 安装并启动 mariadb\n因为 CentOS 7 之后的版本都不在提供 Mysql 安装源，这里我们使用 mariadb 代替 mysql，依次执行下列命令\nyum install mariadb mariadb-server -y\nyum install MySQL-python -y\nsystemctl start mariadb\n对 mariadb 进行初始化设置\n执行下面命令，根据提示操作\n设置新密码为 test\n默认密码为空，直接回车即可\nmysql_secure_installation\n使用设置的密码登陆 mariadb\n登陆 db，这里假设密码被设置为 test\nmysql -uroot -ptest\n创建一个数据库\ncreate database mysite;\n成功后，输入 exit 命令退出 db\nexit\n创建 Django 项目 创建 mysite 项目\n在 /data/ 目录下，创建一个名为 mysite 的 Django 项目\ncd /data/\ndjango-admin startproject mysite\n修改配置文件，与 Mysql 数据库相关联\n备注：SECRET_KEY 配置项无需修改\n编辑 /data/mysite/mysite/settings.py\n示例代码：/data/mysite/mysite/settings.py\n\u0026quot;\u0026quot;\u0026quot;\nDjango settings for mysite project.\nGenerated by \u0026lsquo;django-admin startproject\u0026rsquo; using Django 1.11.7.\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/1.11/topics/settings/\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/1.11/ref/settings/\n\u0026quot;\u0026quot;\u0026quot;\nimport os\nBuild paths inside the project like this: os.path.join(BASE_DIR, \u0026hellip;)\r#\r\rBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(file)))\nQuick-start development settings - unsuitable for production\r#\r\rSee https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/\r#\r\rSECURITY WARNING: keep the secret key used in production secret!\r#\r\rSECRET_KEY = \u0026lsquo;m4@g1=hz^08y(9d)v5l!8^*0wbla=oe15s@u8@5^pw=llfz48%\u0026rsquo;\nSECURITY WARNING: don\u0026rsquo;t run with debug turned on in production!\r#\r\rDEBUG = True\nALLOWED_HOSTS = [\u0026quot;*\u0026quot;]\nApplication definition\r#\r\rINSTALLED_APPS = [\n'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles',  ]\nMIDDLEWARE = [\n'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware',  ]\nROOT_URLCONF = \u0026lsquo;mysite.urls\u0026rsquo;\nTEMPLATES = [\n{ 'BACKEND': 'django.template.backends.django.DjangoTemplates', 'DIRS': [], 'APP_DIRS': True, 'OPTIONS': { 'context_processors': [ 'django.template.context_processors.debug', 'django.template.context_processors.request', 'django.contrib.auth.context_processors.auth', 'django.contrib.messages.context_processors.messages', ], }, },  ]\nWSGI_APPLICATION = \u0026lsquo;mysite.wsgi.application\u0026rsquo;\nDatabase\r#\r\rhttps://docs.djangoproject.com/en/1.11/ref/settings/#databases\r#\r\rDATABASES = {\n'default': { 'ENGINE': 'django.db.backends.mysql', 'NAME': 'mysite', 'PASSWORD':'test', 'USER': 'root', 'HOST':'127.0.0.1', 'PORT':'3306', }  }\nPassword validation\r#\r\rhttps://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators\r#\r\rAUTH_PASSWORD_VALIDATORS = [\n{ 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', }, { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', }, { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', }, { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', },  ]\nInternationalization\r#\r\rhttps://docs.djangoproject.com/en/1.11/topics/i18n/\r#\r\rLANGUAGE_CODE = \u0026lsquo;en-us\u0026rsquo;\nTIME_ZONE = \u0026lsquo;UTC\u0026rsquo;\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nStatic files (CSS, JavaScript, Images)\r#\r\rhttps://docs.djangoproject.com/en/1.11/howto/static-files/\r#\r\rSTATIC_URL = \u0026lsquo;/static/\u0026rsquo;\n创建 Django 数据库\ncd /data/mysite\npython manage.py migrate\n启动 Django\npython manage.py runserver\n如果没有报错，就说明 Django 已经安装成功了，并且跟 Mysql 的连接正常\n退出 Django\n按 ctrl+c 退出 Django 服务\n安装 Nginx 通过 yum 安装 Nginx\nyum install nginx -y\n启动 Nginx 服务\nsystemctl start nginx\n访问下面的链接，可以看到 nginx 的欢迎界面\nhttp://\u0026lt;您的 CVM IP 地址\u0026gt;/\n安装 uwsgi\n任务时间：5min ~ 10min\n使用 yum 命令安装 uwsgi\nyum install uwsgi uwsgi-plugin-python -y\n让 Nginx，uwsgi，Django 协同工作 修改 Nginx 配置文件\n编辑 /etc/nginx/nginx.conf\n示例代码：/etc/nginx/nginx.conf\nFor more information on configuration, see:\r#\r\r* Official English Documentation: http://nginx.org/en/docs/\r#\r\r* Official Russian Documentation: http://nginx.org/ru/docs/\r#\r\ruser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log;\npid /run/nginx.pid;\nLoad dynamic modules. See /usr/share/nginx/README.dynamic.\r#\r\rinclude /usr/share/nginx/modules/*.conf;\nevents {\nworker_connections 1024;  }\nhttp {\nlog_format main '$remote_addr - $remote_user [$time_local] \u0026quot;$request\u0026quot; ' '$status $body_bytes_sent \u0026quot;$http_referer\u0026quot; ' '\u0026quot;$http_user_agent\u0026quot; \u0026quot;$http_x_forwarded_for\u0026quot;'; access_log /var/log/nginx/access.log main; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; include /etc/nginx/mime.types; default_type application/octet-stream; # Load modular configuration files from the /etc/nginx/conf.d directory. # See http://nginx.org/en/docs/ngx_core_module.html#include # for more information. include /etc/nginx/conf.d/*.conf; server { listen 80 default_server; listen [::]:80 default_server; server_name _; root /usr/share/nginx/html; # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; location / { include uwsgi_params; uwsgi_pass 127.0.0.1:8000; } error_page 404 /404.html; location = /40x.html { } error_page 500 502 503 504 /50x.html; location = /50x.html { } }  Settings for a TLS enabled server.\r#\r\r#\r\rserver {\r#\r\rlisten 443 ssl http2 default_server;\r#\r\rlisten [::]:443 ssl http2 default_server;\r#\r\rserver_name _;\r#\r\rroot /usr/share/nginx/html;\r#\r\r#\r\rssl_certificate \u0026ldquo;/etc/pki/nginx/server.crt\u0026rdquo;;\r#\r\rssl_certificate_key \u0026ldquo;/etc/pki/nginx/private/server.key\u0026rdquo;;\r#\r\rssl_session_cache shared:SSL:1m;\r#\r\rssl_session_timeout 10m;\r#\r\rssl_ciphers HIGH:!aNULL:!MD5;\r#\r\rssl_prefer_server_ciphers on;\r#\r\r#\r\r# Load configuration files for the default server block.\r#\r\rinclude /etc/nginx/default.d/*.conf;\r#\r\r#\r\rlocation / {\r#\r\r}\r#\r\r#\r\rerror_page 404 /404.html;\r#\r\rlocation = /40x.html {\r#\r\r}\r#\r\r#\r\rerror_page 500 502 503 504 /50x.html;\r#\r\rlocation = /50x.html {\r#\r\r}\r#\r\r}\r#\r\r}\n重启 Nginx\n/usr/sbin/nginx -s reload\n创建 uwsgi 配置文件\n请在 /data/mysite 目录下创建 uwsgi.ini，参考下面的内容。\n示例代码：/data/mysite/uwsgi.ini\n[uwsgi]\nsocket = 127.0.0.1:8000\nchdir = /data/mysite\nwsgi-file = mysite/wsgi.py\nprocesses = 4\nthreads = 2\nstats = 127.0.0.1:9191\nuid = nobody\ngid = nobody\nmaster = true\nharakiri = 30\ndaemonize = /data/mysite/uwsgi.log\nplugins = python\n启动 uwsgi\nuwsgi uwsgi.ini\n测试\n访问链接 http://\u0026lt;您的 IP 地址\u0026gt;/\n如果可以看到 Django 的界面，恭喜你，环境搭建成功\n"},{"id":1,"href":"/posts/","title":"Posts","section":"home","content":"the posts main\r#\r\r"},{"id":2,"href":"/posts/angluar/angular-cli-6-%E5%BA%93%E6%94%AF%E6%8C%81/","title":"Angular CLI 6 库支持","section":"angular","content":"Library support in Angular CLI 6\r#\r\r库支持在 Angular CLI 6\r#\r\rAngular CLI v6 comes with library support via ng-packagr plugged into the build system we use in Angular CLI, together with schematics for generating a library.\nAngular CLI v6通过插入到我们在Angular CLI中使用的构建系统中的ng-packagr提供库支持，以及用于生成库的原理图。\nGenerating a library\r#\r\r生成库\r#\r\rYou can create a library in a existing workspace by running the following commands:\n您可以通过运行以下命令在现有工作区中创建库：\nng generate library my-lib You should now have a library inside projects/my-lib. It contains a component and a service inside a NgModule.\n你现在应该在 projects/my-lib 中有一个库。它包含一个组件和一个NgModule内的服务。\nBuilding your library\r#\r\r构建你的库\r#\r\rYou can build this library via ng build my-lib, and also unit test it and lint it by replacing build with test or lint.\n您可以通过 ng build my-lib 来构建这个库，并且还可以通过用test或lint替换构建来对其进行单元测试并对其进行测试\nUsing your library inside your apps\r#\r\r在应用中使用库\r#\r\rBefore you use your library, it\u0026rsquo;s important to understand the mental model of how libraries are used in general.\n在使用库之前，了解库一般使用的心理模型很重要。\nWhen you want to use a library from npm, you must: 当你想从npm使用一个库时，你必须：\n install the library into node_modules via npm install library-name\n通过 npm install library-name 将库安装到node_modules中 import it in your application by name import { something } from 'library-name';\n通过 import { something } from 'library-name'; 将库安装到node_modules中  This works because importing a library in Angular CLI looks for a mapping between library name and location on disk.\n这是有效的，因为在Angular CLI中导入库会查找本地磁盘上库名声带库和位置之间的映射。\nAngular CLI first looks in your tsconfig paths, then in the node_modules folder.\nAngular CLI首先在您的tsconfig路径中查找，然后在node_modules文件夹中查找。\nWhen you build your own libraries it doesn\u0026rsquo;t go into node_modules so we use the tsconfig paths to tell the build system where it is. Generating a library automatically adds its path to the tsconfig file.\n当您构建自己的库时，它不会进入node_modules，因此我们使用tsconfig路径来告诉构建系统它在哪里。生成库自动将其路径添加到tsconfig文件。\nUsing your own library follows a similar pattern:\n使用你自己的库遵循类似的模式：\n build the library via ng build my-lib\n通过 ng build my-li b构建库 import it in your application by name import { something } from 'my-lib';\n通过import { something } from 'my-lib'; 导入到应用程序中;  It\u0026rsquo;s important to note that your app can never use your library before it is built.\n请注意，您的应用在构建之前不能使用您的库。\nFor instance, if you clone your git repository and run npm install, your editor will show the my-lib imports as missing. This is because you haven\u0026rsquo;t yet built your library.\n例如，如果你克隆你的git仓库并运行npm install，你的编辑器会显示缺少my-lib导入。这是因为你还没有建立你的图书馆。\nAnother common problem is changes to your library not being reflected in your app. This is often because your app is using an old build of your library. If this happens just rebuild your library.\n另一个常见问题是您的库的更改没有反映在您的应用程序中。这通常是因为你的应用程序正在使用你的库的旧版本。如果发生这种情况只是重建你的图书馆。\nPublishing your library\r#\r\r发布你的库\r#\r\rTo publish your library follow these steps:\n要发布您的库，请按照以下步骤操作\nng build my-lib --prod cd dist/my-lib npm publish If you\u0026rsquo;ve never published a package in npm before, you will need to create a user account. You can read more about publishing on npm here: https://docs.npmjs.com/getting-started/publishing-npm-packages\n如果您以前从未在npm发布过软件包，则需要创建一个用户帐户。你可以在这里阅读更多关于npm的发布：https://docs.npmjs.com/getting-started/publishing-npm-packages\nThe --prod flag should be used when building to publish because it will completely clean the build directory for the library beforehand, removing old code leftover code from previous versions.\n构建发布时应使用 --prod 标志，因为它会事先完全清除库的构建目录，从旧版本中删除旧的代码剩余代码。\nWhy do I need to build the library everytime I make changes?\r#\r\r每当我进行更改时，为什么需要构建库？\r#\r\rRunning ng build my-lib every time you change a file is bothersome and takes time.\n每次更改文件时运行构建my-lib都很麻烦并且需要时间。\nSome similar setups instead add the path to the source code directly inside tsconfig. This makes seeing changes in your app faster.\n一些类似的设置直接在tsconfig中添加源代码的路径。这可以更快地查看应用程序的更改。\nBut doing that is risky. When you do that, the build system for your app is building the library as well. But your library is built using a different build system than your app.\n但这样做是有风险的。当你这样做时，你的应用程序的构建系统也在构建这个库。但是你的库是使用与你的应用程序不同的构建系统构建的\nThose two build systems can build things slightly different, or support completely different features.\n这两个构建系统可以构建稍微不同的东西，或支持完全不同的功能。\nThis leads to subtle bugs where your published library behaves differently from the one in your development setup.\n这会导致您发布的库的行为与开发设置中的行为不同的细微错误。 For this reason we decided to err on the side of caution, and make the recommended usage the safe one.\n出于这个原因，我们决定谨慎犯错，并推荐使用安全的产品。\nIn the future we want to add watch support to building libraries so it is faster to see changes.\n在将来，我们希望增加对建筑图书馆的监视支持，以便更快地查看更改。\nWe are also planning to add internal dependency support to Angular CLI. This means that Angular CLI would know your app depends on your library, and automatically rebuilds the library when the app needs it.\n我们还计划向Angular CLI添加内部依赖关系支持。这意味着Angular CLI会知道你的应用程序依赖于你的库，并在应用程序需要时自动重建库\nNote for upgraded projects\r#\r\r升级项目的注意事项\r#\r\rIf you are using an upgraded project, there are some additional changes you have to make to support monorepo (a workspace with multiple projects) setups:\n如果您正在使用升级项目，则需要进行一些其他更改才能支持monorepo（具有多个项目的工作区）设置：\n in angular.json, change the outputPath to dist/project-name for your app 在 angular.json中, 修改 outputPath 为 dist/project-name 为你的项目 remove baseUrl in src/tsconfig.app.json and src/tsconfig.spec.json 移除 baseUrl 在 src/tsconfig.app.json 和 src/tsconfig.spec.json add \u0026quot;baseUrl\u0026quot;: \u0026quot;./\u0026quot; in ./tsconfig.json 添加 \u0026quot;baseUrl\u0026quot;: \u0026quot;./\u0026quot; 在 ./tsconfig.json change any absolute path imports in your app to be absolute from the root (including src/), or make them relative\n将您的应用程序中的所有绝对路径导入更改为绝对路径（包括src /），或使它们相对  This is necessary to support multiple projects in builds and in your editor. New projects come with this configuration by default.\n这对于在编译和编辑器中支持多个项目是必需的。新项目默认配置此配置。\n"},{"id":3,"href":"/posts/angluar/angular-cli-css-%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%E9%9B%86%E6%88%90/","title":"Angular CLI Css 预处理器集成","section":"angular","content":"CSS Preprocessor integration\r#\r\rCSS 预处理器集成\r#\r\rAngular CLI supports all major CSS preprocessors:\nAngular CLI 支持所有anjor css 预处理器:\n sass/scss (http://sass-lang.com/) less (http://lesscss.org/) stylus (http://stylus-lang.com/)  To use these preprocessors simply add the file to your component\u0026rsquo;s styleUrls:\n要使用这些预处理器只需将文件添加到组件的 styleUrls:\n@Component({ selector: \u0026#39;app-root\u0026#39;, templateUrl: \u0026#39;./app.component.html\u0026#39;, styleUrls: [\u0026#39;./app.component.scss\u0026#39;] }) export class AppComponent { title = \u0026#39;app works!\u0026#39;; } When generating a new project you can also define which extension you want for style files:\n在生成新项目时，您还可以定义样式文件所需的扩展名：\nng new sassy-project --style=sass Or set the default style on an existing project:\n或者在现有项目上设置默认样式\nng config schematics.@schematics/angular:component.styleext scss # note: @schematics/angular is the default schematic for the Angular CLI Style strings added to the @Component.styles array must be written in CSS because the CLI cannot apply a pre-processor to inline styles.\n添加到@ Component.styles数组的样式字符串必须用CSS编写，因为CLI不能将预处理器应用于内联样式。\n"},{"id":4,"href":"/posts/angluar/angular-cli-%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E5%AE%89%E8%A3%85/","title":"Angular CLI 第三方库安装","section":"angular","content":"3rd Party Library Installation\r#\r\r第三方库安装\r#\r\rSimply install your library via npm install lib-name --save and import it in your code.\n只需通过 npm install lib-name --save 安装你的库并将其导入到你的代码中。\nIf the library does not include typings, you can install them using npm:\n如果库不包括类型，你可以使用npm来安装它们：\nnpm install d3 --save npm install @types/d3 --save-dev Then open src/tsconfig.app.json and add it to the types array:\n然后打开 src/tsconfig.app.json 并将其添加到 types 数组中:\n\u0026quot;types\u0026quot;:[ \u0026quot;d3\u0026quot; ] If the library you added typings for is only to be used on your e2e tests, instead use e2e/tsconfig.e2e.json. The same goes for unit tests and src/tsconfig.spec.json.\n如果您添加类型的库仅用于您的e2e测试，请改为使用 e2e/tsconfig.e2e.json。单元测试和src/tsconfig.spec.json 也是如此。\nIf the library doesn\u0026rsquo;t have typings available at @types/, you can still use it by manually adding typings for it:\n如果库在 @types/ 中没有可用类型，则仍然可以通过手动添加类型来使用它：\n  First, create a typings.d.ts file in your src/ folder. This file will be automatically included as global type definition.\n首先，在 src/ 文件夹中创建一个 typings.d.ts 文件。该文件将被自动包含为全局类型定义。\n  Then, in src/typings.d.ts, add the following code:\n然后，在 src/typings.d.ts 中添加以下代码：\n  declare module \u0026#39;typeless-package\u0026#39;; Finally, in the component or file that uses the library, add the following code:\n最后，在使用该库的组件或文件中，添加以下代码：  import * as typelessPackage from \u0026#39;typeless-package\u0026#39;; typelessPackage.method(); Done. Note: you might need or find useful to define more typings for the library that you\u0026rsquo;re trying to use.\n完成。注意：您可能需要或发现有用的定义您尝试使用的库的更多类型。\n"},{"id":5,"href":"/posts/angluar/angular-cli-%E9%93%BE%E6%8E%A5%E5%BA%93/","title":"Angular CLI 链接库","section":"angular","content":"Linked libraries\r#\r\r链接库\r#\r\rWhile working on a library, it is common to use npm link to avoid reinstalling the library on every build.\n在库工作时，它通常使用 [npm link] 避免在每次构建时重复安装库。\nWhile this is very useful there are a few caveats to keep in mind.\n虽然这是非常有用的, 有几个告诫要牢记。\nThe library needs to be AOT compatible\r#\r\r库需要 AOT 兼容\r#\r\rAngular CLI does static analysis even without the --aot flag in order to detect lazy-loade routes. If your library is not AOT compatible, you will likely get a static analysis error.\nAngular CLI 静态分析即使没有 --aot 标记，为了惰加载路由。假如你的库不是AOT兼容，你将获得一个静态分析错误。\nThe library still needs to be rebuilt on every change\r#\r\r每次改变库仍热需要重构\r#\r\rAngular libraries are usually built using TypeScript and thus require to be built before they are published. For simple cases, a linked library might work even without a build step, but this is the exception rather than the norm.\nAngular的库经常使用Typescript构建，因此要求构建之前他们已经发布过。对于简单案例，即使没有生成步骤, 链接库也可能工作, 但这是例外 而不是规范。\nIf a library is not being built using its own build step, then it is being compiled by the Angular CLI build system and there is no guarantee that it will be correctly built. Even if it works on development it might not work when deployed.\n如果库未使用自己的构建步骤生成, 则由 Angular CLI 构建系统, 并不能保证它将被正确构建。即使它对开发起作用, 部署时也可能不起作用。\nWhen linking a library remember to have your build step running in watch mode and the library\u0026rsquo;s package.json pointing at the correct entry points (e.g. \u0026lsquo;main\u0026rsquo; should point at a .js file, not a .ts file).\n链接库时, 请记住在监视模式和库包中运行生成步骤. json 指向正确的入口点 (例如, main 应该指向 .js 文件, 而不是 .ts 文件)。\nUse TypesScript path mapping for Peer Dependencies\r#\r\r使用 TypesScript 路径映射每个依赖\r#\r\rAngular libraries should list all @angular/* dependencies as Peer Dependencies. This insures that, when modules ask for Angular, they all get the exact same module. If a library lists @angular/core in dependencies instead of peerDependencies then it might get a different Angular module instead, which will cause your application to break.\n库应将所有角度/依赖项列出为对等依赖项。这保证, 当模块要求角, 他们都得到完全相同的模块。如果库在依赖项中列出了角度/核心而不是 peerDependencies, 那么它可能会得到一个不同的角度模块, 这将导致应用程序中断。\nWhile developing a library, you\u0026rsquo;ll need to have all of your peer dependencies also installed via devDependencies - otherwise you could not compile. A linked library will then have it\u0026rsquo;s own set of Angular libraries that it is using for building, located in it\u0026rsquo;s node_modules folder. This can cause problems while building or running your application.\n在开发库时, 您还需要通过 devDependencies 安装所有的对等依赖项, 否则您无法编译。链接库将有自己的一组用于构建的 angular库, 位于其 node_modules 文件夹中。这可能会导致生成或运行应用程序时出现问题\nTo get around this problem you can use the TypeScript path mapping. With it, you can tell TypeScript that it should load some modules from a specific location.\n要解决此问题, 可以使用文稿路径映射。通过它, 您可以告诉文稿它应该从特定位置加载一些模块。\nYou should list all the peer dependencies that your library uses in ./tsconfig.json, pointing them at the local copy in the apps node_modules folder. This ensures that you all will always load the local copies of the modules your library asks for.\n您应该列出库在 .tsconfig 中使用的所有对等依赖项, 并将它们指向应用程序 node_modules 文件夹中的本地副本。这将确保您始终加载库要求的模块的本地副本。\n{ \u0026quot;compilerOptions\u0026quot;: { // ... // Note: these paths are relative to `baseUrl` path. \u0026quot;paths\u0026quot;: { \u0026quot;@angular/*\u0026quot;: [ \u0026quot;../node_modules/@angular/*\u0026quot; ] } } } "},{"id":6,"href":"/posts/angluar/angular-cli%E4%BB%A3%E7%90%86%E5%90%8E%E7%AB%AF/","title":"Angular Cli代理后端","section":"angular","content":"Proxy To Backend\r#\r\r代理后端\r#\r\rUsing the proxying support in webpack\u0026rsquo;s dev server we can highjack certain URLs and send them to a backend server. We do this by passing a file to --proxy-config\n使用 webpacks 开发服务器中的代理支持, 我们可以劫持某些 url 并将它们发送到后端服务器。我们这样做是通过传递一个文件给 --proxy-config 选项。\nSay we have a server running on http://localhost:3000/api and we want all calls to http://localhost:4200/api to go to that server. 假设我们有一个服务器运行在 http://localhost:3000/api 我们希望所有调用 http://localhost:4200/api 到该服务器上.\nWe create a file next to our project\u0026rsquo;s package.json called proxy.conf.json with the content 我们在项目包旁边创建一个文件 package.json 命名为 proxy.conf.json 和如下的内容。\n{ \u0026#34;/api\u0026#34;: { \u0026#34;target\u0026#34;: \u0026#34;http://localhost:3000\u0026#34;, \u0026#34;secure\u0026#34;: false } } You can read more about what options are available here.\n您可以阅读更多关于此处.可用选项的信息。\nWe can then add the proxyConfig option to the serve target:\n然后, 我们可以将 proxyConfig 选项添加到服务目标:\n\u0026#34;architect\u0026#34;: { \u0026#34;serve\u0026#34;: { \u0026#34;builder\u0026#34;: \u0026#34;@angular-devkit/build-angular:dev-server\u0026#34;, \u0026#34;options\u0026#34;: { \u0026#34;browserTarget\u0026#34;: \u0026#34;your-application-name:build\u0026#34;, \u0026#34;proxyConfig\u0026#34;: \u0026#34;src/proxy.conf.json\u0026#34; }, Now in order to run our dev server with our proxy config we can call ng serve.\n现在, 为了运行我们的开发服务器与我们的代理配置, 我们可以调用 ng serve.\nAfter each edit to the proxy.conf.json file remember to relaunch the ng serve process to make your changes effective.\n每次编辑到 proxy.conf.json 文件后, 记住重新启动 ng serve 进程, 使您的更改生效\nRewriting the URL path\r#\r\r重写url路径\r#\r\rOne option that comes up a lot is rewriting the URL path for the proxy. This is supported by the pathRewrite option.\n一个很重要的选项是重写代理的 URL 路径。这由 pathRewrite 选项支持\nSay we have a server running on http://localhost:3000 and we want all calls to http://localhost:4200/api to go to that server.\n假设我们有一个服务器运行在 http://localhost:3000, 我们希望所有调用 http://localhost:4200/api 到该服务器上。\nin our proxy.conf.json file, we add the following content 在我们的 proxy.conf.json 文件, 我们添加如下内容\n{ \u0026#34;/api\u0026#34;: { \u0026#34;target\u0026#34;: \u0026#34;http://localhost:3000\u0026#34;, \u0026#34;secure\u0026#34;: false, \u0026#34;pathRewrite\u0026#34;: { \u0026#34;^/api\u0026#34;: \u0026#34;\u0026#34; } } } If you need to access a backend that is not on localhost, you will need to add the changeOrigin option as follows:\n如果您需要访问不在本地主机上的后端，则需要添加 changeOrigin 选项，如下所示：\n{ \u0026#34;/api\u0026#34;: { \u0026#34;target\u0026#34;: \u0026#34;http://npmjs.org\u0026#34;, \u0026#34;secure\u0026#34;: false, \u0026#34;pathRewrite\u0026#34;: { \u0026#34;^/api\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;changeOrigin\u0026#34;: true } } To help debug whether or not your proxy is working properly, you can also add the logLevel option as follows:\n为了帮助调试代理是否正常工作，您还可以添加 logLevel 选项，如下所示：\n{ \u0026#34;/api\u0026#34;: { \u0026#34;target\u0026#34;: \u0026#34;http://localhost:3000\u0026#34;, \u0026#34;secure\u0026#34;: false, \u0026#34;pathRewrite\u0026#34;: { \u0026#34;^/api\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;logLevel\u0026#34;: \u0026#34;debug\u0026#34; } } Possible options for logLevel include debug, info, warn, error, and silent (default is info)\nlogLevel 的可能选项包括 debug, info, warn, error, 和 silent (默认是info)\nMultiple entries\r#\r\r多入口\r#\r\rIf you need to proxy multiple entries to the same target define the configuration in proxy.conf.js instead of proxy.conf.json e.g.\n如果需要将多个条目代理到同一目标，请在 proxy.conf.js 中定义配置，而不是proxy.conf.json 中的配置，例如\nconst PROXY_CONFIG = [ { context: [ \u0026#34;/my\u0026#34;, \u0026#34;/many\u0026#34;, \u0026#34;/endpoints\u0026#34;, \u0026#34;/i\u0026#34;, \u0026#34;/need\u0026#34;, \u0026#34;/to\u0026#34;, \u0026#34;/proxy\u0026#34; ], target: \u0026#34;http://localhost:3000\u0026#34;, secure: false } ] module.exports = PROXY_CONFIG; Make sure to point to the right file (.js instead of .json):\n确保指向正确的文件 (.js 而不是 .json):\n\u0026#34;architect\u0026#34;: { \u0026#34;serve\u0026#34;: { \u0026#34;builder\u0026#34;: \u0026#34;@angular-devkit/build-angular:dev-server\u0026#34;, \u0026#34;options\u0026#34;: { \u0026#34;browserTarget\u0026#34;: \u0026#34;your-application-name:build\u0026#34;, \u0026#34;proxyConfig\u0026#34;: \u0026#34;src/proxy.conf.js\u0026#34; }, Bypass the Proxy\r#\r\r绕过代理\r#\r\rIf you need to optionally bypass the proxy, or dynamically change the request before it\u0026rsquo;s sent, define the configuration in proxy.conf.js e.g.\n如果需要绕过代理，或者在请求发送前动态更改请求，请在proxy.conf.js中定义配置，例如。\nconst PROXY_CONFIG = { \u0026#34;/api/proxy\u0026#34;: { \u0026#34;target\u0026#34;: \u0026#34;http://localhost:3000\u0026#34;, \u0026#34;secure\u0026#34;: false, \u0026#34;bypass\u0026#34;: function (req, res, proxyOptions) { if (req.headers.accept.indexOf(\u0026#34;html\u0026#34;) !== -1) { console.log(\u0026#34;Skipping proxy for browser request.\u0026#34;); return \u0026#34;/index.html\u0026#34;; } req.headers[\u0026#34;X-Custom-Header\u0026#34;] = \u0026#34;yes\u0026#34;; } } } module.exports = PROXY_CONFIG; Using corporate proxy\r#\r\r使用企业代理\r#\r\rIf you work behind a corporate proxy, the regular configuration will not work if you try to proxy calls to any URL outside your local network.\n如果您在公司代理的后面工作，如果您尝试将呼叫代理到本地网络之外的任何URL，则常规配置将不起作用\nIn this case, you can configure the backend proxy to redirect calls through your corporate proxy using an agent:\n在这种情况下，您可以配置后端代理以使用代理通过公司代理重定向呼叫\nnpm install --save-dev https-proxy-agent Then instead of using a proxy.conf.json file, we create a file called proxy.conf.js with the following content:\n然后，我们不使用 proxy.conf.json 文件，而是使用以下内容创建一个名为 proxy.conf.js 的文件：\nvar HttpsProxyAgent = require(\u0026#39;https-proxy-agent\u0026#39;); var proxyConfig = [{ context: \u0026#39;/api\u0026#39;, target: \u0026#39;http://your-remote-server.com:3000\u0026#39;, secure: false }]; function setupForCorporateProxy(proxyConfig) { var proxyServer = process.env.http_proxy || process.env.HTTP_PROXY; if (proxyServer) { var agent = new HttpsProxyAgent(proxyServer); console.log(\u0026#39;Using corporate proxy server: \u0026#39; + proxyServer); proxyConfig.forEach(function(entry) { entry.agent = agent; }); } return proxyConfig; } module.exports = setupForCorporateProxy(proxyConfig); This way if you have a http_proxy or HTTP_PROXY environment variable defined, an agent will automatically be added to pass calls through your corporate proxy when running npm start.\n这样，如果您定义了 http_proxy 或 HTTP_PROXY 环境变量，则在运行 npm start 时，会自动添加代理以通过公司代理传递调用。\n"},{"id":7,"href":"/posts/angluar/angular-cli%E5%A4%9A%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E9%9B%86%E6%88%90/","title":"Angular Cli多应用程序集成","section":"angular","content":"Multiple Apps integration\r#\r\r多应用程序集成\r#\r\rAngular CLI supports multiple applications within one project. You use the apps array in .angular-cli.json to list files and folders you want to use for different apps.\nAngular CLI 支持多应用程序在一个项目中，您可以使用 .angular-cli.json 中的应用程序数组来列出要用于不同应用程序的文件和文件夹。\nBy default one app is created when then new project is created and apps array looks like:\n默认情况下, 在创建新项目时创建一个应用程序, 并且 apps 数组如下所示:\n\u0026quot;apps\u0026quot;: [ { \u0026quot;root\u0026quot;: \u0026quot;src\u0026quot;, ... \u0026quot;main\u0026quot;: \u0026quot;main.ts\u0026quot;, \u0026quot;polyfills\u0026quot;: \u0026quot;polyfills.ts\u0026quot;, \u0026quot;test\u0026quot;: \u0026quot;test.ts\u0026quot;, \u0026quot;tsconfig\u0026quot;: \u0026quot;tsconfig.app.json\u0026quot;, \u0026quot;testTsconfig\u0026quot;: \u0026quot;tsconfig.spec.json\u0026quot;, \u0026quot;prefix\u0026quot;: \u0026quot;app\u0026quot;, ... } ], To create another app you can copy the app object and then change the values for the options you want to change. eg. If I want to create another app with different main, polyfills, test and prefix and keep other configurations such as assets, styles, environment etc. same. I can add it to apps array as below.\n若要创建其他应用程序, 可以复制应用程序对象, 然后更改要更改的选项的值。如如果我想创建另一个具有不同的 main、polyfills、test和 prefix 的应用程序, 并保留其他配置, 如 assets、styles、enviroment等。我可以添加到应用程序阵列如下。\n\u0026quot;apps\u0026quot;: [ { \u0026quot;root\u0026quot;: \u0026quot;src\u0026quot;, ... \u0026quot;main\u0026quot;: \u0026quot;main.ts\u0026quot;, \u0026quot;polyfills\u0026quot;: \u0026quot;polyfills.ts\u0026quot;, \u0026quot;test\u0026quot;: \u0026quot;test.ts\u0026quot;, \u0026quot;tsconfig\u0026quot;: \u0026quot;tsconfig.app.json\u0026quot;, \u0026quot;testTsconfig\u0026quot;: \u0026quot;tsconfig.spec.json\u0026quot;, \u0026quot;prefix\u0026quot;: \u0026quot;app\u0026quot;, ... }, { \u0026quot;root\u0026quot;: \u0026quot;src\u0026quot;, ... \u0026quot;main\u0026quot;: \u0026quot;main2.ts\u0026quot;, \u0026quot;polyfills\u0026quot;: \u0026quot;polyfills2.ts\u0026quot;, \u0026quot;test\u0026quot;: \u0026quot;test2.ts\u0026quot;, \u0026quot;tsconfig\u0026quot;: \u0026quot;tsconfig.app.json\u0026quot;, \u0026quot;testTsconfig\u0026quot;: \u0026quot;tsconfig.spec.json\u0026quot;, \u0026quot;prefix\u0026quot;: \u0026quot;app2\u0026quot;, ... } ], Now we can serve, build etc. both the apps by passing the app index with the commands. By default, it will pick the first app only.\n现在, 我们可以通过使用命令传递应用程序索引来 serve、build 等应用程序。默认情况下, 它将选择第一个应用程序。\nTo serve the first app: ng serve --app=0 or ng serve --app 0\n为第一个应用程序运行： ng serve --app=0 或 ng serve --app 0\nTo serve the second app: ng serve --app=1 or ng serve --app 1 为第二个应用程序运行: ng serve --app=1 或 ng serve --app 1\nYou can also add the name property to the app object in apps array and then pass it to commands to distinguish between different applications.\n您还可以将 name 属性添加到 apps 组中的应用程序对象中, 然后将其传递给命令以区分不同的应用程序。\n\u0026quot;apps\u0026quot;: [ { \u0026quot;name\u0026quot;: \u0026quot;app1\u0026quot;, \u0026quot;root\u0026quot;: \u0026quot;src\u0026quot;, \u0026quot;outDir\u0026quot;: \u0026quot;dist\u0026quot;, .... To serve application by name ng serve --app=app1 or ng serve --app app1.\n按名称运行应用程序 ng serve --app=app1 或 ng serve --app app1.\n"},{"id":8,"href":"/posts/angluar/angular-cli%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/","title":"Angular Cli持续集成","section":"angular","content":"Continuous Integration\r#\r\r持续集成\r#\r\rOne of the best ways to keep your project bug free is through a test suite, but it\u0026rsquo;s easy to forget to run tests all the time.\n保持项目缺陷肃清的最好方法之一是通过测试套件，但忘记随时运行测试很容易。\nThat\u0026rsquo;s where Continuous Integration (CI) servers come in. You can set up your project repository so that your tests run on every commit and pull request.\n这就是持续集成（CI）服务器的用武之地。您可以设置您的项目存储库，以便您的测试可以在每次提交和提交请求时运行。\nThere are paid CI services like Circle CI and Travis CI, and you can also host your own for free using Jenkins and others.\n有付费的CI服务，如Circle CI和Travis CI，您也可以使用Jenkins和其他人免费托管项目的服务。\nEven though Circle CI and Travis CI are paid services, they are provided free for open source projects. You can create a public project on GitHub and add these services without paying.\n尽管Circle CI和Travis CI是有偿服务，但它们是免费提供给开源项目的。您可以在GitHub上创建一个公共项目并添加这些服务而无需付费。\nWe\u0026rsquo;re going to see how to update your test configuration to run in CI environments, and how to set up Circle CI and Travis CI.\n我们将看到如何更新测试配置以在CI环境中运行，以及如何设置Circle CI和Travis CI。\nUpdate test configuration\r#\r\r更新测试配置\r#\r\rEven though ng test and ng e2e already run on your environment, they need to be adjusted to run in CI environments.\n即使 ng test 和 ng e2e 已经在您的环境中运行，它们也需要进行调整才能在CI环境中运行。\nWhen using Chrome in CI environments it has to be started without sandboxing. We can achieve that by editing our test configs.\n在CI环境中使用Chrome时，必须在不使用沙箱的情况下启动。我们可以通过编辑我们的测试配置来实现这一点。\nIn karma.conf.js, add a custom launcher called ChromeNoSandbox below browsers:\n在 karma.conf.js 中, 添加一个自定义启动 ChromeNoSandbox 在 browsers:\nbrowsers: ['Chrome'], customLaunchers: { ChromeNoSandbox: { base: 'Chrome', flags: ['--no-sandbox'] } }, Create a new file in the root of your project called protractor-ci.conf.js, that extends the original protractor.conf.js:\n在项目根目录创建一个文件命名为 protractor-ci.conf.js, 扩展内 protractor.conf.js:\nconst config = require('./protractor.conf').config; config.capabilities = { browserName: 'chrome', chromeOptions: { args: ['--no-sandbox'] } }; exports.config = config; Now you can run the following commands to use the --no-sandbox flag:\n现在可以运行以下命令来使用 --no-sandbox 标志:\nng test --single-run --no-progress --browser=ChromeNoSandbox ng e2e --no-progress --config=protractor-ci.conf.js For CI environments it\u0026rsquo;s also a good idea to disable progress reporting (via --no-progress) to avoid spamming the server log with progress messages.\n对于CI环境，禁用进度报告 (via --no-progress) 也是一个好主意，以避免使用进度消息来垃圾邮件服务器日志。\nUsing Circle CI\r#\r\r使用 Circle CI\r#\r\rCreate a folder called .circleci at the project root, and inside of it create a file called config.yml:\n在项目根目录下创建一个名为 .circleci 的文件夹，并在其中创建一个名为 config.yml 的文件：\nversion: 2 jobs: build: working_directory: ~/my-project docker: - image: circleci/node:8-browsers steps: - checkout - restore_cache: key: my-project-{{ .Branch }}-{{ checksum \u0026#34;package.json\u0026#34; }} - run: npm install - save_cache: key: my-project-{{ .Branch }}-{{ checksum \u0026#34;package.json\u0026#34; }} paths: - \u0026#34;node_modules\u0026#34; - run: xvfb-run -a npm run test -- --single-run --no-progress --browser=ChromeNoSandbox - run: xvfb-run -a npm run e2e -- --no-progress --config=protractor-ci.conf.js We\u0026rsquo;re doing a few things here:\n我们在这里做了几件事:\r#\r\r node_modules is cached.\n缓存 node_modules. npm run is used to run ng because @angular/cli is not installed globally. The double dash (--) is needed to pass arguments into the npm script.\nnpm run用于运行 ng，因为 @angular/cli 没有全局安装。 需要双短划线（ -- ）将参数传递给npm脚本。 xvfb-run is used to run npm run to run a command using a virtual screen, which is needed by Chrome.\nxvfb-run 用于运行 npm run 以使用Chrome需要的虚拟屏幕运行命令。  Commit your changes and push them to your repository.\n提交更改并将其推送到您的存储库。\nNext you\u0026rsquo;ll need to sign up for Circle CI and add your project. Your project should start building.\n接下来，您需要注册Circle CI并添加您的项目。你的项目应该开始建设。\nBe sure to check out the Circle CI docs if you want to know more.\n如果您想了解更多信息，请务必查看Circle CI docs文档。\nUsing Travis CI\r#\r\r使用 Travis CI\r#\r\rCreate a file called .travis.yml at the project root: 在项目根目录下创建一个名为.travis.yml的文件：\ndist: trusty sudo: false language: node_js node_js: - \u0026#34;8\u0026#34; addons: apt: sources: - google-chrome packages: - google-chrome-stable cache: directories: - ./node_modules install: - npm install script: # Use Chromium instead of Chrome. - export CHROME_BIN=chromium-browser - xvfb-run -a npm run test -- --single-run --no-progress --browser=ChromeNoSandbox - xvfb-run -a npm run e2e -- --no-progress --config=protractor-ci.conf.js Although the syntax is different, we\u0026rsquo;re mostly doing the same steps as were done in the Circle CI config. The only difference is that Travis doesn\u0026rsquo;t come with Chrome, so we use Chromium instead.\n虽然语法不同，但我们主要执行与Circle CI配置中完成的相同步骤。唯一的区别是Travis没有配备Chrome，所以我们使用Chromium。\nCommit your changes and push them to your repository.\n提交更改并将其推送到您的存储库。\nNext you\u0026rsquo;ll need to sign up for Travis CI and add your project. You\u0026rsquo;ll need to push a new commit to trigger a build.\n接下来，您需要注册 Travis CI 并 添加您的项目 。您需要推送新的提交来触发构建。\nBe sure to check out the Travis CI docs if you want to know more.\n如果您想了解更多信息，请务必查看Travis CI文档。\n"},{"id":9,"href":"/posts/angluar/angular-flex%E5%B8%83%E5%B1%80/","title":"Angular Flex布局","section":"angular","content":"Include Flex Layout in your CLI application\r#\r\r在您的CLI应用程序中包含Flex布局\r#\r\r Above is snapshot of a Online Demos using @angular/flex-layout\n这个截图是一个在线演示使用@angular/flex-layout\n Include @angular/flex-layout as detailed below:\r#\r\r包含 @angular/flex-layout 详情如下:\r#\r\rInstall the library and add the dependency to package.json\u0026hellip;\n安装该库并将依赖项添加到package.json\u0026hellip;\nnpm install --save @angular/flex-layout Or install the nightly build using:\n或者使用以下命令安装每晚构建:\nnpm i --save @angular/flex-layout-builds Import the Angular Flex-Layout NgModule into your app module\u0026hellip;\n将Angular Flex布局NgModule导入您的应用程序模块\u0026hellip;\n//in src/app/app.module.ts  import { FlexLayoutModule } from \u0026#39;@angular/flex-layout\u0026#39;; // other imports  @NgModule({ imports: [ ... FlexLayoutModule ], ... }) Run ng serve to run your application in develop mode, and navigate to http://localhost:4200\n运行 ng serve 以开发模式运行您的应用程序，并导航到 http://localhost：4200\nSample App\r#\r\r示例应用程序\r#\r\r添加下列内容到 src/app/app.component.css\u0026hellip;\n[fxLayout=\u0026#34;column\u0026#34;] { border: 1px solid;padding:4px; margin-top:50px; }, [fxFlex]{ padding:5px;}, h3 { padding-top:20px; }, .header { background-color: lightyellow; }, .left { background-color: lightblue; }, .right { background-color: pink; } 要验证flex-layout已正确设置，请更改 src/app/app.component.html 为以下内容\u0026hellip;\n\u0026lt;div fxLayout=\u0026#34;column\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;header\u0026#34; fxLayout=\u0026#34;row\u0026#34; fxLayoutAlign=\u0026#34;space-between center\u0026#34;\u0026gt; \u0026lt;h3\u0026gt; {{title}} \u0026lt;/h3\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div fxLayout=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;left\u0026#34; fxFlex=\u0026#34;20\u0026#34;\u0026gt; LEFT: 20% wide \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;right\u0026#34; fxFlex\u0026gt; RIGHT: 80% wide \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; After saving this file, return to the browser to see the very ugly but demonstrative flex-layout.\n保存此文件后，返回浏览器查看非常丑陋但具有示范性的弹性布局。\nAmong what you should see are - a light yellow header that is the entire width of the window, sitting directly atop 2 columns. Of those 2 columns, the left column should be light blue, and 20% wide, while the right column is pink, 80% to start, and will flex with window (re)size.\n在你应该看到的是 - 一个淡黄色的标题，是整个窗口的宽度，直接坐在2列上。在这2列中，左栏应为浅蓝色，宽20％。在这2列中，左列应该是浅蓝色，宽20％，右列是粉红色，80％开始，并且会随着窗口（再）尺寸而弯曲。\nMore Info\r#\r\r更多信息\r#\r\r Installation API Overview Demo  "},{"id":10,"href":"/posts/angluar/angular-%E4%BD%BF%E7%94%A8-bootstrap/","title":"Angular 使用 Bootstrap","section":"angular","content":"Include Bootstrap\r#\r\r包括 Bootstrap\r#\r\rBootstrap is a popular CSS framework which can be used within an Angular project. This guide will walk you through adding bootstrap to your Angular CLI project and configuring it to use bootstrap.\nBootstrap 是一个流行的CSS框架，可以在Angular项目中使用。本指南将引导您为Angular CLI项目添加引导程序并将其配置为使用引导程序。\nUsing CSS\r#\r\r使用CSS\r#\r\rGetting Started\r#\r\r开始\r#\r\rCreate a new project and navigate into the project\n创建一个新项目并导航到项目中\nng new my-app cd my-app Installing Bootstrap\r#\r\r安装 Bootstrap\r#\r\rWith the new project created and ready you will next need to install bootstrap to your project as a dependency. Using the --save option the dependency will be saved in package.json\n随着新项目的创建和准备，接下来需要将引导程序作为依赖项安装到项目中。使用\u0026ndash;save选项，依赖项将被保存在package.json中\nnpm install bootstrap --save Configuring Project\r#\r\r配置项目\r#\r\rNow that the project is set up it must be configured to include the bootstrap CSS.\n现在该项目已经建立，它必须配置为包含引导CSS。\n  Open the file angular.json from the root of your project.\n从项目的根目录打开文件angular.json。\n  Under the property projects find your project.\n在项目属性下找到你的项目。\n  Inside architect.build.options locate the styles property.\n在 architect.build.options 内部找到 styles 属性。\n  This property allows external global styles to be applied to your application.\n该属性允许将外部全局样式应用于您的应用程序。\n  Specify the path to bootstrap.min.css\n指定 bootstrap.min.css 的路径\nIt should look like the following when you are done:\n完成后它应该如下图所示：\n\u0026#34;build\u0026#34;: { \u0026#34;options\u0026#34;: { \u0026#34;styles\u0026#34;: [ \u0026#34;../node_modules/bootstrap/dist/css/bootstrap.min.css\u0026#34;, \u0026#34;styles.css\u0026#34; ], } }   Note: When you make changes to angular.json you will need to re-start ng serve to pick up configuration changes.\n注意：当您对 angular.json 进行更改时，您将需要重新启动服务来获取配置更改。\nTesting Project\r#\r\r测试项目\r#\r\rOpen app.component.html and add the following markup: 打开 app.component.html 添加下列标记:\n\u0026lt;button class=\u0026#34;btn btn-primary\u0026#34;\u0026gt;Test Button\u0026lt;/button\u0026gt; With the application configured, run ng serve to run your application in develop mode. In your browser navigate to the application localhost:4200. Verify the bootstrap styled button appears.\n在配置应用程序后，运行 ng serve 以开发模式运行您的应用程序。在浏览器中导航到应用程序 localhost:4200。验证引导样式按钮出现。\nUsing SASS\r#\r\r使用 SASS\r#\r\rGetting Started\r#\r\r开始\r#\r\rCreate a new project and navigate into the project\n创建一个新项目并导航到项目中\nng new my-app --style=scss cd my-app Installing Bootstrap\r#\r\r安装 Bootstrap\r#\r\rnpm install bootstrap --save Configuring Project\r#\r\r配置项目\r#\r\rCreate an empty file _variables.scss in src/.\n在 src/ 中创建一个文件 _variables.scss\nIf you are using bootstrap-sass, add the following to _variables.scss: 如果你使用 bootstrap-sass, 将下面的内容添加到 _variables.scss:\n$icon-font-path: \u0026#39;../node_modules/bootstrap-sass/assets/fonts/bootstrap/\u0026#39;; in styles.scss add the following: 在 styles.scss 中添加下列内容:\n@import \u0026#39;variables\u0026#39;; @import \u0026#39;../node_modules/bootstrap/scss/bootstrap\u0026#39;; Testing Project\r#\r\r测试项目\r#\r\rOpen app.component.html and add the following markup: 打开 app.component.html 添加下列标记:\n\u0026lt;button class=\u0026#34;btn btn-primary\u0026#34;\u0026gt;Test Button\u0026lt;/button\u0026gt; With the application configured, run ng serve to run your application in develop mode. In your browser navigate to the application localhost:4200. Verify the bootstrap styled button appears. To ensure your variables are used open _variables.scss and add the following:\n配置应用程序后， 运行 ng serve 启动你的应用程序在开发模式。 在浏览器中导航到你的应用程序 localhost:4200. 验证引导样式按钮出现. 要确保您的变量使用打开_variables.scss并添加以下内容\n$primary: red; Return the browser to see the font color changed.\n返回浏览器查看更改的字体颜色。\n"},{"id":11,"href":"/posts/angluar/angular-%E5%9B%BD%E9%99%85%E5%8C%96-i18n/","title":"Angular 国际化 (I18n)","section":"angular","content":"Internationalization (i18n)\r#\r\r国际化 (i18n)\r#\r\rIf you are working on internationalization, the CLI can help you with the following steps:\n如果您正在致力于国际化，CLI可以通过以下步骤为您提供帮助：\n extraction\n提取 serve\n服务 build\n构建  The first thing that you have to do is to setup your application to use i18n. To do that you can follow the cookbook on angular.io.\n你必须做的第一件事是设置你的应用程序使用国际化。要做到这一点，你查看 关于angular.io的食谱  。\nExtraction\r#\r\r提取\r#\r\rWhen your app is ready, you can extract the strings to translate from your templates with the ng xi18n command.\n当您的应用程序准备就绪时，您可以使用 ng xi18n 命令从您的模板中提取字符串以进行翻译。\nBy default it will create a file named messages.xlf in your src folder. You can use parameters from the xi18n command to change the format, the name, the location and the source locale of the extracted file.\n默认情况下，它会在 src 文件夹中创建一个名为 messages.xlf 的文件. 您可以使用 xi18n命令中的参数更改提取文件的格式，名称，位置和源语言环境。\nFor example to create a file in the src/locale folder you would use:\n例如，要在src / locale文件夹中创建一个文件，您可以使用：\nng xi18n --output-path src/locale Building and serving\r#\r\r建设和服务\r#\r\rNow that you have generated a messages bundle source file, you can translate it. Let\u0026rsquo;s say that your file containing the french translations is named messages.fr.xlf and is located in the src/locale folder.\n现在您已经生成了一个消息包源文件，您可以将其翻译。假设您的包含法文翻译的文件名为messages.fr.xlf并位于src / locale文件夹中。\nIf you want to use it when you serve your application you can use the 4 following options:\n如果您想在为应用程序提供服务时使用它，则可以使用以下4个选项：\n i18nFile Localization file to use for i18n. i18nFile 用于i18n的本地化文件. i18nFormat Format of the localization file specified with \u0026ndash;i18n-file. i18nFormat 使用\u0026ndash;i18n-file指定的本地化文件的格式. i18nLocale Locale to use for i18n. i18nLocale 用于i18n的语言环境. i18nMissingTranslation Defines the strategy to use for missing i18n translations. i18nMissingTranslation 定义用于缺少i18n翻译的策略。.  In our case we can load the french translations with the following configuration:\n在我们的案例中，我们可以使用以下配置加载法语翻译:\n\u0026#34;architect\u0026#34;: { \u0026#34;build\u0026#34;: { \u0026#34;builder\u0026#34;: \u0026#34;@angular-devkit/build-angular:browser\u0026#34;, \u0026#34;options\u0026#34;: { ... }, \u0026#34;configurations\u0026#34;: { \u0026#34;fr\u0026#34;: { \u0026#34;aot\u0026#34;: true, \u0026#34;outputPath\u0026#34;: \u0026#34;dist/my-project-fr/\u0026#34;, \u0026#34;i18nFile\u0026#34;: \u0026#34;src/locale/messages.fr.xlf\u0026#34;, \u0026#34;i18nFormat\u0026#34;: \u0026#34;xlf\u0026#34;, \u0026#34;i18nLocale\u0026#34;: \u0026#34;fr\u0026#34;, \u0026#34;i18nMissingTranslation\u0026#34;: \u0026#34;error\u0026#34;, } // ... \u0026#34;serve\u0026#34;: { \u0026#34;builder\u0026#34;: \u0026#34;@angular-devkit/build-angular:dev-server\u0026#34;, \u0026#34;options\u0026#34;: { \u0026#34;browserTarget\u0026#34;: \u0026#34;your-project-name:build\u0026#34; }, \u0026#34;configurations\u0026#34;: { \u0026#34;production\u0026#34;: { \u0026#34;browserTarget\u0026#34;: \u0026#34;your-project-name:build:production\u0026#34; }, \u0026#34;fr\u0026#34;: { \u0026#34;browserTarget\u0026#34;: \u0026#34;your-project-name:build:fr\u0026#34; } } }, To build the application using the French i18n options, use ng build --configuration=fr. To serve, use ng serve --configuration=fr.\n使用法语i18n选项构建应用程序,使用 ng build --configuration=fr. 运行服务，请使用ng serve --configuration=fr.\nOur application is exactly the same but the LOCALE_ID has been provided with \u0026ldquo;fr\u0026rdquo;, TRANSLATIONS_FORMAT with \u0026ldquo;xlf\u0026rdquo; and TRANSLATIONS with the content of messages.fr.xlf. All the strings flagged for i18n have been replaced with their french translations.\n我们的应用程序是完全相同的，但是 LOCALE_ID 有提供“fr”, 带有“xlf”的TRANSLATIONS_FORMAT 和带有 messages.fr.xlf 内容的 TRANSLATIONS。\nNote: this only works for AOT, if you want to use i18n in JIT you will have to update\nyour bootstrap file yourself.\n注意：这只适用于AOT，如果你想在JIT中使用i18n，你必须自己更新引导文件。\nUsing multiple languages\r#\r\r使用多种语言\r#\r\rWhen you build your application for a specific locale, it is probably a good idea to change the output path with the outputPath options in order to save the files to a different location.\n在为特定语言环境构建应用程序时，最好使用 outputPath 选项更改输出路径，以便将文件保存到其他位置。\nIf you end up serving this specific version from a subdirectory, you can also change the base url used by your application with the baseHref option.\n如果您最终从子目录中提供此特定版本，您还可以使用 baseHref 选项更改应用程序使用的基础URL。\nFor example if the french version of your application is served from https://myapp.com/fr/ then you would build the french version like this:\n例如，如果您的应用程序的法语版本是从https://myapp.com/fr/提供的，那么您可以像这样构建法语版本：\n\u0026#34;configurations\u0026#34;: { \u0026#34;fr\u0026#34;: { \u0026#34;aot\u0026#34;: true, \u0026#34;outputPath\u0026#34;: \u0026#34;dist/my-project-fr/\u0026#34;, \u0026#34;baseHref\u0026#34;: \u0026#34;/fr/\u0026#34;, \u0026#34;i18nFile\u0026#34;: \u0026#34;src/locale/messages.fr.xlf\u0026#34;, \u0026#34;i18nFormat\u0026#34;: \u0026#34;xlf\u0026#34;, \u0026#34;i18nLocale\u0026#34;: \u0026#34;fr\u0026#34;, \u0026#34;i18nMissingTranslation\u0026#34;: \u0026#34;error\u0026#34;, } If you need more details about how to create scripts to generate the app in multiple languages and how to setup Apache 2 to serve them from different subdirectories, you can read this great tutorial by Philippe Martin.\n如果您需要更多关于如何创建脚本以多种语言生成应用程序的详细信息，以及如何设置Apache 2以便从不同的子目录提供它们，你可以阅读菲利普马丁的这个伟大的教程。\n"},{"id":12,"href":"/posts/angluar/angular-%E5%9C%A8%E7%A3%81%E7%9B%98%E4%B8%8A%E8%BF%90%E8%A1%8C%E6%9C%8D%E5%8A%A1/","title":"Angular 在磁盘上运行服务","section":"angular","content":"Serve from Disk\r#\r\r在磁盘上运行服务\r#\r\rThe CLI supports running a live browser reload experience to users by running ng serve. This will compile the application upon file saves and reload the browser with the newly compiled application. This is done by hosting the application in memory and serving it via webpack-dev-server.\nCLI支持通过运行 ng serve 来为用户运行实时浏览器重新加载体验。这将在文件保存时编译应用程序，并用新编译的应用程序重新载入浏览器。这是通过将应用程序托管在内存中并通过webpack-dev-server.来完成的。\nIf you wish to get a similar experience with the application output to disk please use the steps below. This practice will allow you to ensure that serving the contents of your dist dir will be closer to how your application will behave when it is deployed.\n如果您希望获得与应用程序输出到磁盘相似的体验，请使用以下步骤。这种做法将允许您确保提供远程目录的内容将更接近您的应用程序在部署时的行为方式。\nEnvironment Setup\r#\r\r环境设置\r#\r\rInstall a web server\r#\r\r安装一个web服务器\r#\r\rYou will not be using webpack-dev-server, so you will need to install a web server for the browser to request the application. There are many to choose from but a good one to try is lite-server as it will auto-reload your browser when new files are output.\n您将不会使用webpack-dev-server，因此您需要安装Web服务器以供浏览器请求应用程序。有很多可供选择的，但最好尝试的是lite-server，因为它会在输出新文件时自动重新加载浏览器\nUsage\r#\r\r使用\r#\r\rYou will need two terminals to get the live-reload experience. The first will run the build in a watch mode to compile the application to the dist folder. The second will run the web server against the dist folder. The combination of these two processes will mimic the same behavior of ng serve.\n您将需要两个终端才能获得实时加载体验。第一个将以监视模式运行构建以将应用程序编译到 dist 文件夹。第二个将针对 dist 文件夹运行Web服务器。这两个过程的结合将模拟ng服务的相同行为。\n1st terminal - Start the build\r#\r\r第一个终端，开始构建\r#\r\rng build --watch 2nd terminal - Start the web server\r#\r\r第二个终端。开始web服务器\r#\r\rlite-server --baseDir=\u0026#34;dist\u0026#34; When using lite-server the default browser will open to the appropriate URL.\n使用 lite-server 时，默认浏览器将打开相应的URL。\n"},{"id":13,"href":"/posts/angluar/angular-%E5%A4%9A%E9%A1%B9%E7%9B%AE/","title":"Angular 多项目","section":"angular","content":"Multiple Projects\r#\r\r多项目\r#\r\rAngular CLI supports multiple applications within one workspace.\nAngular CLI支持多个应用在一个工作空间\nTo create another app you can use the following command: 创建另一个应用程序可以使用下面的命令:\nng generate application my-other-app The new application will be generated inside projects/my-other-app.\n新应用程序 projects/my-other-app 将在内部生成.\nNow we can serve, build etc. both the apps by passing the project name with the commands:\n现在, 我们可以通过使用命令传递项目名称来 serve, build 等两个应用程序:\nng serve my-other-app You can also create libraries, which is detailed in Create a library.\n您还可以创建库, 这在创建库中是详细的。\n"},{"id":14,"href":"/posts/angluar/angular-%E9%80%9A%E7%94%A8%E9%9B%86%E6%88%90/","title":"Angular 通用集成","section":"angular","content":"Angular Universal Integration\r#\r\rAngular 通用集成\r#\r\rThe Angular CLI supports generation of a Universal build for your application. This is a CommonJS-formatted bundle which can be require()\u0026rsquo;d into a Node application (for example, an Express server) and used with @angular/platform-server\u0026rsquo;s APIs to prerender your application.\nAngular CLI 支持为应用程序生成通用集成。这是一个 CommonJS 格式的包, 可以通过 require() 进入节点应用程序 , 并与@angular/platform-server 的 api 一起使用以预渲染应用程序。\n Example CLI Integration:\r#\r\rCLI 集成例子:\r#\r\rAngular Universal-Starter - Clone the universal-starter for a working example.\nAngular 通用启动器 -克隆通用启动器的一个工作示例。 -\n Integrating Angular Universal into existing CLI Applications\r#\r\r将Angular Universal集成到现有的CLI应用程序中\r#\r\rThis story will show you how to set up Universal bundling for an existing @angular/cli project in 5 steps.\n这个故事将向您展示如何通过5个步骤为现有的 @angular/cli 项目设置通用构建。\n Install Dependencies\r#\r\r安装依赖\r#\r\rInstall @angular/platform-server into your project. Make sure you use the same version as the other @angular packages in your project.\n安装 @angular/platform-server 到你的项目. 确保您的项目中使用与其他@angular软件包相同的版本。\n You\u0026rsquo;ll also need ts-loader (for your webpack build we\u0026rsquo;ll show later) and @nguniversal/module-map-ngfactory-loader, as it\u0026rsquo;s used to handle lazy-loading in the context of a server-render. (by loading the chunks right away) 您还需要ts-loader（用于您的webpack构建，稍后会显示）和 @nguniversal/module-map-ngfactory-loader，因为它用于处理服务器呈现环境中的延迟加载。 （通过立即加载块）\n $ npm install --save @angular/platform-server @nguniversal/module-map-ngfactory-loader ts-loader Step 1: Prepare your App for Universal rendering\r#\r\r步骤一：准备您的应用程序进行通用渲染\r#\r\rThe first thing you need to do is make your AppModule compatible with Universal by adding .withServerTransition() and an application ID to your BrowserModule import:\n您需要做的第一件事是通过向您的 BrowserModule 导入添加 .withServerTransition（）和一个应用程序ID，使您的 AppModule 与通用兼容：\nsrc/app/app.module.ts:\r#\r\r@NgModule({ bootstrap: [AppComponent], imports: [ // Add .withServerTransition() to support Universal rendering.  // The application ID can be any identifier which is unique on  // the page.  BrowserModule.withServerTransition({appId: \u0026#39;my-app\u0026#39;}), ... ], }) export class AppModule {} Next, create a module specifically for your application when running on the server. It\u0026rsquo;s recommended to call this module AppServerModule.\n接下来，在服务器上运行时，专门为您的应用程序创建一个模块。建议调用这个模块AppServerModule。\nThis example places it alongside app.module.ts in a file named app.server.module.ts:\n这个例子将它放在 app.module.ts 名为的文件 app.server.module.ts旁边:\nsrc/app/app.server.module.ts:\r#\r\rYou can see here we\u0026rsquo;re simply Importing everything from AppModule, followed by ServerModule.\n您可以在这里看到我们只是从AppModule导入所有内容，然后导入ServerModule。\n One important thing to Note: We need ModuleMapLoaderModule to help make Lazy-loaded routes possible during Server-side renders with the Angular CLI.\n注意一件重要的事情：我们需要使用ModuleMapLoaderModule，以便在使用Angular CLI进行服务器端呈现期间使延迟加载的路由成为可能。\n import {NgModule} from \u0026#39;@angular/core\u0026#39;; import {ServerModule} from \u0026#39;@angular/platform-server\u0026#39;; import {ModuleMapLoaderModule} from \u0026#39;@nguniversal/module-map-ngfactory-loader\u0026#39;; import {AppModule} from \u0026#39;./app.module\u0026#39;; import {AppComponent} from \u0026#39;./app.component\u0026#39;; @NgModule({ imports: [ // The AppServerModule should import your AppModule followed  // by the ServerModule from @angular/platform-server.  AppModule, ServerModule, ModuleMapLoaderModule // \u0026lt;-- *Important* to have lazy-loaded routes work  ], // Since the bootstrapped component is not inherited from your  // imported AppModule, it needs to be repeated here.  bootstrap: [AppComponent], }) export class AppServerModule {}  Step 2: Create a server \u0026ldquo;main\u0026rdquo; file and tsconfig to build it\r#\r\r步骤二: 创建服务器 \u0026ldquo;main\u0026rdquo; 文件并 tsconfig 以生成它\r#\r\rCreate a main file for your Universal bundle. This file only needs to export your AppServerModule. It can go in src. This example calls this file main.server.ts:\n创建一个主文件为通用包. 这个文件只需要导出你的 AppServerModule. 它可以进去 src. 这个例子调用这个文件 main.server.ts:\nsrc/main.server.ts:\r#\r\rexport { AppServerModule } from \u0026#39;./app/app.server.module\u0026#39;; Copy tsconfig.app.json to tsconfig.server.json and change it to build with a \u0026quot;module\u0026quot; target of \u0026quot;commonjs\u0026quot;.\n复制tsconfig.app.json 到 tsconfig.server.json 并改变它与建立一个 \u0026quot;module\u0026quot; 目标为 \u0026quot;commonjs\u0026quot;.\nAdd a section for \u0026quot;angularCompilerOptions\u0026quot; and set \u0026quot;entryModule\u0026quot; to your AppServerModule, specified as a path to the import with a hash (#) containing the symbol name. In this example, this would be app/app.server.module#AppServerModule.\n为 “angularCompilerOptions” 添加一个属性并将 “entryModule” 设置为您的AppServerModule，使用包含符号名称的散列（＃）指定为导入路径。在这个例子中，这将是app/app.server.module＃AppServerModule。\nsrc/tsconfig.server.json:\r#\r\r{ \u0026#34;extends\u0026#34;: \u0026#34;../tsconfig.json\u0026#34;, \u0026#34;compilerOptions\u0026#34;: { \u0026#34;outDir\u0026#34;: \u0026#34;../out-tsc/app\u0026#34;, \u0026#34;baseUrl\u0026#34;: \u0026#34;./\u0026#34;, // Set the module format to \u0026#34;commonjs\u0026#34;:  \u0026#34;module\u0026#34;: \u0026#34;commonjs\u0026#34;, \u0026#34;types\u0026#34;: [] }, \u0026#34;exclude\u0026#34;: [ \u0026#34;test.ts\u0026#34;, \u0026#34;**/*.spec.ts\u0026#34; ], // Add \u0026#34;angularCompilerOptions\u0026#34; with the AppServerModule you wrote  // set as the \u0026#34;entryModule\u0026#34;.  \u0026#34;angularCompilerOptions\u0026#34;: { \u0026#34;entryModule\u0026#34;: \u0026#34;app/app.server.module#AppServerModule\u0026#34; } }  Step 3: Create a new target in angular.json\r#\r\r步骤三: 在 angular.json 中创建一个目标\r#\r\rIn angular.json locate the architect property inside your project, and add a new server target:\n在 angular.json 中找到项目中的 architect 属性，并添加一个新的 server 属性：\n\u0026#34;architect\u0026#34;: { \u0026#34;build\u0026#34;: { ... } \u0026#34;server\u0026#34;: { \u0026#34;builder\u0026#34;: \u0026#34;@angular-devkit/build-angular:server\u0026#34;, \u0026#34;options\u0026#34;: { \u0026#34;outputPath\u0026#34;: \u0026#34;dist/your-project-name-server\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;src/main.server.ts\u0026#34;, \u0026#34;tsConfig\u0026#34;: \u0026#34;src/tsconfig.server.json\u0026#34; } } } Building the bundle\r#\r\r构建包\r#\r\rWith these steps complete, you should be able to build a server bundle for your application, using the --app flag to tell the CLI to build the server bundle, referencing its index of 1 in the \u0026quot;apps\u0026quot; array in .angular-cli.json:\n完成这些步骤后，您应该能够为应用程序构建一个服务器包，使用 --app 标志告诉CLI构建服务器包，在.` angular-cli.json 中apps”数组中引用索引1以.json：\n# This builds your project using the server target, and places the output # in dist/your-project-name-server/ $ ng run your-project-name:server Date: 2017-07-24T22:42:09.739Z Hash: 9cac7d8e9434007fd8da Time: 4933ms chunk {0} main.js (main) 9.49 kB [entry] [rendered] chunk {1} styles.css (styles) 0 bytes [entry] [rendered]  Step 4: Setting up an Express Server to run our Universal bundles\r#\r\r设置Express服务器来运行我们的Universal套件\r#\r\rNow that we have everything set up to -make- the bundles, how we get everything running?\n现在我们已经把所有东西都设置成了 - 捆绑包，我们如何让所有的东西都运行？\nPlatformServer offers a method called renderModuleFactory() that we can use to pass in our AoT\u0026rsquo;d AppServerModule, to serialize our application, and then we\u0026rsquo;ll be returning that result to the Browser.\nPlatformServer提供了一个名为 renderModuleFactory() 的方法，我们可以使用它传递我们的预编译支持AppServerModule，序列化我们的应用程序，然后我们将返回结果给浏览器。\napp.engine(\u0026#39;html\u0026#39;, (_, options, callback) =\u0026gt; { renderModuleFactory(AppServerModuleNgFactory, { // Our index.html  document: template, url: options.req.url, // DI so that we can get lazy-loading to work differently (since we need it to just instantly render it)  extraProviders: [ provideModuleMap(LAZY_MODULE_MAP) ] }).then(html =\u0026gt; { callback(null, html); }); }); You could do this, if you want complete flexibility, or use an express-engine with a few other built in features from @nguniversal/express-engine found here.\n你可以做到这一点，如果你想要完全的灵活性，或者使用Express引擎和其他一些内置的功能，你可以在这里找到 @nguniversal/express-engine。\n// It\u0026#39;s used as easily as import { ngExpressEngine } from \u0026#39;@nguniversal/express-engine\u0026#39;; app.engine(\u0026#39;html\u0026#39;, ngExpressEngine({ bootstrap: AppServerModuleNgFactory, providers: [ provideModuleMap(LAZY_MODULE_MAP) ] })); Below we can see a TypeScript implementation of a -very- simple Express server to fire everything up.\n下面我们可以看到一个简单的Express服务器的TypeScript实现来启动一切\n Note: This is a very bare bones Express application, and is just for demonstrations sake. In a real production environment, you\u0026rsquo;d want to make sure you have other authentication and security things setup here as well. This is just meant just to show the specific things needed that are relevant to Universal itself. The rest is up to you!\n注意：这是一个非常简单的Express应用程序，只是为了演示。在真实的生产环境中，您需要确保您在此处设置了其他身份验证和安全性功能。这只是为了显示与通用本身相关的具体事情。其余的由你决定！\n At the ROOT level of your project (where package.json / etc are), created a file named: server.ts\n在项目的根级别（package.json / etc所在的位置）创建一个名为：server.ts 的文件\n./server.ts (root project level)\r#\r\r// These are important and needed before anything else import \u0026#39;zone.js/dist/zone-node\u0026#39;; import \u0026#39;reflect-metadata\u0026#39;; import { renderModuleFactory } from \u0026#39;@angular/platform-server\u0026#39;; import { enableProdMode } from \u0026#39;@angular/core\u0026#39;; import * as express from \u0026#39;express\u0026#39;; import { join } from \u0026#39;path\u0026#39;; import { readFileSync } from \u0026#39;fs\u0026#39;; // Faster server renders w/ Prod mode (dev mode never needed) enableProdMode(); // Express server const app = express(); const PORT = process.env.PORT || 4000; const DIST_FOLDER = join(process.cwd(), \u0026#39;dist\u0026#39;); // Our index.html we\u0026#39;ll use as our template const template = readFileSync(join(DIST_FOLDER, \u0026#39;browser\u0026#39;, \u0026#39;index.html\u0026#39;)).toString(); // * NOTE :: leave this as require() since this file is built Dynamically from webpack const { AppServerModuleNgFactory, LAZY_MODULE_MAP } = require(\u0026#39;./dist/server/main.bundle\u0026#39;); const { provideModuleMap } = require(\u0026#39;@nguniversal/module-map-ngfactory-loader\u0026#39;); app.engine(\u0026#39;html\u0026#39;, (_, options, callback) =\u0026gt; { renderModuleFactory(AppServerModuleNgFactory, { // Our index.html  document: template, url: options.req.url, // DI so that we can get lazy-loading to work differently (since we need it to just instantly render it)  extraProviders: [ provideModuleMap(LAZY_MODULE_MAP) ] }).then(html =\u0026gt; { callback(null, html); }); }); app.set(\u0026#39;view engine\u0026#39;, \u0026#39;html\u0026#39;); app.set(\u0026#39;views\u0026#39;, join(DIST_FOLDER, \u0026#39;browser\u0026#39;)); // Server static files from /browser app.get(\u0026#39;*.*\u0026#39;, express.static(join(DIST_FOLDER, \u0026#39;browser\u0026#39;))); // All regular routes use the Universal engine app.get(\u0026#39;*\u0026#39;, (req, res) =\u0026gt; { res.render(join(DIST_FOLDER, \u0026#39;browser\u0026#39;, \u0026#39;index.html\u0026#39;), { req }); }); // Start up the Node server app.listen(PORT, () =\u0026gt; { console.log(`Node server listening on http://localhost:${PORT}`); }); Step 5: Setup a webpack config to handle this Node server.ts file and serve your application!\r#\r\r第5步：设置一个webpack配置来处理这个Node server.ts文件并为您的应用程序提供服务\r#\r\rNow that we have our Node Express server setup, we need to pack it and serve it!\n现在我们已经安装了Node Express服务器，我们需要打包并提供服务！\nCreate a file named webpack.server.config.js at the ROOT of your application.\n在应用程序的ROOT处创建一个名为 webpack.server.config.js 的文件。\n This file basically takes that server.ts file, and takes it and compiles it and every dependency it has into dist/server.js.\n这个文件基本上接受了server.ts文件，并将其编译到 dist/server.js 中。\n ./webpack.server.config.js (root project level)\r#\r\rconst path = require(\u0026#39;path\u0026#39;); const webpack = require(\u0026#39;webpack\u0026#39;); module.exports = { entry: { server: \u0026#39;./server.ts\u0026#39; }, resolve: { extensions: [\u0026#39;.js\u0026#39;, \u0026#39;.ts\u0026#39;] }, target: \u0026#39;node\u0026#39;, // this makes sure we include node_modules and other 3rd party libraries  externals: [/(node_modules|main\\..*\\.js)/], output: { path: path.join(__dirname, \u0026#39;dist\u0026#39;), filename: \u0026#39;[name].js\u0026#39; }, module: { rules: [ { test: /\\.ts$/, loader: \u0026#39;ts-loader\u0026#39; } ] }, plugins: [ // Temporary Fix for issue: https://github.com/angular/angular/issues/11580  // for \u0026#34;WARNING Critical dependency: the request of a dependency is an expression\u0026#34;  new webpack.ContextReplacementPlugin( /(.+)?angular(\\\\|\\/)core(.+)?/, path.join(__dirname, \u0026#39;src\u0026#39;), // location of your src  {} // a map of your routes  ), new webpack.ContextReplacementPlugin( /(.+)?express(\\\\|\\/)(.+)?/, path.join(__dirname, \u0026#39;src\u0026#39;), {} ) ] } Almost there!\n差不多了！\nNow let\u0026rsquo;s see what our resulting structure should look like, if we open up our /dist/ folder we should see:\n现在让我们看看我们的结构应该是什么样子，如果我们打开我们应该看到的 /dist/ 文件夹：\n/dist/ /browser/ /server/ To fire up the application, in your terminal enter\n要启动应用程序，请在终端中输入\nnode dist/server.js :sparkles:\nNow lets create a few handy scripts to help us do all of this in the future.\n现在让我们创建一些便利的脚本来帮助我们在未来完成所有这些。\n\u0026#34;scripts\u0026#34;: { // These will be your common scripts \u0026#34;build:ssr\u0026#34;: \u0026#34;npm run build:client-and-server-bundles \u0026amp;\u0026amp; npm run webpack:server\u0026#34;, \u0026#34;serve:ssr\u0026#34;: \u0026#34;node dist/server.js\u0026#34;, // Helpers for the above scripts \u0026#34;build:client-and-server-bundles\u0026#34;: \u0026#34;ng build --prod \u0026amp;\u0026amp; ng build --prod --app 1 --output-hashing=false\u0026#34;, \u0026#34;webpack:server\u0026#34;: \u0026#34;webpack --config webpack.server.config.js --progress --colors\u0026#34; } In the future when you want to see a Production build of your app with Universal (locally), you can simply run:\n在将来，当您想通过Universal（本地）查看您的应用程序的Production版本时，只需运行：\nnpm run build:ssr \u0026amp;\u0026amp; npm run serve:ssr Enjoy!\n欣赏!\nOnce again to see a working version of everything, check out the universal-starter.\n再次看到一切的工作版本，请查看通用启动器。\n"},{"id":15,"href":"/posts/angluar/angular-%E9%85%8D%E7%BD%AE-angularfire/","title":"Angular 配置 Angular Fire","section":"angular","content":"Include AngularFire\r#\r\r包含 AngularFire\r#\r\rFirebase is a mobile and web application platform with tools and infrastructure designed to help developers build high-quality apps. AngularFire2 is the official Angular library to use Firebase in your apps.\nFirebase是一个移动和Web应用程序平台，其中包含旨在帮助开发人员构建高品质应用程序的工具和基础结构。 AngularFire2是在您的应用中使用Firebase的官方Angular库。\nCreate new project\r#\r\r创建新项目\r#\r\rCreate a new project and navigate into the project. 创建一个新项目并导航到项目中。\n$ ng new my-app $ cd my-app Install dependencies\r#\r\r安装依赖\r#\r\rIn the new project you need to install the required dependencies.\n在新项目中，您需要安装所需的依赖关系。\n$ npm install --save angularfire2 firebase Get Firebase configuration details\r#\r\r获得 Firebase 配置纤细\r#\r\rIn order to connect AngularFire to Firebase you need to get the configuration details.\n为了将AngularFire连接到Firebase，您需要获取配置详细信息\nFirebase offers an easy way to get this, by showing a JavaScript object that you can copy and paste.\n通过显示可以复制和粘贴的JavaScript对象，Firebase提供了一种简单的方法来获取此信息。\n Log in to the Firebase console.\n登录到Firebase控制台。 Create New Project or open an existing one.\n创建新项目或打开一个存在的 Click Add Firebase to your web app.\n点击 Add Firebase to your web app. From the modal window that pops up you copy the config object.\n从弹出的模式窗口中复制配置对象  var config = { apiKey: \u0026#34;your-api-key\u0026#34;, authDomain: \u0026#34;your-auth-domain\u0026#34;, databaseURL: \u0026#34;your-database-url\u0026#34;, storageBucket: \u0026#34;your-storage-bucket\u0026#34;, messagingSenderId: \u0026#34;your-message-sender-id\u0026#34; }; Configure the Environment\r#\r\r配置环境\r#\r\rThese configuration details need to be stored in our app, one way to do this using the environment. This allows you to use different credentials in development and production.\n这些配置细节需要存储在我们的应用程序中，一种使用 environment 来做到这一点的方法，这使您可以在开发和生产中使用不同的凭证。\nOpen src/environments/environment.ts and add a key firebase to the exported constant:\n打开 src/environments/environment.ts 并向导出的常量添加一个键的 firebase:\nexport const environment = { production: false, firebase: { apiKey: \u0026#39;your-api-key\u0026#39;, authDomain: \u0026#39;your-auth-domain\u0026#39;, databaseURL: \u0026#39;your-database-url\u0026#39;, storageBucket: \u0026#39;your-storage-bucket\u0026#39;, } }; To define the keys for production you need to update src/environments/environment.prod.ts.\n要定义生产密钥，您需要更新 src/environments/environment.prod.ts.\nImport and load FirebaseModule\r#\r\r导入和加载 FirebaseModule\r#\r\rThe final step is to import AngularFireModule and initialize it using the parameters from the environment.\n最后一步是导入 AngularFireModule 并使用 environment 中的参数对其进行初始化.\nOpen src/app/app.module.ts and add the following lines on the top of the file, with the other imports:\nimport { AngularFireModule } from \u0026#39;angularfire2\u0026#39;; import { environment } from \u0026#39;../environments/environment\u0026#39;; To initialize AngularFire add the following line to the imports array inside the NgModule:\n要初始化 AngularFire，将以下行添加到 NgModule 内的 imports 数组中：\n@NgModule({ // declarations  imports: [ // BrowserModule, etc  AngularFireModule.initializeApp(environment.firebase), ] // providers  // bootstrap }) Congratulations, you can now use Firebase in your Angular app!\r#\r\r恭喜，您现在可以在您的Angular应用中使用Firebase！\r#\r\r"},{"id":16,"href":"/posts/angluar/angular%E5%85%A8%E5%B1%80%E6%A0%B7%E5%BC%8F/","title":"Angular全局样式","section":"angular","content":"Global styles\r#\r\r全局样式\r#\r\rThe styles.css file allows users to add global styles and supports CSS imports.\nstyles.css 文件允许用户添加全局样式和支持 CSS imports.\nIf the project is created with the --style=sass option, this will be a .sass file instead, and the same applies to scss/less/styl.\n假如项目创建使用 --style=sass 选项, 这是一个 .sass 文件的代替, 同样适用于 scss/less/styl.\nYou can add more global styles via the styles option inside your project\u0026rsquo;s build target options in angular.json. These will be loaded exactly as if you had added them in a \u0026lt;link\u0026gt; tag inside index.html.\n您可以通过 angular.json 中项目的构建目标选项中的 styles 选项添加更多全局样式。这些将被加载，就像您将它们添加到index.html中的标记中一样。\n\u0026#34;architect\u0026#34;: { \u0026#34;build\u0026#34;: { \u0026#34;builder\u0026#34;: \u0026#34;@angular-devkit/build-angular:browser\u0026#34;, \u0026#34;options\u0026#34;: { \u0026#34;styles\u0026#34;: [ \u0026#34;src/styles.css\u0026#34;, \u0026#34;src/more-styles.css\u0026#34;, ], ... You can also rename the output and lazy load it by using the object format:\n您也可以使用对象格式重命名输出并延迟加载它：\n\u0026#34;styles\u0026#34;: [ \u0026#34;src/styles.css\u0026#34;, \u0026#34;src/more-styles.css\u0026#34;, { \u0026#34;input\u0026#34;: \u0026#34;src/lazy-style.scss\u0026#34;, \u0026#34;lazy\u0026#34;: true }, { \u0026#34;input\u0026#34;: \u0026#34;src/pre-rename-style.scss\u0026#34;, \u0026#34;bundleName\u0026#34;: \u0026#34;renamed-style\u0026#34; }, ], In Sass and Stylus you can also make use of the includePaths functionality for both component and global styles, which allows you to add extra base paths that will be checked for imports.\n在Sass和Stylus中，您还可以使用组件和全局样式的 includePaths 功能，这允许您添加额外的基准路径，这些基准路径将被检查以导入。\nTo add paths, use the stylePreprocessorOptions option:\n要添加路径，请使用 stylePreprocessorOptions 选项：\n\u0026quot;stylePreprocessorOptions\u0026quot;: { \u0026quot;includePaths\u0026quot;: [ \u0026quot;src/style-paths\u0026quot; ] }, Files in that folder, e.g. src/style-paths/_variables.scss, can be imported from anywhere in your project without the need for a relative path:\n该文件夹中的文件，例如 \u0026lsquo;src/style-paths _variables.scss\u0026rsquo;，可以从项目中的任何位置导入，而不需要相对路径：\n// src/app/app.component.scss // A relative path works // 相对路径工作 @import '../style-paths/variables'; // But now this works as well // 但现在也工作 @import 'variables'; Note: you will also need to add any styles to the test builder if you need them for unit tests.\n注意：如果需要它们进行单元测试，您还需要向测试生成器添加任何样式。\n"},{"id":17,"href":"/posts/angluar/angular%E5%85%A8%E5%B1%80%E8%84%9A%E6%9C%AC/","title":"Angular全局脚本","section":"angular","content":"Global scripts\r#\r\r全局脚本\r#\r\rYou can add Javascript files to the global scope via the scripts option inside your project\u0026rsquo;s build target options in angular.json. These will be loaded exactly as if you had added them in a \u0026lt;script\u0026gt; tag inside index.html.\n您可以通过angular.json中项目的构建目标选项中的 脚本 选项将JavaScript文件添加到全局范围。这些将被加载，就像您将它们添加到 index.html 中的 \u0026lt;script\u0026gt; 标记中一样。 This is especially useful for legacy libraries or analytic snippets.\n这对旧版库或分析片段尤其有用。\n\u0026#34;architect\u0026#34;: { \u0026#34;build\u0026#34;: { \u0026#34;builder\u0026#34;: \u0026#34;@angular-devkit/build-angular:browser\u0026#34;, \u0026#34;options\u0026#34;: { \u0026#34;scripts\u0026#34;: [ \u0026#34;src/global-script.js\u0026#34;, ], You can also rename the output and lazy load it by using the object format:\n您也可以使用对象格式重命名输出并延迟加载它：\n\u0026#34;scripts\u0026#34;: [ \u0026#34;src/global-script.js\u0026#34;, { \u0026#34;input\u0026#34;: \u0026#34;src/lazy-script.js\u0026#34;, \u0026#34;lazy\u0026#34;: true }, { \u0026#34;input\u0026#34;: \u0026#34;src/pre-rename-script.js\u0026#34;, \u0026#34;bundleName\u0026#34;: \u0026#34;renamed-script\u0026#34; }, ], Note: you will also need to add any scripts to the test builder if you need them for unit tests.\n注意：如果需要它们进行单元测试，您还需要将任何脚本添加到测试生成器。\nUsing global libraries inside your app\r#\r\r在应用程序内使用全局库\r#\r\rOnce you import a library via the scripts array, you should not import it via a import statement in your TypeScript code (e.g. import * as $ from 'jquery';). If you do that you\u0026rsquo;ll end up with two different copies of the library: one imported as a global library, and one imported as a module.\n一旦通过脚本数组导入库，您不应该通过TypeScript代码中的import语句导入它（例如， import * as $ from \u0026lsquo;jquery\u0026rsquo;）\nThis is especially bad for libraries with plugins, like JQuery, because each copy will have different plugins.\n对于带有插件的库如JQuery来说，这是非常糟糕的，因为每个副本都会有不同的插件。\nInstead, download typings for your library (npm install @types/jquery) and follow the 3rd Party Library Installation steps, this will give you access to the global variables exposed by that library.\n相反，为你的库下载类型 (npm install @types/jquery) 和 根据 3rd Party Library Installation 步骤, 这将使您可以访问该库公开的全局变量，\nIf the global library you need to use does not have global typings, you can also declare them manually in src/typings.d.ts as any:\n如果您需要使用的全局库没有全局类型，您也可以在 src / typings.d.ts 中手动声明它们，如下所示：\ndeclare var libraryName: any; When working with scripts that extend other libraries, for instance with JQuery plugins (e.g, $('.test').myPlugin();), since the installed @types/jquery may not include myPlugin, you would need to add an interface like the one below in src/typings.d.ts.\n处理扩展其他库的脚本时，例如使用JQuery插件(e.g, $('.test').myPlugin();), 自安装@types/jquery 可能不包含 myPlugin, 您需要在 src/typings.d.ts 中添加如下所示的端口。\ninterface JQuery { myPlugin(options?: any): any; } Otherwise you may see [TS][Error] Property 'myPlugin' does not exist on type 'JQuery'. in your IDE.\n否则，你可能会看到 [TS][Error] Property 'myPlugin' does not exist on type 'JQuery'. 在你的IDE.\n"},{"id":18,"href":"/posts/angluar/%E4%BB%A3%E7%A0%81%E8%A6%86%E7%9B%96%E7%8E%87/","title":"代码覆盖率","section":"angular","content":"Code Coverage\r#\r\r代码覆盖率\r#\r\rWith the Angular CLI we can run unit tests as well as create code coverage reports. Code coverage reports allow us to see any parts of our code base that may not be properly tested by our unit tests.\n用Angular CLI我们能运行单元测试并创建代码覆盖率报告。代码覆盖率报告允许我们看到我们的代码库中的任何部分可能无法通过我们的单元测试。\nTo generate a coverage report run the following command in the root of your project\n生成一个覆盖率报告运行下面的命令在项目的根\nng test --watch=false --code-coverage Once the tests complete a new /coverage folder will appear in the project. In your Finder or Windows Explorer open the index.html file. You should see a report with your source code and code coverage values.\n一次测试完成一个新的 /coverage 文件夹将出现在项目。 在你的检测器或资源管理器中打开 index.html 文件，你应该看到一个报告里面是你的源代码和代码覆盖值。\nUsing the code coverage percentages we can estimate how much of our code is tested. It is up to your team to determine how much code should be unit tested.\n使用代码覆盖检测器我们能估算多少代是被测试过的。\nCode Coverage Enforcement\r#\r\r代码覆盖率实施\r#\r\rIf your team decides on a set minimum amount to be unit tested you can enforce this minimum with the Angular CLI. For example our team would like the code base to have a minimum of 80% code coverage. To enable this open the karma.conf.js and add the following in the coverageIstanbulReporter: key\n如果你的团队决定在设置一个最小限度账户为单元测试，你能强制这个最小限度。 列如我们的团队将基于代码有一个百分之八十的修小代码覆盖率。要启用此操作，打开 karma.conf.js 添加如下在coverageIstanbulReporter: 键\ncoverageIstanbulReporter: { reports: [ \u0026#39;html\u0026#39;, \u0026#39;lcovonly\u0026#39; ], fixWebpackSourcePaths: true, thresholds: { statements: 80, lines: 80, branches: 80, functions: 80 } } The thresholds property will enforce a minimum of 80% code coverage when the unit tests are run in the project.\nthresholds 属性将强制百分之八十代码覆盖率的一个小值当单元测试运行在这个项目\n"},{"id":19,"href":"/posts/angluar/%E5%85%A8%E5%B1%80%E5%BA%93%E5%AE%89%E8%A3%85/","title":"全局库安装","section":"angular","content":"Global Library Installation\r#\r\r全局库安装\r#\r\rSome javascript libraries need to be added to the global scope and loaded as if they were in a script tag. We can do this using the scripts and styles options of the build target in angular.json.\n一些JavaScript库需要被添加到全局范围并加载，就好像它们在脚本标签中一样，我们可以使用angular.json中构建目标的脚本和样式选项来完成此操作。\nAs an example, to use Bootstrap 4 this is what you need to do:\n例如，要使用Bootstrap 4，您需要执行以下操作：\nFirst install Bootstrap from npm: 首先从 npm 安装Bootstrap：\nnpm install jquery --save npm install popper.js --save npm install bootstrap --save Then add the needed script files to scripts: 然后将所需的脚本文件添加到 scripts 中:\n\u0026#34;scripts\u0026#34;: [ \u0026#34;node_modules/jquery/dist/jquery.slim.js\u0026#34;, \u0026#34;node_modules/popper.js/dist/umd/popper.js\u0026#34;, \u0026#34;node_modules/bootstrap/dist/js/bootstrap.js\u0026#34; ], Finally add the Bootstrap CSS to the styles array:\n最后，将Bootstrap CSS添加到 styles 数组中：\n\u0026#34;styles\u0026#34;: [ \u0026#34;node_modules/bootstrap/dist/css/bootstrap.css\u0026#34;, \u0026#34;src/styles.css\u0026#34; ], Restart ng serve if you\u0026rsquo;re running it, and Bootstrap 4 should be working on your app. 如果您正在运行它，请重新启动服务，并且Bootstrap 4应该在您的应用程序上运行。\n"},{"id":20,"href":"/posts/angluar/%E5%BA%94%E7%94%A8%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/","title":"应用环境变量配置","section":"angular","content":"应用环境\r#\r\rConfiguring available environments\r#\r\r配置环境变量\r#\r\r.angular-cli.json contains an environments section. By default, this looks like:\n.angular-cli.json 包含一个 environments 选项. 默认像下面:\n\u0026#34;environments\u0026#34;: { \u0026#34;dev\u0026#34;: \u0026#34;environments/environment.ts\u0026#34;, \u0026#34;prod\u0026#34;: \u0026#34;environments/environment.prod.ts\u0026#34; } You can add additional environments as required. To add a staging environment, your configuration would look like:\n你能增加附加的环境变量和请求. 增加一个 staging 变量, 你的配置将像下面:\n\u0026#34;environments\u0026#34;: { \u0026#34;dev\u0026#34;: \u0026#34;environments/environment.ts\u0026#34;, \u0026#34;staging\u0026#34;: \u0026#34;environments/environment.staging.ts\u0026#34;, \u0026#34;prod\u0026#34;: \u0026#34;environments/environment.prod.ts\u0026#34; } Adding environment-specific files\r#\r\r添加环境特征文件\r#\r\rThe environment-specific files are set out as shown below:\n环境特定的文件设置如下所示:\n└── src └── environments ├── environment.prod.ts └── environment.ts If you wanted to add another environment for staging, your file structure would become:\n如果你想为 staging 添加另一个环境, 你的文件结构将变成：\n└── src └── environments ├── environment.prod.ts ├── environment.staging.ts └── environment.ts Amending environment-specific files\r#\r\r改良环境特征文件\r#\r\renvironment.ts contains the default settings. If you take a look at this file, it should look like:\nenvironment.ts 包含默认设置. 加入你看这个文件, 它应该像下面:\nexport const environment = { production: false }; If you compare this to environment.prod.ts, which looks like:\n假如你比较这个 environment.prod.ts, 这看起来像:\nexport const environment = { production: true }; You can add further variables, either as additional properties on the environment object, or as separate objects, for example:\n你能添加更多的变量，还能附加属性在 enviroment 对象，或者分离对象， 列如：\nexport const environment = { production: false, apiUrl: \u0026#39;http://my-api-url\u0026#39; }; Using environment-specific variables in your application\r#\r\r使用环境特征变量在你的应用\r#\r\rGiven the following application structure:\n已知下面的应用架构:\n└── src └── app ├── app.component.html └── app.component.ts └── environments ├── environment.prod.ts ├── environment.staging.ts └── environment.ts Using environment variables inside of app.component.ts might look something like this:\n使用环境变量在 app.component.ts 里面，可能看起来这样\nimport { Component } from \u0026#39;@angular/core\u0026#39;; import { environment } from \u0026#39;./../environments/environment\u0026#39;; @Component({ selector: \u0026#39;app-root\u0026#39;, templateUrl: \u0026#39;./app.component.html\u0026#39;, styleUrls: [\u0026#39;./app.component.css\u0026#39;] }) export class AppComponent { constructor() { console.log(environment.production); // Logs false for default environment  } title = \u0026#39;app works!\u0026#39;; } Environment-specific builds\r#\r\r环境特征构建\r#\r\rRunning: 运行:\nng build Will use the defaults found in environment.ts 将使用 environment.ts 里面默认的找到的\n运行:\nng build --env=staging 将使用 environment.staging.ts 里面的值\n"},{"id":21,"href":"/posts/angluar/%E6%94%B9%E5%8F%98%E7%9B%AE%E6%A0%87%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E8%87%AA%E5%8A%A8%E5%89%8D%E7%BC%80/","title":"改变目标浏览器的自动前缀","section":"angular","content":"Change target browsers for Autoprefixer\r#\r\r改变目标浏览器的自动前缀\r#\r\rCurrently, the CLI uses Autoprefixer to ensure compatibility with different browser and browser versions. You may find it necessary to target specific browsers or exclude certain browser versions from your build.\n当前, CLI使用 Autoprefixer 来确定合适不同的浏览器和版本，你可以发现它必须指明特定的浏览器或不包括某个浏览器版本从你的构建。\nInternally, Autoprefixer relies on a library called Browserslist to figure out which browsers to support with prefixing.\n在内部，自动前缀依赖一个库叫Browserslist 用来算出哪些浏览器支持前缀\nThere are a few ways to tell Autoprefixer what browsers to target:\n这儿是一些方法告诉自动前缀目标浏览器：\nAdd a browserslist property to the package.json file\r#\r\r增加浏览器列表的特征到 package.json 文件\r#\r\r\u0026quot;browserslist\u0026quot;: [ \u0026quot;\u0026gt; 1%\u0026quot;, \u0026quot;last 2 versions\u0026quot; ] Add a new file to the project directory called .browserslistrc\r#\r\r增加一些文件到项目，目录叫 .browserslistrc\r#\r\r### Supported Browsers ### 支持的浏览器 \u0026gt; 1% last 2 versions Autoprefixer will look for the configuration file/property to use when it prefixes your css. Check out the browserslist repo for more examples of how to target specific browsers and versions.\n自动前缀将寻找要使用的配置文件或属性，前缀是css. 检出browserslist repo 为怎样标记特定浏览器或ban\u0026rsquo;j的更多例子。\nSide note: Those who are seeking to produce a progressive web app and are using Lighthouse to grade the project will need to add the following browserslist config to their package.json file to eliminate the old flexbox prefixes\n便笺: 那些试图制作progressive web app 和使用grade项目将需要增加下列浏览器列表配置他们的package.json文件消除old flexbox前缀\npackage.json 配置:\n\u0026quot;browserslist\u0026quot;: [ \u0026quot;last 2 versions\u0026quot;, \u0026quot;not ie \u0026lt;= 10\u0026quot;, \u0026quot;not ie_mob \u0026lt;= 10\u0026quot; ] "},{"id":22,"href":"/posts/angluar/%E9%83%A8%E7%BD%B2angular%E5%BA%94%E7%94%A8%E5%88%B0-github/","title":"部署angular应用到 Github","section":"angular","content":"Deploy to GitHub Pages\r#\r\r部署到 Github\r#\r\rA simple way to deploy your Angular app is to use GitHub Pages.\n部署Angular应用的一个简单方法是使用GitHub Pages. 如果自己做一个单页网站可以不需要自购web服务器。\nThe first step is to create a GitHub account, and then create a repository for your project. Make a note of the user name and project name in GitHub.\n第一步是创建一个GitHub帐户，然后为您的项目创建一个存储库 。记下GitHub中的用户名和项目名称。\nThen all you need to do is run ng build --prod --output-path docs --base-href PROJECT_NAME, where PROJECT_NAME is the name of your project in GitHub. Make a copy of docs/index.html and name it docs/404.html.\n然后你需要做的就是运行 ng build --prod --output-path docs --base-href PROJECT_NAME, PROJECT_NAME 是GitHub中项目的名称。复制 docs/index.html 并将其命名为 docs/404.html。\nCommit your changes and push. On the GitHub project page, configure it to publish from the docs folder.\n提交你的改变并推送到github。在GitHub项目页面上，将其配置为从docs文件夹发布\nAnd that\u0026rsquo;s all you need to do! Now you can see your page at https://USER_NAME.github.io/PROJECT_NAME/.\n这就是你需要做的一切！现在你可以看到你的网页了https://USER_NAME.github.io/PROJECT_NAME/.\nYou can also use angular-cli-ghpages, a full featured package that does this all this for you and has extra functionality.\n"},{"id":23,"href":"/posts/angluar/%E9%85%8D%E7%BD%AEangular%E4%BD%BF%E7%94%A8font-awesome/","title":"配置angular使用 Font Awesome","section":"angular","content":"Include Font Awesome\r#\r\r包含 Font Awesome\r#\r\rFont Awesome gives you scalable vector icons that can instantly be customized — size, color, drop shadow, and anything that can be done with the power of CSS.\nFont Awesome 为您提供可立即定制的可缩放矢量图标 - 尺寸，颜色，阴影以及任何可以通过CSS强大功能进行定制的图标。\nCreate a new project and navigate into the project\u0026hellip;\n创建一个新项目并导航到项目中\u0026hellip;\nng new my-app cd my-app Install the font-awesome library and add the dependency to package.json\u0026hellip;\n安装font-awesome库并将依赖关系添加到package.json\u0026hellip;\nnpm install --save font-awesome Using CSS\r#\r\r使用 CSS\r#\r\rTo add Font Awesome CSS icons to your app\u0026hellip;\n将Font Awesome CSS图标添加到您的应用程序\u0026hellip;\n// in angular.json \u0026#34;build\u0026#34;: { \u0026#34;options\u0026#34;: { \u0026#34;styles\u0026#34;: [ \u0026#34;../node_modules/font-awesome/css/font-awesome.css\u0026#34; \u0026#34;styles.css\u0026#34; ], } } 使用 SASS\r#\r\rCreate an empty file _variables.scss in src/.\n在 src/ 中创建一个空文件 _variables.scss。\nAdd the following to _variables.scss:\n将以下内容添加到 _variables.scss：\n$fa-font-path : '../node_modules/font-awesome/fonts'; In styles.scss add the following:\n在 instles.scss 中添加如下内容：\n@import 'variables'; @import '../node_modules/font-awesome/scss/font-awesome'; Test\r#\r\r测试\r#\r\rRun ng serve to run your application in develop mode, and navigate to http://localhost:4200.\n运行 ng serve 以开发模式运行您的应用程序，并导航到 http//localhost:4200。\nTo verify Font Awesome has been set up correctly, change src/app/app.component.html to the following\u0026hellip;\n要验证 Font Awesome 已正确设置，请将 src/app/app.component.html 更改为以下内容\u0026hellip;\n\u0026lt;h1\u0026gt; {{title}} \u0026lt;i class=\u0026#34;fa fa-check\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;/h1\u0026gt; After saving this file, return to the browser to see the Font Awesome icon next to the app title.\n保存此文件后，返回到浏览器以查看应用标题旁边的 Font Awesome 图标。\nMore Info\r#\r\r更多信息\r#\r\r Examples 示例  "},{"id":24,"href":"/posts/angluar/%E9%A1%B9%E7%9B%AE%E8%B5%84%E6%BA%90%E8%AE%BE%E7%BD%AE/","title":"项目资源设置","section":"angular","content":"项目资产\r#\r\rYou use the assets array in .angular-cli.json to list files or folders you want to copy as-is when building your project.\n你使用 angular.json 里面的 assets 文件或目录列表，当构建你的项目时原样复制。\nBy default, the src/assets/ folder and src/favicon.ico are copied over.\n默认，src/assets 文件夹和 src/favicon.io 是会复制的。\n\u0026#34;assets\u0026#34;: [ \u0026#34;assets\u0026#34;, \u0026#34;favicon.ico\u0026#34; ] You can also further configure assets to be copied by using objects as configuration.\n你总能进一步复制配置资产使用项目配置文件。\nThe array below does the same as the default one:\n下面的数组与默认值相同：\n\u0026#34;assets\u0026#34;: [ { \u0026#34;glob\u0026#34;: \u0026#34;**/*\u0026#34;, \u0026#34;input\u0026#34;: \u0026#34;./assets/\u0026#34;, \u0026#34;output\u0026#34;: \u0026#34;./assets/\u0026#34; }, { \u0026#34;glob\u0026#34;: \u0026#34;favicon.ico\u0026#34;, \u0026#34;input\u0026#34;: \u0026#34;./\u0026#34;, \u0026#34;output\u0026#34;: \u0026#34;./\u0026#34; }, ] glob is the a node-glob using input as base directory.\nglob 是一个 node-glob 使用 input 做为根目录.\ninput is relative to the project root (src/ default), while output is relative to outDir (dist default).\ninput 相对于项目的根 (src/ 默认), 而 output 是相对于 outDir (dist 默认).\nYou can use this extended configuration to copy assets from outside your project. For instance, you can copy assets from a node package:\n你能使用扩展配置复制项目外面的资产。例如，你能复制一个node包：\n\u0026#34;assets\u0026#34;: [ { \u0026#34;glob\u0026#34;: \u0026#34;**/*\u0026#34;, \u0026#34;input\u0026#34;: \u0026#34;../node_modules/some-package/images\u0026#34;, \u0026#34;output\u0026#34;: \u0026#34;./some-package/\u0026#34; }, ] The contents of node_modules/some-package/images/ will be available in dist/some-package/.\n内容 node_modules/some-package/images/ 在 dist/some-package/ 是有效的.\nWriting assets outside of dist/\r#\r\r存放资产在 dist/ 外面\r#\r\rBecause of the security implications, the CLI will always refuse to read or write files outside of the project itself (scoped by .angular-cli.json). It is however possible to write assets outside the dist/ build output folder during build.\n因为涉及安全，CLI总是拒绝读或写它自身项目(由描述 .angular-cli.json)外的文件。然后它在构建的时可能写在的 dist/ 外的。\nBecause writing files in your project isn\u0026rsquo;t an expected effect of ng build, it is disabled by default on every assets. In order to allow this behaviour, you need to set allowOutsideOutDir to true on your asset definition, like so:\n因为写文件在你的项目不是 ng build 预期的结果，它在资产上默认是关闭的，为了允许这种行为，你需要在你的资产定义设置 allowOutsideOutDir 为 true ，想这样：\n\u0026#34;assets\u0026#34;: [ { \u0026#34;glob\u0026#34;: \u0026#34;**/*\u0026#34;, \u0026#34;input\u0026#34;: \u0026#34;./assets/\u0026#34;, \u0026#34;output\u0026#34;: \u0026#34;../not-dist/some/folder/\u0026#34;, \u0026#34;allowOutsideOutDir\u0026#34;: true }, ] This needs to be set for every assets you want to write outside of your build output directory. 你需要设置此项为你想要输出在你构建目录外的每个资产。\n"},{"id":25,"href":"/posts/ansible/ansible%E4%BD%BF%E7%94%A8%E4%B8%BB%E6%9C%BA%E6%B8%85%E5%8D%95/","title":"Ansible使用主机清单","section":"ansible","content":"Ansible同时针对基础架构中的多个系统。它通过选择Ansible库存中列出的系统部分来实现这一点，默认情况下将保存在该位置/etc/ansible/hosts。您可以使用命令行上的选项指定不同的清单文件。\n-i \u0026lt;path\u0026gt;\n此库存不仅可配置，还可以同时使用多个库存文件并从动态或云源或不同格式（YAML，ini等）中提取库存，如使用动态库存中所述。Ansible在2.4版本中引入了库存插件，使其具有灵活性和可定制性。\n主机和组\r#\r\r库存文件可以采用多种格式之一，具体取决于您拥有的库存插件。对于这个例子，格式/etc/ansible/hosts是类似INI的（Ansible的默认值之一），如下所示：\nmail.example.com [Web服务器] foo.example.com bar.example.com [dbservers] one.example.com two.example.com three.example.com 括号中的标题是组名，用于对系统进行分类并确定您在什么时间控制什么系统以及为了什么目的。\nYAML版本将如下所示：\nall ： hosts ： mail.example.com ： children ： webservers ： hosts ： foo.example.com ： bar.example.com ： dbservers ： hosts ： one.example.com ： two.example.com ： three.example.com ： 可以将系统放在多个组中，例如服务器既可以是Web服务器也可以是dbserver。如果你这样做，请注意变量将来自他们所属的所有组。变量优先级在后面的章节中详细介绍。\n如果您的主机在非标准SSH端口上运行，则可以使用冒号将端口号放在主机名后面。SSH配置文件中列出的端口不会与paramiko连接一起使用，但会与openssh连接一起使用。\n为了明确地说明，如果事情没有在默认端口上运行，建议您设置它们：\nbadwolf.example.com:5309  假设你只有静态IP并且想要设置一些生存在主机文件中的别名，或者你正在通过隧道进行连接。你也可以通过变量来描述主机：\n在INI中：\njumper ansible_port=5555 ansible_host=192.0.2.50  在YAML中：\n... hosts: jumper: ansible_port: 5555 ansible_host: 192.0.2.50 在上面的例子中，试图对主机别名“跳线”（甚至可能不是真正的主机名）采取行动，将在端口5555上联系192.0.2.50。请注意，这是使用库存文件的一项功能来定义一些特殊变量。一般来说，这不是定义描述系统策略的变量的最佳方式，但我们会在以后分享这些建议。\n 注意: 使用key=value语法以INI格式传递的值不被解释为Python字面结构（字符串，数字，元组，列表，字典，布尔值，无），而是作为字符串。例如，var=FALSE会创建一个等于\u0026rsquo;FALSE\u0026rsquo;的字符串。不要依赖定义期间设置的类型，在使用变量时务必确保在需要时指定带有过滤器的类型。\n 如果您添加了许多类似模式的主机，则可以这样做，而不是列出每个主机名：\n[webservers] www[01:50].example.com 对于数字模式，根据需要可以包含或移除前导零。范围是包容性的。您还可以定义字母范围：\n[databases] db-[a:f].example.com 您也可以按主机选择连接类型和用户：\n[targets] localhost ansible_connection=local other1.example.com ansible_connection=ssh ansible_user=mpdehaan other2.example.com ansible_connection=ssh ansible_user=mdehaan 如上所述，在清单文件中设置这些内容只是简写，我们将在稍后介绍如何将它们存储在\u0026rsquo;host_vars\u0026rsquo;目录中的单个文件中。\n主机变量\r#\r\r如上所述，很容易将变量分配给将在以后的剧本中使用的主机：\n[atlanta] host1 http_port=80 maxRequestsPerChild=808 host2 http_port=303 maxRequestsPerChild=909 组变量\r#\r\r变量也可以同时应用于整个组：\nINI方式：\n[atlanta] host1 host2 [atlanta:vars] ntp_server=ntp.atlanta.example.com proxy=proxy.atlanta.example.com YAML版本：\natlanta: hosts: host1: host2: vars: ntp_server: ntp.atlanta.example.com proxy: proxy.atlanta.example.com 请注意，这只是将变量一次应用到多个主机的简便方法; 即使您可以按组来定位主机，但在执行播放之前，变量总是会展平到主机级别。\n组和组变量\r#\r\r也可以使用:childrenINI中的后缀或children:YAML中的条目来创建组。您可以使用:vars或应用变量vars:：\n [atlanta] host1 host2 [raleigh] host2 host3 [southeast:children] atlanta raleigh [southeast:vars] some_server=foo.southeast.example.com halon_system_timeout=30 self_destruct_countdown=60 escape_pods=2 [usa:children] southeast northeast southwest northwest  all: children: usa: children: southeast: children: atlanta: hosts: host1: host2: raleigh: hosts: host2: host3: vars: some_server: foo.southeast.example.com halon_system_timeout: 30 self_destruct_countdown: 60 escape_pods: 2 northeast: northwest: southwest: 如果您需要存储列表或散列数据，或者希望将主机和组特定变量与库存文件分开，请参阅下一节。儿童组有几个属性需要注意：\n  任何属于子组的成员都自动成为父组的成员。 子组的变量将具有更高的优先级（覆盖）父组的变量。 组可以有多个父母和孩子，但不是循环关系。 主机也可以在多个组，但只会有一个主机的情况下，合并来自多个组的数据。   默认组\r#\r\r有两个默认组：all和ungrouped。all包含每个主机。 ungrouped包含除了没有其他组的所有主机all。每个主持人总是属于至少两个组。虽然all并ungrouped始终存在，但它们可以是隐含的，不会出现在组列表中group_names。\n"},{"id":26,"href":"/posts/cicd/blue-green-deployment/","title":"Blue Green Deployment","section":"CICD","content":"Blue-green deployment is a way to safely deploy applications that are serving live traffic by creating two versions of an application (BLUE and GREEN). To deploy a new version of the application, you will drain all traffic, requests, and pending operations from the current version of the application, switch to the new version, and then turn off the old version. Blue-green deployment eliminates application downtime and allows you to quickly roll back to the BLUE version of the application if necessary.\nFor an overview of the process, here’s a great article by Martin Fowler.\nIn a production environment, you would typically script this process and integrate it into your existing deployment system\n"},{"id":27,"href":"/posts/cicd/doing-a-canary-release/","title":"Doing a Canary Release","section":"CICD","content":"Sometimes it’s safest to test the new version of an application on a small set of users to see how it performs in production, then gradually ramp up the proportion of traffic to the new servers until eventually all traffic is going to them.\nThis method is commonly called a canary release or a dark launch. (“Canary release” refers to the old mining practice of taking a canary down into a coal mine to detect the presence of dangerous gases before the miners were affected. In this context the users directed to the new servers are the canaries.).The split‑clients feature in NGINX Plus (and NGINX) is perfect for it.\nThe split_clients configuration block directs fixed percentages of traffic to different upstream groups. In this example we start by directing 5% of the incoming requests to the new upstream group. If all goes well we can increase to 10%, then to 20%, and so on. When we decide it’s safe to move completely to the new version, we simply remove the split_clients block and change the proxy_pass directive to point to the new upstream group.\nNote that this method is not compatible with session persistence, which requires that NGINX Plus direct traffic from a particular client to the same server that processed the client’s first request. The split_clients directive sends a strict proportion of traffic to each upstream group without considering its source, so it might send a client request to an upstream group that doesn’t include the correct server.\n  Create a new upstream group, demoapp-v2, for the new application version (as in the previous section).\n# In the HTTP context upstream demoapp { zone demoapp 64K; server 172.16.210.81:80 slow_start=30s; server 172.16.210.82:80 slow_start=30s; } upstream demoapp-v2 { zone demoapp-v2 64K; server 172.16.210.83:80 slow_start=30s; server 172.16.210.84:80 slow_start=30s; }   In the first server block we created in Base Configuration for the Upgrade Use Cases, change the proxy_pass block to use a variable to represent the upstream group name instead of a literal like demoapp (the variable gets set in the split_clients block, which we define in the next step).\n# In the first server block location / { proxy_pass http://$app_upstream; }   Add a split_clients block in the http context. Here we tell NGINX Plus to set the variable $app_upstream to demoapp-v2 for 5% of incoming requests and to demoapp for all remaining requests. The variable value is passed to the proxy_pass directive (defined in Step 2) to determine which upstream group the request goes to.\nThe first parameter to split_clients defines the request characteristics that are hashed to determine how requests are distributed, here the client IP address ($remote_addr) and port ($remote_port).\n# In the HTTP context split_clients $remote_addr$remote_port $app_upstream { 5% demoapp-v2; * demoapp; }   Previously we mentioned that in some cases the health check must be defined in a location block separate from the one for regular traffic, and this is such a case. NGINX Plus sets up health checks as it initializes and must know at that point which upstream groups it will send health checks to. When the configuration uses a runtime variable to select the upstream group, as in this case, NGINX Plus can’t determine the upstream group names. To provide the needed information at initialization, we create a separate location block for each upstream group that explicitly names it. In the current case, we have two upstream groups, so for each we have a location block in the server block.\n# In the first server block location @healthcheck { internal; proxy_pass http://demoapp; health_check uri=/healthcheck.html match=matchstring-v1; } location @healthcheck-v2 { internal; proxy_pass http://demoapp-v2; health_check uri=/healthcheck.html match=matchstring-v2; }   In the http context we add a match block to define the match conditions for each health check.\n# In the HTTP context match matchstring-v1 { status 200; body ~ \u0026quot;Version: 1.0 Status: OK\u0026quot;; } match matchstring-v2 { status 200; body ~ \u0026quot;Version: 2.0 Status: OK\u0026quot;; }   Scheduling the Launch\r#\r\rWith just a bit of Lua scripting we can schedule an upgrade for a specific time. Once we have set up the new upstream group, the script returns a different upstream name depending on the system time – the old upstream name prior to the cut-over time and the new upstream group afterward.\nUsing the same upstream groups as in Doing a Canary Release, we can add the following Lua script to the main location block ( / ) to make the cutover happen at 10:00 PM local time on June 21, 2016. All requests received before that time are sent to the demoapp upstream group and all requests received at or after that time will be sent to the demoapp-v2 upstream group.\n# In the first server block location / { rewrite_by_lua ' if ngx.localtime() \u0026gt;= \u0026quot;2016-06-21 22:00:00\u0026quot; then ngx.var.app_upstream = \u0026quot;demoapp-v2\u0026quot; else ngx.var.app_upstream = \u0026quot;demoapp\u0026quot; end '; proxy_pass http://$app_upstream; } Controlling Access to the New Version Based on Client IP Address\r#\r\rIn Doing a Canary Release, we covered one way to test a new application with a small number of users before opening it to everyone. Here we select a small number of users based on their IP address and allow only them access to the URI for the new application. Specifically, we set up a map block that sets the upstream group name based on the $remote_addr variable, which contains the client IP address. We can specify a specific client IP address or a range of IP addresses.\nAs an example, using the same upstream groups described in Doing a Canary Release, we create a regular expression to direct requests from internal IP addresses in the range between 172.16.210.1 and 172.16.210.19 to the demoapp-v2 upstream group (where the servers are running the new application version) while sending all other requests to the demoapp upstream group:\n# In the HTTP context map $remote_addr $app_upstream { ~^172.16.210.([1-9]|[1-9][0-9])$ demoapp-v2; default demoapp; } As before, the value of the $app_upstream variable is passed to the proxy_pass directive in the first server block, and so determines which upstream group receives the request.\n# In the first server block location / { proxy_pass http://$app_upstream; } Conclusion\r#\r\rNGINX Plus provides operations and DevOps engineers with several options for managing software and hardware upgrades on individual servers while continuing to provide a good customer experience by avoiding downtime.\n"},{"id":28,"href":"/posts/cicd/gitlab%E4%B8%80%E4%B8%AA%E6%8E%A8%E9%80%81%E8%A7%A6%E5%8F%91%E9%87%8D%E5%A4%8D%E6%88%96%E5%A4%9A%E4%B8%AAwebhook%E4%BA%8B%E4%BB%B6/","title":"Gitlab一个推送触发重复或多个 Webhook事件","section":"CICD","content":"当GitLab发送webhook时，它需要10秒内的响应（设置默认值）。如果它没有收到，它将重试webhook。如果端点在这10秒内没有发送HTTP响应，GitLab可能会决定挂钩失败并重试。\n如果您收到多个请求，可以尝试增加默认值以在发送webhook后等待HTTP响应，方法是取消注释或将以下设置添加到/etc/gitlab/gitlab.rb：\ngitlab_rails['webhook_timeout'] = 10 "},{"id":29,"href":"/posts/cicd/nginx-and-devops-methodologies-go-hand-in-hand/","title":"Nginx and Dev Ops Methodologies Go Hand in Hand","section":"CICD","content":"DevOps has seen explosive growth recently, as organizations look to deliver releases and features faster by automating operations with an Infrastructure as Code approach. This shift in the industry is making for some very interesting transformations, both in how organizations deploy applications and what is expected from IT operations.\nDevOps plays a big role, not just in the delivery of infrastructure, but in the application deployment process itself. Many times, DevOps and development go hand in hand, with infrastructure deployed for the sole purpose of developing an application pipeline. The lifecycle of an application has become nimbler with the adoption of modern deployment methodologies, and NGINX can provide flexibility to enhance this process.\nHardware appliances for application delivery are traditionally fairly static and don’t lend themselves well to the agility that is required when utilizing a pipeline for application deployment. Being able to define the delivery needs of a specific application as part of the development and iteration process enhances the DevOps process.\nBlue-Green Deployments\r#\r\rOne of the approaches to building an application environment that makes development more agile is blue‑green deployment. A blue‑green deployment essentially requires running two production environments at the same time. The goal is to keep the environments as close to identical as possible, but with only one of them live at any given time. The environment that isn’t live is used for staging and testing.\nFor the sake of this discussion, let’s call the live environment blue and the staging environment green. Once the testing of application updates in the green environment is deemed successful, green becomes the live environment and blue becomes the new staging environment ready for the next iteration of changes to the app. If something goes wrong soon after the green environment goes live, you can easily roll back to the blue environment because you know it was production‑ready before the switch.\nThe lightweight and agile nature of NGINX makes it a great tool for controlling application delivery in a blue‑green environment. Both the switch between environments and the required changes to the app‑delivery configuration can be rolled into the pipeline process itself. As detailed on the NGINX blog, with NGINX Plus you can use the key‑value store to implement blue‑green deployment.\nCanary Releases\r#\r\rCanary release is another approach that NGINX is well suited for. Named after the old mining trick for detecting the presence of dangerous gases in coal mines, a canary deployment exposes application updates to a small subset of users – the “canaries” who test whether the updates work correctly. There are many ways to choose your canaries – perhaps they are from a specific country, or hit the system during a specific time period in the middle of the night. Canary releases limit any possible repercussions to a smaller number of users while still providing feedback about when the update is ready to be released to the masses.\nYou can easily perform a canary release with NGINX and NGINX Plus using the Split Clients module. For details, see the NGINX blog.\nConclusion\r#\r\rBoth of these use cases highlight the flexibility that is required for modern application deployment. Developers need tools that can keep up with the pipeline methodologies used in the current development landscape. Integrating NGINX with existing CI/CD tool chains can arm developers and operations teams with another way to accelerate agility.\n"},{"id":30,"href":"/posts/cicd/performing-a-b-testing/","title":"Performing a B Testing","section":"CICD","content":"When you are testing changes to an application, there are some factors you can measure only in a production environment rather than a development test bed. Examples include the effect of UI changes on user behavior and the impact on overall performance. A common testing method is A/B testing – also known as split testing – in which a (usually small) proportion of users is directed to the new version of an application while most users continue to use the current version.\nIn this blog post we’ll explore why it is important to perform A/B testing when deploying new versions of your web application and how to use NGINX and NGINX Plus to control which version of an application users see. Configuration examples illustrate how you can use NGINX and NGINX Plus directives, parameters, and variables to achieve accurate and measurable A/B testing.\nWhy Do A/B Testing?\r#\r\rAs we mentioned, A/B testing enables you to measure the difference in application performance or effectiveness between two versions. Perhaps your development team wants to change the visual arrangement of buttons in the UI or overhaul the entire shopping cart process, but wants to compare the close rate of transactions to make sure the change has the desired business impact. Using A/B testing you can send a defined percent of the traffic to the new version and the remaining to the old version and measure the effectiveness of both versions of the application.\nOr perhaps your concern is less the effect on user behavior and more related to the performance impact. Let’s say you plan to deploy a huge set of changes to your web application and don’t feel that testing within your quality assurance environment truly captures the possible effect on performance in production. In this case, an A/B deployment allows you to expose the new version to a small, defined percentage of visitors to measure the performance impact of the changes, and gradually increase the percentage until eventually you roll out the changed application to all users.\nUsing NGINX and NGINX Plus for A/B Testing\r#\r\rNGINX and NGINX Plus provide a couple methods for controlling where web application traffic is sent. The first method is available in both products, whereas the second is available in NGINX Plus only.\nBoth methods choose the destination of a request based on the values of one or more NGINX variables that capture characteristics of the client (such as its IP address) or of the request URI (such as a named argument), but the differences between them make them suitable for different A/B‑testing use cases:\n The split_clients method chooses the destination of a request based on a hash of the variable values extracted from the request. The set of all possible hash values is divided up among the application versions, and you can assign a different proportion of the set to each application. The choice of destination ends up being randomized. The sticky route method provides you much greater control over the destination of each request. The choice of application is based on the variable values themselves (not a hash), so you can set explicitly which application receives requests that have certain variable values. You can also use regular expressions to base the decision on just portions of a variable value, and can preferentially choose one variable over another as the basis for the decision.  Using the split_clients Method\r#\r\rIn this method, the split_clients configuration block sets a variable for each request that determines which upstream group the proxy_pass directive sends the request to. In the sample configuration below, the value of the $appversion variable determines where the proxy_pass directive sends a request. The split_clients block uses a hash function to dynamically set the variable’s value to one of two upstream group names, either version_1a or version_1b.\nhttp { # ... # application version 1a upstream version_1a { server 10.0.0.100:3001; server 10.0.0.101:3001; } # application version 1b upstream version_1b { server 10.0.0.104:6002; server 10.0.0.105:6002; } split_clients \u0026quot;${arg_token}\u0026quot; $appversion { 95% version_1a; * version_1b; } server { # ... listen 80; location / { proxy_set_header Host $host; proxy_pass http://$appversion; } } } "},{"id":31,"href":"/posts/cicd/%E4%BB%80%E4%B9%88%E6%98%AF%E8%87%AA%E5%8A%A8%E5%8C%96/","title":"什么是自动化？","section":"CICD","content":"自动化是指运用技术，在减少人工协助的情况下执行各项任务。面临重复性任务的任何行业都可利用自动化，但自动化在制造、机器人和汽车行业以及技术世界中更加普及，例如在 IT 系统和业务决策软件中。\nIT 自动化\r#\r\r一种通过执行重复进程集合来取代对 IT 系统的手动操作的指令系统，例如，利用标准运行环境（SOE）来自动进行置备。\n业务自动化\r#\r\r使业务流程管理（BPM）、业务规则管理（BRM）和业务优化与现代应用开发的方向保持一致，从而应对市场的变化。\n机器人流程自动化\r#\r\rWorkFusion 和 Blue Prism 等提供的软件赋予程序有限的决策制定能力，例如本页上的聊天机器人。\n面向新手的 RPA\n工业自动化\r#\r\r在实现工厂自动化的过程中，缩短制造流程中人类劳动的工时，通常缩减到人类工作者只需操控控制面板或其他人机界面（HMI） 的程度。\n人工智能\r#\r\r基于规则的软件，执行通常通过人类介入来完成的任务。\nAI 指南\n机器学习\r#\r\r利用预测模型执行任务的自适应算法，无需明确的指令，并可在完成每一任务时自动修改算法。\n深度学习\r#\r\r利用多种自适应算法、自动化软件和程序执行一项固定的重复性任务，例如从原始图像中提取细微的细节。\n为什么要自动化？\r#\r\r自动化可以助力企业实现数字变革。当前，Airbnb 和 Amazon 等企业正引领着颠覆性的变革浪潮。他们要应对各种各样的挑战，不仅要为员工和合作伙伴提供支持、发展新的客户，还要以更快的速度提供新颖的创新产品与服务。\n他们不仅想要成为行业的颠覆者，并且势在必行。\n自动化的作用十分关键，它不仅能够管理、改变和调整您的 IT 基础架构，还会影响企业的流程运作方式。利用自动化来简化变革，您就能把更多时间和精力投入到创新之中。采取自动化的企业能够更快地完成工作。自动化能够解放 IT 员工，让他们能够节省时间，去关注并解决更重要的问题，随后，再将这些事务也优化精简，交由自动化处理。\n我们可以说得更细一点：\n IT 运维是一项艰难的工作。要在采用新系统的同时保留原来的系统和流程，更是难上加难。 各种要求和需求的增长速度，远远超过 IT 和业务能力的进步。 DevOps等新的方法正在推动文化变革。 技术虚拟化、云和容器等规模太大，无法完全靠手动完成。 这时我们就需要自动化。  自动化的优势\r#\r\r自动化并不意味着完全取代人工。虽然自动化可以免除一些人工介入的工序，但自动化的重点和优势其实在于提高生产率、一致性和效率。这是自动化的悖论，因为当您高效运用自动化时，人工介入的重要性会提高，但频率会降低。\n实际上，自动化并不是减少工作的法宝，而是旨在让经验更丰富的 IT 员工将精力投入到更重要的问题和解决方案上，而不是困于周而复始的琐碎日常任务。\n优点\r#\r\r **更高的生产效率。**您的员工可以将更多时间投入到对业务影响更大的事务上。重复性工作则交由软件来处理。 **更加可靠。**减少人工干预，您就能减少出错频率和问题。所有相同的工作流都会以相同的方式完成，每时每刻，稳定安心。这样，您就可以准确掌握进程、测试、更新和工作流等作业的开始时间和持续时长，并且信赖最终的结果。 **监管更容易。**人员数量越多，出现知识差距的几率就越高。知识差距越多，您手下的人员就很可能完全不认识另一部门的人员，也不知道具体情况。但把一切事务编写成代码，就意味着能够更好的掌控。  挑战\r#\r\r **成本。**制定富有成效的自动化解决方案需要时间和精力。作为您值得信赖的合作伙伴，红帽将帮助您卸下重担，节省成本，加快运行速度。 **范围。**自动化并不等于智能。有些自动化的对象和构建方式可能会容易超出范围，暴露破绽。将自动化限制于某些层面或职能，可以免除这样的担忧。请记住：自动化的智能与安全程度取决实施方式。 "},{"id":32,"href":"/posts/cloud/%E4%BA%91%E4%BA%A7%E5%93%81%E5%AD%A6%E4%B9%A0%E5%AE%9E%E9%AA%8C%E5%AE%A4/","title":"云产品学习实验室","section":"云服务","content":"腾讯云实验室 阿里云开发者课堂 微软Azure培训\nazure免费套餐\n腾讯云11.11爆款1核2G云服务器首购88元，免费领9888元代金券，百款云产品一折起\n新客户无门槛领取总价值高达2860元代金券，每种代金券限量500张，先到先得。\n"},{"id":33,"href":"/posts/container/docker-compose-%E7%BD%91%E7%BB%9C/","title":"Docker Compose 网络","section":"容器","content":"单个网络\r#\r\r注意：本文档仅适用于版本2或更高版本的compose文件格式。compose version1不支持网络功能。\n默认情况下，Compose为您的应用程序设置单个网络。服务的每个容器都加入默认网络，并且可以由该网络上的其他容器访问，并且可由他们发现与容器名称相同的主机名。\n注意：您的应用程序的网络名称基于“项目名称”，就是基于它所在的目录的名称。您可以使用\u0026ndash;project-name标签或COMPOSE_PROJECT_NAME 环境变量覆盖项目名称。\n例如，假设您的应用程序位于名为myapp的目录中，并且您的docker-compose.yml如下所示：\nversion: \u0026quot;3\u0026quot; services: web: build: . ports: - \u0026quot;8000:8000\u0026quot; db: image: postgres ports: - \u0026quot;8001:5432\u0026quot; 当您运行docker-compose时，会发生以下情况：\n1.创建一个名为myapp_default的网络。\n2.使用“web”服务的配置创建一个容器。它加入一个叫myapp_default网络，在里面的名称是web。\n3.使用”db“服务的配置创建一个容器。它加入一个叫myapp_default网络，在里面的名称是db。\n每个容器现在可以查找主机名\u0026quot;web\u0026quot;或\u0026quot;db\u0026quot;并获取相应容器的IP地址。例如，Web的应用程序可以连接到URL postgres：// db：5432并开始使用Postgres数据库。\n请注意主机端口和容器端口之间的区别。在上述示例中，对于db，主机端口为8001，容器端口为5432（默认为postgres端口）。服务到服务的网络通信使用容器端口。当定义主机端口时，服务也可以在群外访问。\n在Web容器中，您的db的连接字符串看起来像postgres：// db：5432，从主机，连接字符串看起来像postgres：// {DOCKER_IP}：8001。\n多主机网络\r#\r\r将Compose应用程序部署到Swarm群集时，可以使用内置的overlay驱动来启用多主机之间的容器通信，而不会对Compose文件或应用程序代码进行任何更改。\n默认情况下，群集将使用Overlay驱动，但如果您愿意，可以明确指定它。您可以使用顶级网络键（key）指定自己的网络，而不是使用默认的应用网络。这样可以创建更复杂的拓扑结构，并指定自定义网络驱动程序和选项。您还可以使用它将服务连接到由Compose管理的外部创建的网络。\n每个服务都可以指定使用服务级网络key连接的网络，这是一个名称引用顶级networks键下的条目的列表。\n这是一个定义两个自定义网络的“compose”文件示例。代理服务与数据库服务隔离，因为它们不共享一个共同的网络 - 只有app可以与两者通信。\nversion: \u0026quot;3\u0026quot; services: proxy: build: ./proxy networks: - frontend app: build: ./app networks: - frontend - backend db: image: postgres networks: - backend networks: frontend: driver: custom-driver-1 backend: driver: custom-driver-2 driver_opts: foo: \u0026quot;1\u0026quot; bar: \u0026quot;2\u0026quot; "},{"id":34,"href":"/posts/container/docker-overlay-networks/","title":"Docker Overlay Networks","section":"容器","content":"::: container ::: post\ndocker overlay-networks\r#\r\r::: show-content 内置的Docker overlay网络驱动程序彻底简化了多主机网络中的许多挑战。使用overlay驱动程序，多主机网络是Docker内的顶级原生类，无需外部配置或组件。overlay使用Swarm分布式控制平面在跨大规模集群中提供集中管理，稳定性和安全性。\\\nVXLAN数据平面\n该overlay驱动器利用了解耦底层物理网络（容器网络的行业标准VXLAN数据平面底层）。Docker覆盖网络将容器流量封装在VXLAN头中，允许流量穿过物理层2或第3层网络。无论底层物理拓扑是什么，覆盖使网络分段动态且易于控制。使用标准的IETF VXLAN头可以提供标准的工具来检查和分析网络流量。\nVXLAN自3.7版以来一直是Linux内核的一部分，Docker使用内核的本机VXLAN功能来创建覆盖网络。Docker覆盖数据路径完全在内核空间中。这导致更少的上下文切换，更少的CPU开销以及应用程序和物理NIC之间的低延迟直接流量路径。\nIETF VXLAN（RFC 7348）是一种数据层封装格式，覆盖了第3层网络上的第2层。VXLAN设计用于标准IP网络，并可在共享物理网络基础架构上支持大规模，多租户设计。现有的本地和基于云的网络可以透明地支持VXLAN。\nVXLAN被定义为一个MAC-in-UDP封装，将容器二层框架放置在底层IP / UDP头中。底层IP / UDP头提供了底层网络上的主机之间的传输。覆盖是作为参与给定覆盖网络的每个主机之间的点对多点连接存在的无状态VXLAN隧道。由于覆盖层独立于底层拓扑，应用程序变得更加便携。因此，无论是内部部署，开发人员桌面还是在公共云中，网络策略和连接都可以与应用程序一起传输。\n::: image-package {original-src=\u0026ldquo;http://upload-images.jianshu.io/upload_images/6000429-326256e845285034.png?imageMogr2/auto-orient/strip\" image-slug=\u0026ldquo;326256e845285034\u0026rdquo; data-width=\u0026ldquo;720\u0026rdquo; data-height=\u0026ldquo;553\u0026rdquo;}\\\n::: image-caption ::: :::\n在该图中，我们看到覆盖网络上的数据包流。以下是通过共享覆盖网络c1发送c2数据包时发生的步骤：\\\nc1做一个DNS查找c2。由于两个容器位于相同的覆盖网络上，Docker Engine本地DNS服务器解析c2为其覆盖IP地址10.0.0.3。\n覆盖网络是L2段，因此c1生成去往MAC地址的L2帧c2。\n该帧由overlay网络驱动程序用VXLAN头封装。分布式覆盖控制平面管理每个VXLAN隧道端点的位置和状态，因此它知道c2驻留host-B在物理地址上192.168.0.3。该地址成为底层IP头的目标地址。\n封装后封包发送。物理网络负责将VXLAN数据包路由或桥接到正确的主机。\n该分组到达网络驱动程序的eth0接口host-B并被解封装overlay。从原来的L2帧c1被传递到c2的eth0接口和多达收听应用程序。\n覆盖驱动程序内部架构\nDocker Swarm控制平面自动化覆盖网络的所有配置。不需要VXLAN配置或Linux网络配置。当创建网络时，覆盖驱动程序也会自动配置数据平面加密（叠加层的可选功能）。用户或网络运营商只需定义网络（docker network create -d overlay ...）并将容器附加到该网络。\n::: image-package {original-src=\u0026ldquo;http://upload-images.jianshu.io/upload_images/6000429-b544aa2803e7d4fb.png?imageMogr2/auto-orient/strip\" image-slug=\u0026ldquo;b544aa2803e7d4fb\u0026rdquo; data-width=\u0026ldquo;275\u0026rdquo; data-height=\u0026ldquo;442\u0026rdquo;}\\\n::: image-caption ::: :::\n在覆盖网络创建过程中，Docker Engine会为每个主机创建覆盖层所需的网络基础架构。每个重叠以及相关联的VXLAN接口创建一个Linux网桥。Docker Engine只有在连接到该网络的容器在主机上安排时才智能实例化主机上的覆盖网络。这可以防止连接的容器不存在的覆盖网络的蔓延。\\\n在以下示例中，我们创建一个覆盖网络并将容器附加到该网络。然后我们将看到Docker Swarm / UCP自动创建覆盖网络。\n::: image-package {original-src=\u0026ldquo;http://upload-images.jianshu.io/upload_images/6000429-daef8fb98aaad368.png?imageMogr2/auto-orient/strip\" image-slug=\u0026ldquo;daef8fb98aaad368\u0026rdquo; data-width=\u0026ldquo;884\u0026rdquo; data-height=\u0026ldquo;655\u0026rdquo;}\\\n::: image-caption ::: :::\n在容器内已经创建了两个对应于主机上现在存在的两个桥的接口。在覆盖网络上，每个容器至少有两个接口连接到overlay它们docker_gwbridge。\\\n桥目的\n覆盖入口和出口指向VXLAN封装的覆盖网络，并且（可选地）加密在相同覆盖网络上的容器之间的流量。它覆盖所有参与此特定叠加层的主机。主机上的每个重叠子网将存在一个，它将具有与特定覆盖网络相同的名称。\ndocker_gwbridge用于离开集群的流量的出口网桥。docker_gwbridge每个主机只会存在一个。容器到容器的流量在该桥上被阻塞，允许仅进入/出口流量。\nDocker Overlay驱动程序自Docker Engine 1.9以来一直存在，需要外部K / V存储来管理网络的状态。Docker 1.12将控制平面状态集成到Docker Engine中，以便不再需要外部存储。1.12还介绍了几个新功能，包括加密和服务负载均衡。引入的网络功能需要支持它们的Docker Engine版本，并且不支持将旧版本的Docker Engine使用这些功能。 ::: ::: :::\n"},{"id":35,"href":"/posts/container/introduction-to-containers/","title":"Introduction to Containers","section":"容器","content":"Introduction to Containers\r#\r\rIf you understand Linux, you probably already have 85% of the knowledge you need to understand containers. If you understand how processes, mounts, networks , shells and daemons work - commands like ps, mount, ip addr, bash, httpd and mysqld - then you just need to understand a few extra primitives to become an expert with containers. Remember that all of the things that you already know today still apply: from security and performance to storage and networking, containers are just a different way of packaging and delivering Linux applications. There are four basic primitives to learn to get you from Linux administrator to feeling comfortable with containers:\n Container Images Container Registries Container Hosts Container Orchestration  Once, you understand the basic four primitives, there are some advanced concepts that will be covered in future labs including:\n Container Standards: Understanding OCI, CRI, CNI, and more Container Tools Ecosystem - Podman, Buildah, Skopeo, cloud registries, etc Production Image Builds: Sharing and collaborating between technical specialists (performance, network, security, databases, etc) Intermediate Architecture: Production environments Advanced Architecture: Building in resilience Container History: Context for where we are at today  Covering all of this material is beyond the scope of any live training, but we will cover the basics, and students can move on to other labs not covered in the classroom. These labs are available online at http://learn.openshift.com/subsystems.\nNow, let\u0026rsquo;s start with the introductory lab, which covers these four basic primitives:\n"},{"id":36,"href":"/posts/container/jdk%E5%AF%B9docker%E5%AE%B9%E5%99%A8%E7%9A%84%E6%94%AF%E6%8C%81/","title":"Jdk对docker容器的支持","section":"容器","content":"java8及java9\r#\r\rJava 8u131及以上版本开始支持了Docker的cpu和memory限制。\ncpu limit\r#\r\r即如果没有显式指定-XX:ParalllelGCThreads 或者 -XX:CICompilerCount, 那么JVM使用docker的cpu限制。如果docker有指定cpu limit，jvm参数也有指定-XX:ParalllelGCThreads 或者 -XX:CICompilerCount，那么以指定的参数为准。\nmemory limit\r#\r\r在java8u131+及java9，需要加上-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap才能使得Xmx感知docker的memory limit。\n查看参数默认值\njava -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -XX:+PrintFlagsFinal 部分输出\nbool UseCGroupMemoryLimitForHeap = false {experimental} {default}  可以看到在java9，UseCGroupMemoryLimitForHeap参数还是实验性的，默认关闭。\n java10\r#\r\rbool UseCGroupMemoryLimitForHeap = false {experimental} {default}  java10，UseCGroupMemoryLimitForHeap还是experimental，不过标记为废弃。\n 不过java10新引入了1个参数\nint ActiveProcessorCount = -1 {product} {default}  ActiveProcessorCount可以用来指定cpu的个数\n java11\r#\r\rjava11正式移除UseCGroupMemoryLimitForHeap，代码改动见8194086: Remove deprecated experimental flag UseCGroupMemoryLimitForHeap\n同时引入1个新参数\nbool UseContainerSupport = true {product} {default}  UseContainerSupport默认为true，可以使用-Xlog:os+container=trace参数来查看详情。 即使使用-XX:-UseContainerSupport禁用了容器支持，-XX:ActiveProcessorCount如果有指定，该参数值仍然会被使用。\n 小结\r#\r\r   参数/版本 -XX:+UseCGroupMemoryLimitForHeap -XX:ActiveProcessorCount -XX:+UseContainerSupport     java9 experimental，默认false 无 无   java10 experimental，默认false -1 无   java11 移除 -1 product，默认true    "},{"id":37,"href":"/posts/container/overview-of-the-docker-architecture/","title":"Overview of the Docker Architecture","section":"容器","content":"In this text we\u0026rsquo;re going to be talking about Docker architecture. And Docker is the container implementation that is supported by Red Hat and is used by OpenShift. So Docker uses a client-server architecture, and the client will run our command-line tool, which is known as docker, so all of our requests that we\u0026rsquo;re going to make are running on the client server. And then we\u0026rsquo;ll also have another server, which is running the Docker service, and that has a daemon on it that\u0026rsquo;s responsible for all of the building and running and downloading images. And we\u0026rsquo;ll get into all of that in a little bit. But essentially, we have these two separate servers and they can actually be running on the same host. In the classroom, in the demonstrations I\u0026rsquo;ll show you in later videos, ours is actually running on the same host so we have a client and server running together, which is not necessarily the best way to do it if you\u0026rsquo;re production but for the sake of development that\u0026rsquo;s an OK architecture. So I\u0026rsquo;ll talk a little bit about some of the core elements of Docker and some of the resources that they use. So we are in about containers, right? Containers are segregated user space environments for running our applications. These are the primary objects in Docker and almost all of the commands will somehow reference containers in some capacity, that\u0026rsquo;s like our working item. We also have images. And images are templates for containers, so you\u0026rsquo;ll have \u0026ndash; they\u0026rsquo;re sort of like a definition for containers. So we can have one template and from that we can create, you know, five, ten, a thousand containers. All those are based on that template. So this is a really powerful tool that we can use to recreate containers and we can version control images and we can add all of the libraries and configuration files we need to run our application. So where do we get the images from? Well, the images are stored in different registries, and registries can be something that you have that\u0026rsquo;s private and local on your own machine, you can use public registries, DockerHub is one of the most popular ones. Red Hat also has their own image registry and these are already preconfigured and you can pull from them and you can also go to DockerHub as a web site and you can pull down the images from there. So as I mentioned before, up here we have our client, and we have our host, and we have our registry. So the client is where you\u0026rsquo;re going to do things like run all these Docker commands, and we\u0026rsquo;ll get a little bit more into the commands when we start doing demonstration but for now let\u0026rsquo;s stick with docket pull. This is going to pull an image for us locally and we have Docker run. Now on the host, we have our Docker daemon, and the daemon is going to be responding to any of the commands that are run on the client. So anything like docker run, that\u0026rsquo;s going to go to the daemon, docker pull, that\u0026rsquo;s going to go here. So let\u0026rsquo;s say we do a docker pull, and we want to pull down an image for MySQL, so we want to create our own database container. So the first thing we\u0026rsquo;ll run is docker pull mysql. So what happens there is you run docker pull, it goes to the docker daemon and it says OK, I need an image. And the first thing it\u0026rsquo;s going to do is it\u0026rsquo;s going to take a look at our local image repository, so on this host it\u0026rsquo;ll say, do I have a MySQL image. And if it doesn\u0026rsquo;t it\u0026rsquo;ll say OK, let\u0026rsquo;s send this off, I want to go look at one of these public registries. Let\u0026rsquo;s say that this is DockerHub, and in this registry we\u0026rsquo;ll find our little MySQL image, which as I mentioned before, that\u0026rsquo;s just a simple template that includes all the things we need in order to run a MySQL environment. So it\u0026rsquo;ll take that image and it\u0026rsquo;ll bring it back and drop it right into our image repository so that\u0026rsquo;s available for any future containers that we may want to run. So now we have our MySQL image. OK, so let\u0026rsquo;s talk about what happens when we run docker run. So if you do docker run, it\u0026rsquo;s going to go to the daemon and it\u0026rsquo;s going to say OK, I want to run a MySQL container. It\u0026rsquo;s then going to go look at our image and say there is a MySQL image, and let\u0026rsquo;s create a container based on that image, so it\u0026rsquo;s going to run our own MySQL container. And we could run this five, ten, a thousand times, and we can just keep creating new containers over and over again based on that one specific image. So as I mentioned before, containers aren\u0026rsquo;t necessarily a new concept. However, Docker was one of the first implementations to make this really user-friendly and easy, and it does so by using basic features that are already available in the Linux kernel. So first, it uses namespaces, it uses control groups, and it uses SELinux. And so namespaces are generally used to isolate processes, to protect system resources and what Docker does is it creates a namespace for each individual containers, so you have container A over here, you have container B over here, and the namespace will protect these processes so they\u0026rsquo;re not going to interact with each other unnecessarily. We have control groups and control groups create partition to the set of processes and that is essentially protecting the host machine from the container consuming too many resources. So if you have the host down here at the bottom, we have the containers that are going to be isolated so that they are not borrowing too many resources that could potentially cause a failure to the host. We have SELinux and SELinux is there to protect access between both the containers and the containers to the host. So just to refresh, namespaces are there to protect the containers interactions between each other, cgroups are to protect the containers interaction to the host, and SELinux is there to protect access between both the containers and the containers to the host.\n"},{"id":38,"href":"/posts/container/podman-error-with-centos7/","title":"Podman Error With Centos7","section":"容器","content":"system info:\r#\r\r# podman info host: BuildahVersion: 1.14.2 CgroupVersion: v1 Conmon: package: conmon-2.0.13-1.1.el7.x86_64 path: /usr/bin/conmon version: 'conmon version 2.0.13, commit: eab756c90e2bdfa6fecf6616845ddcd9d3e339cb' Distribution: distribution: '\u0026quot;centos\u0026quot;' version: \u0026quot;7\u0026quot; MemFree: 408485888 MemTotal: 952160256 OCIRuntime: name: runc package: runc-1.0.0-15.1.el7.x86_64 path: /usr/bin/runc version: |- runc version 1.0.0-rc10 commit: 67b92f062188d9cb6472b428855432c9f35efcf5 spec: 1.0.1-dev SwapFree: 0 SwapTotal: 0 arch: amd64 cpus: 1 eventlogger: journald hostname: test-server kernel: 3.10.0-1062.12.1.el7.x86_64 os: linux rootless: false uptime: 51m 16.22s registries: search: - registry.fedoraproject.org - registry.access.redhat.com - registry.centos.org - docker.io store: ConfigFile: /etc/containers/storage.conf ContainerStore: number: 0 GraphDriverName: overlay GraphOptions: overlay.mountopt: nodev GraphRoot: /var/lib/containers/storage GraphStatus: Backing Filesystem: xfs Native Overlay Diff: \u0026quot;true\u0026quot; Supports d_type: \u0026quot;true\u0026quot; Using metacopy: \u0026quot;false\u0026quot; ImageStore: number: 0 RunRoot: /var/run/containers/storage VolumePath: /var/lib/containers/storage/volumes ERROR\r#\r\r#podman ps Error: error creating libpod runtime: failed to mount overlay for metacopy check: invalid argument solution\r#\r\redit /etc/containers/storage.conf and remove metacopy. https://github.com/containers/libpod/issues/3560#issuecomment-510630672\n"},{"id":39,"href":"/posts/container/windows-server-%E5%AE%B9%E5%99%A8-os-%E4%B8%8E%E4%B8%BB%E6%9C%BA-os-%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7/","title":"Windows Server 容器 Os 与主机 Os 的兼容性","section":"容器","content":"Windows Server 容器并非在所有主机 OS 版本间都兼容。 例如： 使用 Windows Server 1709 版本生成的 Windows Server 容器在运行 Windows Server 2016 版本的主机上无效。 使用 Windows Server 2016 生成的 Windows Server 容器仅在运行 Windows Server 1709 版本的主机上以 Hyper-V 隔离模式工作。 因为 Windows Server 容器使用 Windows Server 2016 生成，所以在运行 Windows Server 2016 的主机上以进程隔离模式运行时，可能需要确保容器 OS 和主机 OS 的版本相同。 https://docs.microsoft.com/zh-cn/virtualization/windowscontainers/deploy-containers/version-compatibility?tabs=windows-server-1909%2Cwindows-10-1909\n"},{"id":40,"href":"/posts/container/%E9%95%9C%E5%83%8F%E5%86%85%E5%AE%B9%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7-reg/","title":"镜像内容文件下载工具 Reg","section":"容器","content":"Docker registry v2 command line client and repo listing generator with security checks.\nTable of Contents\n Installation  Binaries Via Go   Usage  Auth List Repositories and Tags Get a Manifest Get the Digest Download a Layer Delete an Image Vulnerability Reports Generating Static Website for a Registry Using Self-Signed Certs with a Registry   Contributing  Installation\r#\r\rBinaries\r#\r\rFor installation instructions from binaries please visit the Releases Page.\nVia Go\r#\r\r$ go get github.com/genuinetools/reg Usage\r#\r\r$ reg -h reg - Docker registry v2 client. Usage: reg \u0026lt;command\u0026gt; Flags: --auth-url alternate URL for registry authentication (ex. auth.docker.io) (default: \u0026lt;none\u0026gt;) -d enable debug logging (default: false) -f, --force-non-ssl force allow use of non-ssl (default: false) -k, --insecure do not verify tls certificates (default: false) -p, --password password for the registry (default: \u0026lt;none\u0026gt;) --skip-ping skip pinging the registry while establishing connection (default: false) --timeout timeout for HTTP requests (default: 1m0s) -u, --username username for the registry (default: \u0026lt;none\u0026gt;) Commands: digest Get the digest for a repository. layer Download a layer for a repository. ls List all repositories. manifest Get the json manifest for a repository. rm Delete a specific reference of a repository. server Run a static UI server for a registry. tags Get the tags for a repository. vulns Get a vulnerability report for a repository from a CoreOS Clair server. version Show the version information. NOTE: Be aware that reg ls doesn\u0026rsquo;t work with hub.docker.com as it has a different API than the OSS Docker Registry.\nAuth\r#\r\rreg will automatically try to parse your docker config credentials, but if not present, you can pass through flags directly.\nList Repositories and Tags\r#\r\rRepositories\n# this command might take a while if you have hundreds of images like I do $ reg ls r.j3ss.co Repositories for r.j3ss.co REPO TAGS awscli latest beeswithmachineguns latest camlistore latest chrome beta, latest, stable ... Tags\n$ reg tags r.j3ss.co/tor-browser alpha hardened latest stable # or for an offical image $ reg tags debian 6 6.0 6.0.10 6.0.8 6.0.9 7 7-slim 7.10 7.11 7.11-slim ... Get a Manifest\r#\r\r$ reg manifest r.j3ss.co/htop { \u0026quot;schemaVersion\u0026quot;: 1, \u0026quot;name\u0026quot;: \u0026quot;htop\u0026quot;, \u0026quot;tag\u0026quot;: \u0026quot;latest\u0026quot;, \u0026quot;architecture\u0026quot;: \u0026quot;amd64\u0026quot;, \u0026quot;fsLayers\u0026quot;: [ { \u0026quot;blobSum\u0026quot;: \u0026quot;sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4\u0026quot; }, .... ], \u0026quot;history\u0026quot;: [ .... ] } Get the Digest\r#\r\r$ reg digest r.j3ss.co/htop sha256:791158756cc0f5b27ef8c5c546284568fc9b7f4cf1429fb736aff3ee2d2e340f Download a Layer\r#\r\r$ reg layer -o r.j3ss.co/chrome@sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4 OR $ reg layer r.j3ss.co/chrome@sha256:a3ed95caeb0.. \u0026gt; layer.tar Delete an Image\r#\r\r$ reg rm r.j3ss.co/chrome@sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4 Deleted chrome@sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4 Vulnerability Reports\r#\r\r$ reg vulns --clair https://clair.j3ss.co r.j3ss.co/chrome Found 32 vulnerabilities CVE-2015-5180: [Low] https://security-tracker.debian.org/tracker/CVE-2015-5180 ----------------------------------------- CVE-2016-9401: [Low] popd in bash might allow local users to bypass the restricted shell and cause a use-after-free via a crafted address. https://security-tracker.debian.org/tracker/CVE-2016-9401 ----------------------------------------- CVE-2016-3189: [Low] Use-after-free vulnerability in bzip2recover in bzip2 1.0.6 allows remote attackers to cause a denial of service (crash) via a crafted bzip2 file, related to block ends set to before the start of the block. https://security-tracker.debian.org/tracker/CVE-2016-3189 ----------------------------------------- CVE-2011-3389: [Medium] The SSL protocol, as used in certain configurations in Microsoft Windows and Microsoft Internet Explorer, Mozilla Firefox, Google Chrome, Opera, and other products, encrypts data by using CBC mode with chained initialization vectors, which allows man-in-the-middle attackers to obtain plaintext HTTP headers via a blockwise chosen-boundary attack (BCBA) on an HTTPS session, in conjunction with JavaScript code that uses (1) the HTML5 WebSocket API, (2) the Java URLConnection API, or (3) the Silverlight WebClient API, aka a \u0026quot;BEAST\u0026quot; attack. https://security-tracker.debian.org/tracker/CVE-2011-3389 ----------------------------------------- CVE-2016-5318: [Medium] Stack-based buffer overflow in the _TIFFVGetField function in libtiff 4.0.6 and earlier allows remote attackers to crash the application via a crafted tiff. https://security-tracker.debian.org/tracker/CVE-2016-5318 ----------------------------------------- CVE-2016-9318: [Medium] libxml2 2.9.4 and earlier, as used in XMLSec 1.2.23 and earlier and other products, does not offer a flag directly indicating that the current document may be read but other files may not be opened, which makes it easier for remote attackers to conduct XML External Entity (XXE) attacks via a crafted document. https://security-tracker.debian.org/tracker/CVE-2016-9318 ----------------------------------------- CVE-2015-7554: [High] The _TIFFVGetField function in tif_dir.c in libtiff 4.0.6 allows attackers to cause a denial of service (invalid memory write and crash) or possibly have unspecified other impact via crafted field data in an extension tag in a TIFF image. https://security-tracker.debian.org/tracker/CVE-2015-7554 ----------------------------------------- Unknown: 2 Negligible: 23 Low: 3 Medium: 3 High: 1 Generating Static Website for a Registry\r#\r\rreg bundles a HTTP server that periodically generates a static website with a list of registry images and serves it to the web.\nIt will run vulnerability scanning if you have a CoreOS Clair server set up and pass the url with the --clair flag.\nIt is possible to run reg server just as a one time static generator. --once flag makes the server command exit after it builds the HTML listing.\nThere is a demo at r.j3ss.co.\nUsage:\n$ reg server -h Usage: reg server [OPTIONS] Run a static UI server for a registry. Flags: -u, --username username for the registry (default: \u0026lt;none\u0026gt;) --listen-address address to listen on (default: \u0026lt;none\u0026gt;) --asset-path Path to assets and templates (default: \u0026lt;none\u0026gt;) -f, --force-non-ssl force allow use of non-ssl (default: false) --once generate the templates once and then exit (default: false) --skip-ping skip pinging the registry while establishing connection (default: false) --timeout timeout for HTTP requests (default: 1m0s) --cert path to ssl cert (default: \u0026lt;none\u0026gt;) -d enable debug logging (default: false) --key path to ssl key (default: \u0026lt;none\u0026gt;) --port port for server to run on (default: 8080) -r, --registry URL to the private registry (ex. r.j3ss.co) (default: \u0026lt;none\u0026gt;) --clair url to clair instance (default: \u0026lt;none\u0026gt;) -k, --insecure do not verify tls certificates (default: false) --interval interval to generate new index.html's at (default: 1h0m0s) -p, --password password for the registry (default: \u0026lt;none\u0026gt;) Screenshots:\n[图片上传失败\u0026hellip;(image-9e17d8-1585106582654)]\n[图片上传失败\u0026hellip;(image-318ad5-1585106582654)]\n"},{"id":41,"href":"/posts/devops/apm-pinpoint-install/","title":"Apm Pinpoint Install","section":"DevOps","content":"通过docker安装APM系统pinpoint\ninstall docker\r#\r\r需要 docker-ce-18.03.+ docker-compose 1.23.+\nyum install -y http://mirror.azure.cn/docker-ce/linux/centos/7/x86_64/stable/Packages/docker-ce-cli-19.03.8-3.el7.x86_64.rpm systemctl start docker systemctl enable docker curl -o /usr/local/bin/docker-compose http://mirror.azure.cn/docker-toolbox/linux/compose/1.25.5/docker-compose-Linux-x86_64 chmod +x /usr/local/bin/docker-compose install pinpoint\r#\r\rcd /opt git clone https://github.com/naver/pinpoint-docker cd pinpoint-docker docker-compose pull docker-compose up -d\n#访问 demo: 打开页面之后点各个连接产生访问数据 http://${your host}:8000\nweb: http://${your host}:8079\nexample\r#\r\r最后这一张图片是显示APM信息的,打开的方式是框住主页的访问数据点图,选择之后就会打开新页面\r#\r\r"},{"id":42,"href":"/posts/devops/filebeat-%E6%8F%90%E5%8F%96java%E6%97%B6%E9%97%B4/","title":"Filebeat 提取java时间","section":"DevOps","content":"日志收集可能因机器性能而产生延迟，filebeat默认10秒扫描一次文件，收集时间集中也会导致日志按时间排序混乱，container处理器会降低日志写入时间的精度，所以提取java输出日志的时间有利于排序查看日志，java日志的写入时间大多精确到微秒，可能不足以正确排序，还可以借助filebeat 记录的offset排序.\n具体实现采用elasticsearch 的 ingest 节点功能，使用grok processor 从java日志中提取时间，\n定义 ingest pipeline, 注意时间格式:\r#\r\r参考：grok-patterns\nPUT _ingest/pipeline/get_java_time { \u0026quot;description\u0026quot;: \u0026quot;get java time\u0026quot;, \u0026quot;processors\u0026quot;: [ { \u0026quot;grok\u0026quot;: { \u0026quot;field\u0026quot;: \u0026quot;message\u0026quot;, \u0026quot;patterns\u0026quot;: [\u0026quot;%{TIMESTAMP_ISO8601:logtime}\u0026quot;] } } ] } 设置 mapping，明确时间格式，其它可以自行推断\r#\r\rPUT /filebeat-test { \u0026quot;mappings\u0026quot;: { \u0026quot;properties\u0026quot;: { \u0026quot;logtime\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;date\u0026quot;, \u0026quot;format\u0026quot;: \u0026quot;yyyy-MM-dd HH:mm:ss.SSS\u0026quot;} } } } 写入log:\r#\r\rPUT filebeat-test/_doc/1?pipeline=get_java_time { \u0026quot;log\u0026quot;: { \u0026quot;offset\u0026quot;: 0, \u0026quot;file\u0026quot;: { \u0026quot;path\u0026quot;: \u0026quot;/jsonfile/98f01b2565052a41ca90cf94442b4bde85e77547547da008c64b90956f723653/98f01b2565052a41ca90cf94442b4bde85e77547547da008c64b90956f723653-json.log\u0026quot; } }, \u0026quot;input\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;container\u0026quot; }, \u0026quot;fields\u0026quot;: { \u0026quot;stack\u0026quot;: \u0026quot;test\u0026quot;, \u0026quot;tenant\u0026quot;: \u0026quot;default\u0026quot;, \u0026quot;log_source\u0026quot;: \u0026quot;test\u0026quot;, \u0026quot;log_topic\u0026quot;: \u0026quot;target_index\u0026quot;, \u0026quot;environment\u0026quot;: \u0026quot;192.168.5.47:6444\u0026quot;, \u0026quot;path\u0026quot;: \u0026quot;/jsonfile/98f01b2565052a41ca90cf94442b4bde85e77547547da008c64b90956f723653/*.log\u0026quot;, \u0026quot;pod\u0026quot;: \u0026quot;rabbit-86c8bd6448-r7ffj\u0026quot;, \u0026quot;service\u0026quot;: \u0026quot;rabbit\u0026quot;, \u0026quot;log_type\u0026quot;: \u0026quot;application\u0026quot;, \u0026quot;type\u0026quot;: \u0026quot;message\u0026quot;, \u0026quot;namespace\u0026quot;: \u0026quot;test\u0026quot;, \u0026quot;container\u0026quot;: \u0026quot;rabbit\u0026quot; }, \u0026quot;ecs\u0026quot;: { \u0026quot;version\u0026quot;: \u0026quot;1.1.0\u0026quot; }, \u0026quot;agent\u0026quot;: { \u0026quot;version\u0026quot;: \u0026quot;7.5.2\u0026quot;, \u0026quot;type\u0026quot;: \u0026quot;filebeat\u0026quot;, \u0026quot;ephemeral_id\u0026quot;: \u0026quot;5adeace2-3d9d-4e97-9e1f-daae8ae1913c\u0026quot;, \u0026quot;hostname\u0026quot;: \u0026quot;node1\u0026quot;, \u0026quot;id\u0026quot;: \u0026quot;28ebc3e5-c3c1-4c7c-9a50-6204b7b39c00\u0026quot; }, \u0026quot;message\u0026quot;: \u0026quot;2020-07-21 07:25:16.840 [debug] \u0026lt;0.283.0\u0026gt; Lager installed handler error_logger_lager_h into error_logger\u0026quot;, \u0026quot;tags\u0026quot;: [ \u0026quot;test\u0026quot;, \u0026quot;test\u0026quot;, \u0026quot;rabbit\u0026quot;, \u0026quot;rabbit-86c8bd6448-r7ffj\u0026quot;, \u0026quot;rabbit\u0026quot;, \u0026quot;container\u0026quot;, \u0026quot;self\u0026quot; ], \u0026quot;host\u0026quot;: { \u0026quot;name\u0026quot;: \u0026quot;node1\u0026quot; }, \u0026quot;stream\u0026quot;: \u0026quot;stdout\u0026quot; } #查看结果，多了一个logtime字段，可用于确定日志时间和排序： GET filebeat-test/_doc/1\n{ \u0026quot;_index\u0026quot; : \u0026quot;filebeat-test\u0026quot;, \u0026quot;_type\u0026quot; : \u0026quot;_doc\u0026quot;, \u0026quot;_id\u0026quot; : \u0026quot;1\u0026quot;, \u0026quot;_version\u0026quot; : 2, \u0026quot;_seq_no\u0026quot; : 1, \u0026quot;_primary_term\u0026quot; : 1, \u0026quot;found\u0026quot; : true, \u0026quot;_source\u0026quot; : { \u0026quot;agent\u0026quot; : { \u0026quot;hostname\u0026quot; : \u0026quot;node1\u0026quot;, \u0026quot;id\u0026quot; : \u0026quot;28ebc3e5-c3c1-4c7c-9a50-6204b7b39c00\u0026quot;, \u0026quot;type\u0026quot; : \u0026quot;filebeat\u0026quot;, \u0026quot;ephemeral_id\u0026quot; : \u0026quot;5adeace2-3d9d-4e97-9e1f-daae8ae1913c\u0026quot;, \u0026quot;version\u0026quot; : \u0026quot;7.5.2\u0026quot; }, \u0026quot;log\u0026quot; : { \u0026quot;file\u0026quot; : { \u0026quot;path\u0026quot; : \u0026quot;/jsonfile/98f01b2565052a41ca90cf94442b4bde85e77547547da008c64b90956f723653/98f01b2565052a41ca90cf94442b4bde85e77547547da008c64b90956f723653-json.log\u0026quot; }, \u0026quot;offset\u0026quot; : 0 }, \u0026quot;message\u0026quot; : \u0026quot;2020-07-21 07:25:16.840 [debug] \u0026lt;0.283.0\u0026gt; Lager installed handler error_logger_lager_h into error_logger\u0026quot;, \u0026quot;tags\u0026quot; : [ \u0026quot;test\u0026quot;, \u0026quot;test\u0026quot;, \u0026quot;rabbit\u0026quot;, \u0026quot;rabbit-86c8bd6448-r7ffj\u0026quot;, \u0026quot;rabbit\u0026quot;, \u0026quot;container\u0026quot;, \u0026quot;self\u0026quot; ], \u0026quot;input\u0026quot; : { \u0026quot;type\u0026quot; : \u0026quot;container\u0026quot; }, \u0026quot;ecs\u0026quot; : { \u0026quot;version\u0026quot; : \u0026quot;1.1.0\u0026quot; }, \u0026quot;stream\u0026quot; : \u0026quot;stdout\u0026quot;, \u0026quot;host\u0026quot; : { \u0026quot;name\u0026quot; : \u0026quot;node1\u0026quot; }, \u0026quot;fields\u0026quot; : { \u0026quot;container\u0026quot; : \u0026quot;rabbit\u0026quot;, \u0026quot;path\u0026quot; : \u0026quot;/jsonfile/98f01b2565052a41ca90cf94442b4bde85e77547547da008c64b90956f723653/*.log\u0026quot;, \u0026quot;stack\u0026quot; : \u0026quot;test\u0026quot;, \u0026quot;log_topic\u0026quot; : \u0026quot;target_index\u0026quot;, \u0026quot;environment\u0026quot; : \u0026quot;192.168.5.47:6444\u0026quot;, \u0026quot;log_type\u0026quot; : \u0026quot;application\u0026quot;, \u0026quot;pod\u0026quot; : \u0026quot;rabbit-86c8bd6448-r7ffj\u0026quot;, \u0026quot;service\u0026quot; : \u0026quot;rabbit\u0026quot;, \u0026quot;log_source\u0026quot; : \u0026quot;test\u0026quot;, \u0026quot;namespace\u0026quot; : \u0026quot;test\u0026quot;, \u0026quot;type\u0026quot; : \u0026quot;message\u0026quot;, \u0026quot;tenant\u0026quot; : \u0026quot;default\u0026quot; }, \u0026quot;logtime\u0026quot; : \u0026quot;2020-07-21 07:25:16.840\u0026quot; } } "},{"id":43,"href":"/posts/devops/filebeat%E5%AE%B9%E5%99%A8%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E4%B9%8Bjava%E5%A4%9A%E8%A1%8C%E9%94%99%E8%AF%AF/","title":"Filebeat容器日志收集之java多行错误","section":"DevOps","content":"java日志出现错误的时候日志不再是一条一行，可能出来换行，这不适应默认的日志采集方式，正确的做法是使用规则确定行的开始，到下一个开始才是一行的结束，主流的日志收集插件都支持多行的配置定义。现在多用容器运行服务，日志输出到标准输出，这样使用日志采集工具去采集通过docker存储的日志文件，日志包含在json文本中，采集策略得对于调整。\n在filebeat中使用container解析器，设置多行合并参数即可，细节如下：\n开始流程：\r#\r\rfilebeat配置: filebeat.yml\r#\r\rfilebeat.config.inputs: enabled: true path: inputs.d/*.yml reload.enabled: true reload.period: 10s filebeat.config.modules.path: ${path.config}/modules.d/*.yml output.elasticsearch: enabled: false hosts: \u0026#39;127.0.0.1:9200\u0026#39; username: \u0026#39;${ELASTICSEARCH_USERNAME:}\u0026#39; password: \u0026#39;${ELASTICSEARCH_PASSWORD:}\u0026#39; output.file: enabled: false path: \u0026#34;/tmp/filebeat\u0026#34; filename: filebeat output.console: pretty: true enabled: true 日志收集配置： cat inputs.d/java.yml\r#\r\r- type: container multiline.pattern: \u0026#39;^2020-07-15\u0026#39; multiline.negate: true multiline.match: after json.message_key: log # json.keys_under_root: false overwrite_keys: true paths: - /var/log/err.log 日志示例：/var/log/err.log\r#\r\r{\u0026quot;log\u0026quot;:\u0026quot;2020-07-15 03:15:35 [INFO ] [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperyConfig' of type [com.wwtx.chinesemedicine.service.config.propery.ShiroProperyConfig$$EnhancerBySpringCGLIB$$b7434c17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\\n\u0026quot;,\u0026quot;stream\u0026quot;:\u0026quot;stdout\u0026quot;,\u0026quot;time\u0026quot;:\u0026quot;2020-07-15T03:15:35.819881438Z\u0026quot;} {\u0026quot;log\u0026quot;:\u0026quot;Logging initialized using 'class org.apache.ibatis.logging.stdout.StdOutImpl' adapter.\\n\u0026quot;,\u0026quot;stream\u0026quot;:\u0026quot;stdout\u0026quot;,\u0026quot;time\u0026quot;:\u0026quot;2020-07-15T03:15:35.968119304Z\u0026quot;} {\u0026quot;log\u0026quot;:\u0026quot;2020-07-15 03:15:36 [INFO ] [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\\n\u0026quot;,\u0026quot;stream\u0026quot;:\u0026quot;stdout\u0026quot;,\u0026quot;time\u0026quot;:\u0026quot;2020-07-15T03:15:36.428202427Z\u0026quot;} {\u0026quot;log\u0026quot;:\u0026quot;Registered plugin: 'AbstractSqlParserHandler(sqlParserList=null, sqlParserFilter=null)'\\n\u0026quot;,\u0026quot;stream\u0026quot;:\u0026quot;stdout\u0026quot;,\u0026quot;time\u0026quot;:\u0026quot;2020-07-15T03:15:36.51131214Z\u0026quot;} {\u0026quot;log\u0026quot;:\u0026quot;Parsed mapper file: 'class path resource [mapper/ArticlesHitsMapper.xml]'\\n\u0026quot;,\u0026quot;stream\u0026quot;:\u0026quot;stdout\u0026quot;,\u0026quot;time\u0026quot;:\u0026quot;2020-07-15T03:15:36.877433778Z\u0026quot;} {\u0026quot;log\u0026quot;:\u0026quot;[com.wwtx.chinesemedicine.service.dao.ArticlesDao.selectById] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.SelectById]\\n\u0026quot;,\u0026quot;stream\u0026quot;:\u0026quot;stdout\u0026quot;,\u0026quot;time\u0026quot;:\u0026quot;2020-07-15T03:15:36.963122274Z\u0026quot;} {\u0026quot;log\u0026quot;:\u0026quot;Parsed mapper file: 'class path resource [mapper/ArticlesMapper.xml]'\\n\u0026quot;,\u0026quot;stream\u0026quot;:\u0026quot;stdout\u0026quot;,\u0026quot;time\u0026quot;:\u0026quot;2020-07-15T03:15:36.99978738Z\u0026quot;} 启动运行：filebeat -e -strict.perms=false\r#\r\r采集后七条日志变成了两条\r#\r\r{ \u0026#34;@timestamp\u0026#34;: \u0026#34;2020-07-15T03:15:35.819Z\u0026#34;, \u0026#34;@metadata\u0026#34;: { \u0026#34;beat\u0026#34;: \u0026#34;filebeat\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;7.8.0\u0026#34; }, \u0026#34;input\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;container\u0026#34; }, \u0026#34;ecs\u0026#34;: { \u0026#34;version\u0026#34;: \u0026#34;1.5.0\u0026#34; }, \u0026#34;host\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;1b6f43203770\u0026#34; }, \u0026#34;agent\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;1b6f43203770\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;filebeat\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;7.8.0\u0026#34;, \u0026#34;hostname\u0026#34;: \u0026#34;1b6f43203770\u0026#34;, \u0026#34;ephemeral_id\u0026#34;: \u0026#34;ebaa6a78-bb7f-4399-89ca-baad22b8e535\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;d00521ba-c888-4bed-a7fb-ae20731871e9\u0026#34; }, \u0026#34;log\u0026#34;: { \u0026#34;offset\u0026#34;: 0, \u0026#34;file\u0026#34;: { \u0026#34;path\u0026#34;: \u0026#34;/var/log/err.log\u0026#34; }, \u0026#34;flags\u0026#34;: [ \u0026#34;multiline\u0026#34; ] }, \u0026#34;stream\u0026#34;: \u0026#34;stdout\u0026#34;, \u0026#34;json\u0026#34;: {}, \u0026#34;message\u0026#34;: \u0026#34;2020-07-15 03:15:35 [INFO ] [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean \u0026#39;shiroProperyConfig\u0026#39; of type [com.wwtx.chinesemedicine.service.config.propery.ShiroProperyConfig$$EnhancerBySpringCGLIB$$b7434c17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\\nLogging initialized using \u0026#39;class org.apache.ibatis.logging.stdout.StdOutImpl\u0026#39; adapter.\u0026#34; } { \u0026#34;@timestamp\u0026#34;: \u0026#34;2020-07-15T03:15:36.428Z\u0026#34;, \u0026#34;@metadata\u0026#34;: { \u0026#34;beat\u0026#34;: \u0026#34;filebeat\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;7.8.0\u0026#34; }, \u0026#34;input\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;container\u0026#34; }, \u0026#34;ecs\u0026#34;: { \u0026#34;version\u0026#34;: \u0026#34;1.5.0\u0026#34; }, \u0026#34;host\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;1b6f43203770\u0026#34; }, \u0026#34;agent\u0026#34;: { \u0026#34;hostname\u0026#34;: \u0026#34;1b6f43203770\u0026#34;, \u0026#34;ephemeral_id\u0026#34;: \u0026#34;ebaa6a78-bb7f-4399-89ca-baad22b8e535\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;d00521ba-c888-4bed-a7fb-ae20731871e9\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;1b6f43203770\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;filebeat\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;7.8.0\u0026#34; }, \u0026#34;log\u0026#34;: { \u0026#34;file\u0026#34;: { \u0026#34;path\u0026#34;: \u0026#34;/var/log/err.log\u0026#34; }, \u0026#34;flags\u0026#34;: [ \u0026#34;multiline\u0026#34; ], \u0026#34;offset\u0026#34;: 605 }, \u0026#34;stream\u0026#34;: \u0026#34;stdout\u0026#34;, \u0026#34;json\u0026#34;: {}, \u0026#34;message\u0026#34;: \u0026#34;2020-07-15 03:15:36 [INFO ] [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean \u0026#39;org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker\u0026#39; of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\\nRegistered plugin: \u0026#39;AbstractSqlParserHandler(sqlParserList=null, sqlParserFilter=null)\u0026#39;\\nParsed mapper file: \u0026#39;class path resource [mapper/ArticlesHitsMapper.xml]\u0026#39;\\n[com.wwtx.chinesemedicine.service.dao.ArticlesDao.selectById] Has been loaded by XML or SqlProvider or Mybatis\u0026#39;s Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.SelectById]\\nParsed mapper file: \u0026#39;class path resource [mapper/ArticlesMapper.xml]\u0026#39;\u0026#34; } "},{"id":44,"href":"/posts/devops/github-actions/","title":"Github Actions","section":"DevOps","content":"Getting started with a workflow\r#\r\rTo help you get started, this guide shows you some basic examples. For the full GitHub Actions documentation on workflows, see \u0026ldquo;Configuring workflows.\u0026rdquo;\nCustomizing when workflow runs are triggered\r#\r\r  Set your workflow to run on push events to the master and release/* branches\non: push: branches: - master - release/*   Set your workflow to run on pull_request events that target the master branch\non: pull_request: branches: - master   Set your workflow to run every day of the week from Monday to Friday at 2:00 UTC\non: schedule: - cron: \u0026quot;0 2 * * 1-5\u0026quot;   For more information, see \u0026ldquo;Events that trigger workflows.\u0026rdquo;\nRunning your jobs on different operating systems\r#\r\rGitHub Actions provides hosted runners for Linux, Windows, and macOS.\nTo set the operating system for your job, specify the operating system using runs-on:\njobs: my_job: name: deploy to staging runs-on: ubuntu-18.04 The available virtual machine types are:\n ubuntu-latest, ubuntu-18.04, or ubuntu-16.04 windows-latest or windows-2019 macos-latest or macos-10.15  For more information, see \u0026ldquo;Virtual environments for GitHub Actions.\u0026rdquo;\nUsing an action\r#\r\rActions are reusable units of code that can be built and distributed by anyone on GitHub. You can find a variety of actions in GitHub Marketplace, and also in the official Actions repository.\nTo use an action, you must specify the repository that contains the action. We also recommend that you specify a Git tag to ensure you are using a released version of the action.\n- name: Setup Node uses: actions/setup-node@v1 with: node-version: '10.x' For more information, see \u0026ldquo;Workflow syntax for GitHub Actions.\u0026rdquo;\nRunning a command\r#\r\rYou can run commands on the job\u0026rsquo;s virtual machine.\n- name: Install Dependencies run: npm install For more information, see \u0026ldquo;Workflow syntax for GitHub Actions.\u0026rdquo;\nRunning a job across a matrix of operating systems and runtime versions\r#\r\rYou can automatically run a job across a set of different values, such as different versions of code libraries or operating systems.\nFor example, this job uses a matrix strategy to run across 3 versions of Node and 3 operating systems:\njobs: test: name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }} runs-on: ${{ matrix.os }} strategy: matrix: node_version: ['8', '10', '12'] os: [ubuntu-latest, windows-latest, macOS-latest] steps: - uses: actions/checkout@v1 - name: Use Node.js ${{ matrix.node_version }} uses: actions/setup-node@v1 with: node-version: ${{ matrix.node_version }} - name: npm install, build and test run: | npm install npm run build --if-present npm test For more information, see \u0026ldquo;Workflow syntax for GitHub Actions.\u0026rdquo;\nRunning steps or jobs conditionally\r#\r\rGitHub Actions supports conditions on steps and jobs using data present in your workflow context.\nFor example, to run a step only as part of a push and not in a pull_request, you can specify a condition in the if: property based on the event name:\nsteps: - run: npm publish if: github.event == 'push' For more information, see \u0026ldquo;Contexts and expression syntax for GitHub Actions.\u0026rdquo;\n"},{"id":45,"href":"/posts/devops/github%E4%B8%8B%E8%BD%BD%E5%8A%A0%E9%80%9F/","title":"Github下载加速","section":"DevOps","content":"同步了一万多个github热门仓库，希望有你要的\nhttps://gitee.com/mirrors\n"},{"id":46,"href":"/posts/devops/knative-evening-cicd/","title":"Knative Evening Cicd","section":"DevOps","content":"最近我考虑轻量的CICD系统，就我了解的除了云服务就jekins集合git事件比较完善一点，其实开源的cicd系统并不多，大部分半开源的，jenkins运行几下就要五六G内存，实在不亲民。\n基于knative evening 事件系统可以很容易开发一个kubernetes原生的自动部署系统，甚至可以做更多 https://knative.dev/docs/eventing/samples/helloworld/helloworld-go/\n"},{"id":47,"href":"/posts/devops/linux-sysctl-conf-%E5%92%8C-limits-conf/","title":"Linux Sysctl Conf 和 Limits Conf","section":"DevOps","content":"【sysctl.conf工作原理】\r#\r\rsysctl命令被用于在内核运行时动态地修改内核的运行参数，可用的内核参数在目录/proc/sys中。它包含一些TCP/IP堆栈和虚拟内存系统的高级选项， 这可以让有经验的管理员提高引人注目的系统性能。用sysctl可以读取设置超过五百个系统变量。\n【sysctl.conf设置】\r#\r\r#优化TCP vi /etc/sysctl.conf #禁用包过滤功能 net.ipv4.ip_forward = 0 #启用源路由核查功能 net.ipv4.conf.default.rp_filter = 1 #禁用所有IP源路由 net.ipv4.conf.default.accept_source_route = 0 #使用sysrq组合键是了解系统目前运行情况，为安全起见设为0关闭 kernel.sysrq = 0 #控制core文件的文件名是否添加pid作为扩展 kernel.core_uses_pid = 1 #开启SYN Cookies，当出现SYN等待队列溢出时，启用cookies来处理 net.ipv4.tcp_syncookies = 1 #每个消息队列的大小（单位：字节）限制 kernel.msgmnb = 65536 #整个系统最大消息队列数量限制 kernel.msgmax = 65536 #单个共享内存段的大小（单位：字节）限制，计算公式64G102410241024(字节) kernel.shmmax = 68719476736 #所有内存大小（单位：页，1页 = 4Kb），计算公式16G102410241024/4KB(页) kernel.shmall = 4294967296 #timewait的数量，默认是180000 net.ipv4.tcp_max_tw_buckets = 6000 #开启有选择的应答 net.ipv4.tcp_sack = 1 #支持更大的TCP窗口. 如果TCP窗口最大超过65535(64K), 必须设置该数值为1 net.ipv4.tcp_window_scaling = 1 #TCP读buffer net.ipv4.tcp_rmem = 4096 131072 1048576 #TCP写buffer net.ipv4.tcp_wmem = 4096 131072 1048576 #为TCP socket预留用于发送缓冲的内存默认值（单位：字节） net.core.wmem_default = 8388608 #为TCP socket预留用于发送缓冲的内存最大值（单位：字节） net.core.wmem_max = 16777216 #为TCP socket预留用于接收缓冲的内存默认值（单位：字节） net.core.rmem_default = 8388608 #为TCP socket预留用于接收缓冲的内存最大值（单位：字节） net.core.rmem_max = 16777216 #每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目 net.core.netdev_max_backlog = 262144 #web应用中listen函数的backlog默认会给我们内核参数的net.core.somaxconn限制到128，而nginx定义的NGX_LISTEN_BACKLOG默认为511，所以有必要调整这个值 net.core.somaxconn = 262144 #系统中最多有多少个TCP套接字不被关联到任何一个用户文件句柄上。这个限制仅仅是为了防止简单的DoS***，不能过分依靠它或者人为地减小这个值，更应该增加这个值(如果增加了内存之后) net.ipv4.tcp_max_orphans = 3276800 #记录的那些尚未收到客户端确认信息的连接请求的最大值。对于有128M内存的系统而言，缺省值是1024，小内存的系统则是128 net.ipv4.tcp_max_syn_backlog = 262144 #时间戳可以避免序列号的卷绕。一个1Gbps的链路肯定会遇到以前用过的序列号。时间戳能够让内核接受这种“异常”的数据包。这里需要将其关掉 net.ipv4.tcp_timestamps = 0 #为了打开对端的连接，内核需要发送一个SYN并附带一个回应前面一个SYN的ACK。也就是所谓三次握手中的第二次握手。这个设置决定了内核放弃连接之前发送SYN+ACK包的数量 net.ipv4.tcp_synack_retries = 1 #在内核放弃建立连接之前发送SYN包的数量 net.ipv4.tcp_syn_retries = 1 #开启TCP连接中time_wait sockets的快速回收 net.ipv4.tcp_tw_recycle = 1 #开启TCP连接复用功能，允许将time_wait sockets重新用于新的TCP连接（主要针对time_wait连接） net.ipv4.tcp_tw_reuse = 1 #1st低于此值,TCP没有内存压力,2nd进入内存压力阶段,3rdTCP拒绝分配socket(单位：内存页) net.ipv4.tcp_mem = 94500000 915000000 927000000 #如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间。对端可以出错并永远不关闭连接，甚至意外当机。缺省值是60 秒。2.2 内核的通常值是180秒，你可以按这个设置，但要记住的是，即使你的机器是一个轻载的WEB服务器，也有因为大量的死套接字而内存溢出的风险，FIN- WAIT-2的危险性比FIN-WAIT-1要小，因为它最多只能吃掉1.5K内存，但是它们的生存期长些。 net.ipv4.tcp_fin_timeout = 15 #表示当keepalive起用的时候，TCP发送keepalive消息的频度（单位：秒） net.ipv4.tcp_keepalive_time = 30 #对外连接端口范围 net.ipv4.ip_local_port_range = 2048 65000 #表示文件句柄的最大数量 fs.file-max = 102400最后记得刷新立即生效 /sbin/sysctl -p\n【limits.conf工作原理】 limits.conf 文件实际是 Linux PAM（插入式认证模块，Pluggable Authentication Modules）中 pam_limits.so 的配置文件，而且只针对于单个会话。 当用户访问服务器，服务程序将请求发送到PAM模块，PAM模块根据服务名称在/etc/pam.d目录下选择一个对应的服务文件，然后根据服务文件的内容选择具体的PAM模块进行处理。\n【limits.conf设置】\n1）暂时生效，适用于通过 ulimit 命令登录 shell 会话期间\nulimit -SHn 65535\n2）永久生效，通过将一个相应的 ulimit 语句添加到由登录 shell 读取的文件之一（例如 ~/.profile），即特定于 shell 的用户资源文件；或者通过编辑/etc/security/limits.conf\n#比如添加到/etc/profile echo ulimit -SHn 65535 \u0026raquo; /etc/profile source /etc/profile\n#修改最大进程和最大文件打开数限制 vi /etc/security/limits.conf * soft nproc 11000 * hard nproc 11000 * soft nofile 655350 * hard nofile 655350"},{"id":48,"href":"/posts/devops/redhat-rhel8-%E5%AE%89%E8%A3%85-azure-cli/","title":"Redhat Rhel8 安装 Azure CLI","section":"DevOps","content":"The package is for el7, and there are assumptions based on el7 that are no longer true for RHEL8. For now, instead of running sudo yum install azure-cli, please follow the workaround to install azure-cli:\n$ sudo yum install python2 $ sudo yum install yum-utils $ sudo yumdownloader azure-cli $ sudo rpm -ivh --nodeps azure-cli-2.0.75-1.el7.x86_64.rpm Then edit the second line of /usr/bin/az (result of which az) to specify using python2: PYTHONPATH=/usr/lib64/az/lib/python2.7/site-packages python2 -sm azure.cli \u0026ldquo;$@\u0026rdquo;\n"},{"id":49,"href":"/posts/devops/%E4%BB%80%E4%B9%88%E6%98%AF%E7%8E%B0%E5%9C%BA%E5%8F%AF%E9%9D%A0%E6%80%A7%E5%B7%A5%E7%A8%8B/","title":"什么是“现场可靠性工程”？","section":"DevOps","content":"SRE(Site Reliability Engineering)从根本上说，当您要求软件工程师设计操作功能时会发生这种情况。软件工程师倾向于使用软件来解决历史上手工解决的问题。因此，当需要创建一个正式的团队来完成这项运营工作时，很自然地将“一切都视为软件问题”的方法与之一起运行。\n因此，SRE从根本上开展了一项历史上由运营团队完成的工作，但使用具有软件专业知识的工程师，并依赖于这些工程师本身就倾向于并且有能力替代人工自动化的事实。\n最重要的是，在谷歌，我们有一系列参与规则，以及SRE团队如何与他们的环境互动的原则 - 不仅是生产环境，还包括开发团队，测试团队，用户等等。上。这些规则和工作实践有助于我们继续主要从事工程工作而不是运营工作。\n这如何反映在SRE团队的日常工作和责任中？\n通常，SRE团队负责可用性，延迟，性能，效率，变更管理，监控，紧急响应和容量规划。\n今天许多运营团队都有类似的角色，有时没有我发现的一些部分。但SRE的做法却截然不同。这是由于几个原因造成的。\n排名第一的是招聘。我们聘请具有软件开发能力和倾向性的工程师。\n对于SRE，软件工程师是对编程语言，数据结构和算法以及性能有足够了解的人，能够编写有效的软件。至关重要的是，虽然软件可能在启动时完成任务，但即使任务增长，它也必须高效地完成该任务。\n通常情况下，我们雇佣大约50-50名拥有更多软件背景的人和拥有更多系统背景的人。这似乎是一个非常好的组合。\r#\r\r在我们的招聘过程中，我们会检查即将通过Google SWE栏的人员，以及谁还有一套对我们有用的补充技能。网络工程和Unix系统管理是我们看到的两个常见领域; 还有其他人。一个拥有良好软件技能但可能没有专业开发经验的人，他也是网络工程或系统管理方面的专家 - 我们雇用这些人进行SRE。通常，我们雇佣大约50-50名拥有更多软件背景的人和拥有更多系统工程背景的人。这似乎是一个非常好的组合。\n多年来我们一直认为这个招聘规则是不变的，即使在很难找到人的时候也是如此，为了增加招聘量，放松这个准则的压力很大。我们从未改变过这方面的标准。我认为，这对该集团来说非常重要。因为你最终得到的是一个团队，他们从根本上不会接受手工一遍又一遍地做事，而且还有一个与开发组织其他人有很多相同学术和知识背景的团队。这确保了SRE和SWE之间的相互尊重和相互融合。\n通常在操作角色中看到的与工程角色相反的事情之一是，不仅在职责方面存在鸿沟，而且在背景和理解方面存在鸿沟，最终还是尊重。对我来说，这是一种病态。\n在Google之外，我们经常观察到SWE和运营团队之间没有平等的尊重，这与他们经常有不同做法的事实相结合。这就是我们最终得到当今行业中存在的模型的方式，SWE团队在这些模型中写了一些东西并将其扔到了运营团队的墙上，然后运营团队试图让它运作，并且不能，并将其丢回，等等。\n在这种背景下，有趣的是，还要考虑使SRE成为现实的组织差异，而不仅仅是个人的工作习惯。\nSRE的一个关键特征是它们可以在SRE团队之间自由转移，并且该团队足够大，可以拥有充足的移动性。此外，SWE可以自由转到SRE。但是，一般来说，他们没有。\n这种行动自由的必要条件是一般的SWE，恰好是SWE的SRE，以及SRE中的系统工程师之间的补偿平等。他们所有的团体都遵循相同的绩效标准，相同的产出标准，相同的专业标准。SWE和SRE SWE团队之间有免费转移。关于SRE组中任何发现他们正在处理项目或“糟糕”系统的人的自由和轻松迁移的关键点在于它是一个极好的威胁，为开发团队提供了一个不构建系统的激励跑得太可怕了。\n这是我一直使用的威胁。说，“看，基本上，我们只雇用工程师进入SRE。如果你建立一个操作灾难的系统，SRE将会离开。我会让他们。” 当他们离开并且团队降到临界质量以下时，我们会将运营责任交给您，即开发团队。\n在谷歌，我们已将这种回应制度化，包括生产准备评估（PRR）。PRR通过在接受之前检查系统及其特征，以及通过共同承担责任来帮助我们避免陷入这种情况。这是我所知道的最简单，最有效的方法，可以消除任何关于现实世界中系统的幻想。它还为开发团队提供了一个巨大的激励，使其能够构建一个运行负载较低的系统。\n获得正确的激励措施非常重要。为此，为什么SRE很稀缺很重要？\n我们将分配SRE，以便他们做最好的事情。\r#\r\r在早期，我们没有太多的选择方式。我们不能像对它们的需求一样快地雇用SRE，因此总是存在稀缺性。我通过简单地说“我们将SRE分配到他们将要做的最好的地方”来利用它。仅运营项目的投资回报率相对较低。我没有把SRE放在那些上面。还有其他项目更加成熟和成熟，这些项目的SRE将具有更高的边际效益。从历史上看，我们所看到的是一个SRE将取代两个从事相同工作的SWE，部分原因是它们往往是生产相关技术和支持模型的专家。粗略地说，这是帮助SRE需求保持高位的方程式。\nSRE如何确保一旦启动，就能正确维护？\n我们非常关心保持SRE的工程功能，因此我们的经验法则是SRE团队必须至少花费50％的时间进行开发。\r#\r\rSRE每季度进行一次服务评估，旨在衡量团队的运营工作量。您可以习惯这种工作负载，并将大部分时间花在操作上。评论是外部检查，以确保如果您进入该模式，我们会注意到并采取纠正措施，这有时可能意味着解散团队！\n我们非常关心保持SRE的工程功能，因此我们的经验法则是SRE团队必须至少花费50％的时间来实际开发。那么你如何执行呢？首先，你必须测量它。在测量之后，您确保团队在开发工作上花费不到50％的时间用于重定向或解散。\n我不知道工业同类工作的50％分工。\n确实; 就谷歌的SRE与其他理念上的“SRE”工作之间的区别而言，这将是了解你所涉及的内容的简单方法之一。因此，当您与其他小组进行面谈，并与团队中您可能会加入的人员交谈时，请尝试了解他们最近编写了多少行代码，以及他们的工作时间花在了多少上？编写代码。如果他们的答案是“我上个月写了三个函数”，那么，你有答案。\n在Google SRE中，无论系统或软件背景如何，我们都会密切关注每个人的促销率，并将其与整体Eng and Eng Software Engineering促销价格进行比较，以确保它们在统计上相同。他们是。\r#\r\r您可以问的另一个问题是，他们是在SRE团队内部还是在SRE团队外部工作的资深开发人员？他们多久经常升职？他们的推广率是否与SWE团队相同？\n在Google SRE中，无论系统或软件背景如何，我们都会密切关注每个人的促销率，并将其与整体Eng and Eng Software Engineering促销价格进行比较，以确保它们在统计上相同。他们是。\n你能谈谈运营和发展小组中的一些更经典的冲突吗？\n开发团队的动机是启动功能并让用户采用该产品。而已！具有运维职责的团队的动机是确保事物不会在他们的手表上爆炸。所以这两个人肯定会处于紧张状态。\r#\r\r业界的一个典型冲突是，运营团队提出了一个长清单，开发团队必须经过这些清单才能说出支持的内容。这是一个重要的冲突，因为它是你清楚地看到两个群体的激励实际上是不同的地方之一。剥离其他所有东西时，开发团队的动机就是启动功能并让用户采用该产品。而已！如果你剥夺了其他所有东西，那么具有运营职责的团队的动机就是确保事情不会在他们的手表上爆炸。所以这两个人肯定会处于紧张状态。你是如何解决这个问题的？\n业务或产品必须确定系统的可用性目标。完成后，减去可用性目标就是我们所说的错误预算。\r#\r\r理想情况下，我们会花费所有不可用预算来承担我们推出的产品的风险，以便快速启动它们。\n我们在SRE中的解决方案 - 它运行得非常好 - 是一个错误预算。错误预算源于这一基本观察：100％是基本上所有事情的错误可靠性目标。也许心脏起搏器是一个很好的例外！但是，一般而言，对于您可以想到的任何软件服务或系统，100％不是正确的可靠性目标，因为没有用户可以区分100％可用的系统，比如99.999％可用。因为通常在用户和正在运行的软件服务之间存在许多其他因素，所以其他所有可能出错的噪音都会丢失边际差异。\n如果100％是系统的错误可靠性目标，那么系统的正确可靠性目标是什么？我建议这是一个产品问题。这根本不是技术问题。这是一个问题，考虑到用户支付的金额，无论是直接还是间接，以及他们的替代品是什么，用户会对此感到满意。\n业务或产品必须确定系统的可用性目标。一旦你完成了这个，减去可用性目标就是我们所说的错误预算; 如果99.99％可用，则意味着它不可用0.01％。现在我们被允许有0.01％的不可用性，这是一个预算。我们可以把它花在任何我们想要的东西上，只要我们不超支它。\n那么我们想要在错误预算上花多少钱？开发团队希望启动功能并获得用户。理想情况下，我们会花费所有不可用预算来承担我们推出的产品的风险，以便快速启动它们。这个基本前提描述了整个模型。一旦你以这种方式概念化SRE活动，那么你说，哦，好吧，所以有分阶段推出或1％实验的东西，所有这些都是让我们的不可用预算少于风险的方法，以便我们可以采取我们推出的机会更多，因此我们可以更快地推出。听起来不错。\n这种方法还有另一个好的结果，即如果服务本身就位于那里并抛出错误，你知道，.01％的时间，你将整个不可用预算都用在什么东西上。因此，您在开发领域和SRE团队中都有动力来提高服务的本地稳定性，这样您就可以节省预算，例如功能发布。\n另一个关键优势是SRE不再需要对开发团队正在做什么做出任何判断。SRE测量和执行，但我们不评估或判断。我们的看法是“只要您测量它的可用性高于您的服务水平目标（SLO），您显然做得很好。您正在做出关于风险有多大的准确决策，您应该运行多少实验等等。所以你要把自己踢出去，发动任何你想要的东西。我们不会干涉。“ 这一直持续到你打破预算为止。\n一旦你预算完毕，我们就不知道你的测试情况如何。开发团队和SRE团队之间可能存在巨大的信息不对称关于功能，风险程度，测试程度，工程师是谁等等。我们通常不知道，我们猜测也不会有成效。所以我们甚至都不去尝试。我们可以恢复可用性级别的唯一可靠方法是停止所有启动，直到您获得了不可用性。这就是我们所做的。当然，这种情况很少发生，但确实发生了。我们只是冻结启动，而不是P0错误修复 - 这些东西本身代表了改进的可用性。\n这有两个很好的效果。其一，SRE并不在这场猜测开发团队正在做什么的游戏中。因此，不需要对抗关系或信息隐藏或其他任何东西。那正是你想要的。\n另一件事，也就是我没想到但事实证明非常重要的一点是，一旦开发团队发现这就是游戏的运作方式，他们就会自我警察。通常，对于我们在Google运营的那种系统，它不是一个开发团队; 它是一群致力于不同功能的小型开发团队。如果从个体开发者的角度考虑这个问题，这样的人可能不会想要一个测试不佳的功能来破坏错误预算并阻止一周后出现的酷炫发布。鼓励开发人员找到团队的总经理，以确保在发布之前完成更多测试。通常，开发团队内部的信息不对称程度远远低于开发团队和SRE团队之间的信息不对称性，\nSRE的道德权威说不，目前在谷歌已经确立。\n这至关重要。\n外部组织如何启动SRE功能有助于获得此权限？\n道德权威是一个物理问题。确定目标SLO的前期至关重要，因为这是您同意测量服务的标准。那时SRE只是衡量和执行我们已经同意的事情。非常方便的位置。\n就你如何实际产生道德权威而言，这很容易。您，开发团队已经告诉我们这项服务的SLO必须是什么，现在我们低于它。我们无能为力; 这是一个物理问题。你现在无法改变主意。我们已经确定这个数字符合用户的最佳利益 - 目前，数据清楚地表明我们低于这个数字。所以我们必须等到我们回到可用性级别。您可以使用这段等待时间来确保您的下一个版本不会再次爆炸。\n我们来谈谈SRE团队的生命周期。在生命周期中，参与度如何变化？\n今天通常采用的方式是通过能力成熟度 模型。有很多，他们都大多说同样的事情。他们都从基本问题开始，你知道你作为一个团队在做什么吗？或者你只有一个人的集合，每个人都知道问题空间的一部分？大多数球队都是从那时开始的; 你有一群人，每个人都知道一些事情，当你需要做某事时，你会尝试让具有足够综合专业知识的人能够完成你所需要的。\n通过这种方式，当服务出现问题时，结果取决于人员是谁。这就是我们所说的混乱局面。随着团队的成熟，你会从混乱变为定义; 也就是说，你开始说“这是我们做的标准事情，并且它们也有记录，以便团队中的任何人都能做到。” 您不再依赖于碰巧在那里的个人的随机选择。从那里，您可以进行优化，实际测量它们。既然你已经说过，“这就是应该发生的事情”，你看看实际发生了什么，并将它与应该发生的事情进行比较。然后，您可以更改说明或更改人们的行为方式或两者，并永久重复或直到完成。\n因此，任何随着服务规模线性扩展人数的事情都将失败。\r#\r\r我们在季度服务评论（前面讨论过）中衡量的一个因素是SRE的环境是什么样的。无论他们说什么，他们有多开心，他们是否喜欢他们的开发对手等等，关键是要实际衡量他们的时间。这有两个重要原因。一，因为你想尽快发现团队已经把他们的大部分时间花在了运营工作上。您必须在此时停止并更正它，因为每个Google服务都在增长，而且通常，它们的增长速度都超过了人数的增长速度。因此，任何随着服务规模线性扩展人数的事情都将失败。如果您将大部分时间花在操作上，那么这种情况就无法自我纠正！你最终会遇到危机，你现在把所有的时间都用在了运营上，但仍然不够，然后服务要么停机或者出现另一个重大问题。\n第二个是，这是一个工程团队。如果你看一下团队中的人，他们的职业生涯和他们的目标不会通过绕过关票或配置资源来进一步发展。他们拥有他们和经理想要发展的工程技能和专业知识。这是开发的，因为他们是软件工程师，通过编写软件并与更高级，经验丰富，能力强的人合作，并学习。所以你必须确保他们真的在做那些事情。\n让我们讨论监督，一个核心的SRE责任。你能谈谈SRE和监控背后的哲学吗？\n一种经典的监控方式是，你有一些看到价值或条件或其他东西的东西，当它看到有趣的东西时，会吐出一封电子邮件。这是我所知道的最常见的监控。但是电子邮件不是正确的方法; 如果你要求人阅读电子邮件并决定是否需要做某事，那你就犯了一个错误。答案应该是，人类永远不会在警报领域解释任何东西。解释由我们编写的软件完成。我们只是在需要采取行动时得到通知。\n因此，在我看来，只有三种有效的监控输出。有警报，说人类现在必须采取行动。正在发生或即将发生的事情，人类需要立即采取行动来改善这种状况。\n第二类是门票。人类需要采取行动，但不是立即采取行动。您可能有几个小时，通常是几天，但需要一些人为操作。\n第三类是记录。没有人需要查看此信息，但它可用于诊断或法医目的。期望是没有人读它。\n我从未见过监测输出不属于这三类之一。我经常看到人们在实施监控时会犯错，这样他们就会生成日志，但会将其视为票证。这是一个很大的错误。你通常发现它的一个地方是：“哦，是的，我们不得不花费大量时间来审查我们的监控系统吐出的所有这些东西。” 好吧，不要那样做。这不会扩展，因为你有更多的用户和更多的实例，这些东西的数量将增加，质量将下降。您需要开发一个系统，无论是监视配置还是解析器或其他什么，您需要编写一个系统，将该输出转换为三个类别之一。\n因此，监控可以帮助您注意事情何时失败，还可以帮助您更快地解决问题？\n是的。更一般地说，当我们谈论整体系统可用性时，它有两个基本组件。失败之间有平均时间 - 事情停止工作的频率。然后有平均时间进行修复 - 一旦它停止工作，需要多长时间才能修复它？\n这两个功能的一些功能是您的可用性。从中脱颖而出，有两种方法可以建立一个高度可用的系统。（当然，如果数字堆积起来，这些极端之间的任何地方也都可以。）你可以很少失败，或者当它失败时你能够很快地修复它。Google因其极高的可用性而享有当之无愧的声誉。而SRE得到的方式就是两者兼而有之。\n在第一级 - 这是我们花费大部分时间的地方 - 我们构建了能够容忍失败的系统。我们在优雅退化以及深度防御方面谈论这一点。它们是同一事物的两种不同变体。事情会失败。重要的是，当事情发生故障时，用户体验不会有意义地降级，让您有足够的时间来修复它们，而不会出现用户可见的问题。因此，对于大多数故障，MTTR是毫秒，因为它是自动化的。通常，没有人会在不到两分钟的时间内对出错的事情作出反应。因此，如果您想要在没有用户影响的情况下失败的事情，获得它们的最佳方法是自动修复它们。我们通过深度防御来做到这一点。\n系统的所有不同层都设计为容忍点故障，甚至是数据中心大小的点故障，而不会影响用户体验。一切都是自动发生的。没有人抬起手指，没有人经常需要知道它。它刚刚发生。这是深度防守。\n优雅降级是指在不完全崩溃的情况下容忍失败的能力。例如，如果用户的网络运行缓慢，环聊视频系统将降低视频分辨率并保留音频。对于Gmail，速度较慢的网络可能意味着无法加载大型附件，但用户仍可以阅读其电子邮件。所有这些都是自动回复，无需人工执行任何操作即可为您提供高可用性。\n人类必须做某事的情况怎么样？\n一旦人类实际上必须做某事，那么MTTR很重要。特别是，“R”部分并不意味着人类已经获得了页面或者人类已经对页面进行了分类，或者甚至是人类已经使用键盘来做某事。这是人类正确评估情况并采取适当的纠正措施，而不是诊断错误或采取无效措施。\n在其他行业，您有操作手册; 我们有运营就绪演习，这就是我们如何确保人们知道如何正确应对各种紧急情况。然而，如果你让一群软件工程师在一起并说“我们将要进行操作准备演练”，那么指令膜将会滑落到他们的眼睛上，无论你是否知道，这将有效地成为谈话的终点是不是。解决这个问题的一种可能方法是从角色扮演游戏中获取灵感。软件中有很多人在某个时刻玩过角色扮演游戏，其余人一般都至少听过这些游戏。\n因此，虽然没有人愿意进行战斗准备演习，但每个人都想参加“不幸之轮”游戏。在这种背景下，不幸之轮只不过是一个统计调整的选择机制，用于挑选灾难，其次是角色扮演，其中一个人扮演地下城主人的角色 - 在这种情况下，“系统” - 和另一个人扮演待命工程师的角色。文档人员会收听，我们会记录场景中发生的事情，随叫随到的工程师说要做什么，然后我们将这与他们实际应该做的事情进行比较。然后，我们将调整我们的剧本 - 我们的操作手册术语 - 为理想的答案提供额外的信息或背景。\n使SRE在运营领域发挥作用的部分原因是，您可以在紧急情况下对人们进行正确的响应，直到他们不必考虑它为止。我们以一种文化兼容的方式做到这一点：如果你看过SRE团队这样做，人们真的很期待这些练习，因为这是一个展示你所知道的东西的机会，而且很有趣。\n我们谈到了SRE的一些责任，但不是全部。容量规划怎么样？\n可以将需求预测和容量规划视为确保您对预测的未来需求有足够的防御深度。没有什么特别之处，除了大多数公司似乎没有这样做。\n谷歌SRE和其他工作地点之间的另一个区别问题是，你在N + M运行你的服务是什么？一个常见的答案是“我不知道，因为我们从未评估过我们的服务能力是什么”。\n他们可能不会这么说。但是，如果他们不能告诉你他们如何对他们的服务进行基准测试，以及他们如何衡量其对100％或130％的负载的响应，以及他们在高峰需求时有多少备用容量，那么他们就不知道了。在没有需求预测或容量规划的情况下，您可以预期频繁停机和大量紧急情况。\n在传统模型中，IT是成本中心。它们基本上是关于防止损失，并且因为它们被视为成本中心，所以没有特别的动机去改变。在SRE模型中，我们有能力提高效率，扩展容量，并有助于提高产品的运行效率。在这个模型中，高级决策者的动机是什么？\n因此，有两层激励措施可以提高效率。一个是SRE人数不是免费的。产品区域获得一定数量的人数。他们可以将它们花在开发者身上，也可以将它们花在SRE上。理论上，他们将在SRE上花费尽可能多的时间来获得最佳特征速度，同时满足他们的服务SLO。事实上，这实际上是我们希望他们在SRE上花多少钱 - 不多也不少。因此，这是他们对自己的SRE节俭的一种激励，同时也要小心他们的团队编写的代码，这样就不会产生很多SRE团队需要处理的工作。另外，如果您构建了错误的代码，那么所有优秀的SRE都会离开，您最终要么自己运行它，要么最好还有一个愿意冒险的初级团队。\n第二点是，一旦您意识到容量对可用性至关重要，那么您就会意识到SRE团队必须负责容量规划，这意味着他们还必须负责配置和变更管理。因此，您可以根据服务的工作方式以及配置的方式获得利用率。因此，根据定义，SRE必须参与任何有关利用的工作，因为它们最终会控制供应。因此，通过密切关注您的配置策略，您可以获得非常大的总成本杠杆。\n由于竞争环境的加剧，Google SRE是否遭受了损失？其他组织使用“SRE”一词怎么样？\n一般来说，我们发现当人们离开其他组织时，他们通常会回来。目前，谷歌SRE与其他公司如何做的事情有所不同，我希望这些公司能够采用这些公司。这只是运行事物的好方法。\n它当然需要大量的管理支持和依赖数据来做出决策。当问题进入高级管理层时，已经发生了几次; 在这种情况下，技术基础设施副总裁，最终，首席执行官。他们总是支持SRE团队，因此人们甚至不再费心去尝试了。您可能无法在所有公司获得这种管理支持。\n关于差异化的话题，您是否熟悉术语“DevOps”？\n我很熟悉。几年前我开始遇到它。它似乎描述了那些正在做与SRE类似的事情的人，并且确实让我们认为让开发人员加入我们的运营团队，我认为这非常好。\n该术语不具有统一的定义。让开发人员与运营人员密切合作是个好主意。问题是它会影响运营，如果你购买SRE的方式，那就是错误的愿景。\n是的，“DevOps”在实践中的意义似乎存在很多差异。在过去的15年中，我们已经迭代到当前的SRE定义，关键部分包括状态平价，自由转移，稀缺性，运营负载上限，错误预算等。我已经看到这个定义在谷歌的实践中非常有效，我希望我们会继续发展它，使这个角色对开发人员更具吸引力，同时使其更有效地运行高效，高可用性，大型系统。\n在过去的15年中，我们已经迭代到当前的SRE定义。\r#\r\r我希望我们将继续发展它，使这个角色对开发人员更具吸引力，同时使其更有效地运行高效，高可用性，大规模的系统。\n"},{"id":50,"href":"/posts/devops/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95vs%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/","title":"性能测试vs压力测试","section":"DevOps","content":"软件测试包括不同的测试实践，比如单元测试、集成测试、UAT测试和可访问性测试等。每种测试实践在软件开发生命周期(SDLC)中都有重要的地位和作用。\n在不同类型的测试中，一些测试有助于改善应用程序的性能，比如性能测试、压力测试和负载测试。虽然这些测试的目的是改善系统性能，但是每种测试实践都有不同的策略。因此，测试应用程序的性能时，了解这些测试实践之间的区别并执行合适的测试显得至关重要。\n质量保证工程师常常为选择合适的性能测试以改善应用程序的行为而感到困惑。有许多测试实践可以改善应用程序的性能，比如性能测试、负载测试和压力测试。\n虽然这几种测试的共同目的是改善应用程序的行为，但并非每种测试在每种情况下都可以进行。这几种测试存在几处差异，质量保证团队要有所了解，以便在合适场景下进行合适类型的测试。\n一、什么是性能测试?有什么好处?\n性能测试是重要的软件测试类型之一，有助于确定应用程序在工作负载下的性能，比如响应能力、可扩展性、可靠性、速度和稳定性等。性能测试对发现错误毫无帮助，但可以消除性能瓶颈，并改善整个应用程序的性能。\n性能测试的好处\n有助于评估软件的稳定性\n确保在开发生命周期的早期阶段发现性能缺陷\n帮助团队了解应用程序在正常负载下如何运行\n确保找出差异并消除差异\n帮助验证应用程序的功能特性\n二、什么是压力测试?有什么好处?\n压力测试是属于性能测试的一种测试类型，有助于检测应用程序的断点，并确定应用程序所能处理的最大负载。\n换句话说，压力测试可以确定应用程序在繁重工作负载下的稳健性和错误处理能力。压力测试是通过考虑更多的数据和许多用户来进行的，旨在确定系统在压力下的行为。\n压力测试的好处\n有助于验证系统压力过大时数据会不会受到破坏\n确保发现缺陷和同步问题\n验证故障期间的传递和错误消息传递功能\n通过克服软件故障的风险来确保交付可靠的软件\n三、什么是负载测试?有什么好处?\n负载测试是一种软件测试，有助于确定应用程序在实际负载情形下的行为。在这种类型的测试中，应用程序在多个用户环境下进行测试。\n负载测试的目的是开发一种在意外的极端负载情形下保持稳定的应用程序。这种测试方法又叫耐久测试。可以通过选择合适的自动化工具轻松执行这种测试。\n负载测试的好处\n帮助提高客户满意度\n确保降低故障成本\n确保提高应用程序的可扩展性\n有助于在部署到生产环境之前确定与性能有关的瓶颈\n确保尽量减少系统停机错误\n结束语\n在SDLC流程中，每个测试实践都必不可少，尤其是为了提高客户满意度，交付响应能力、可扩展性、可靠性、速度和稳定性等方面有所保证的应用程序，质量保证工程师需要根据场景，执行性能测试、负载测或压力测试。\n然而，要交付符合性能度量指标的应用程序，应充分利用独立质量保证测试服务提供商提供的性能测试服务。\n"},{"id":51,"href":"/posts/diary/3rvrarmr/","title":"3 R( Vr, Ar, Mr)","section":"日记","content":"3R(VR,AR,MR)\r#\r\rVR(virtual reality，虚拟现实)：可以让用户沉浸其中的由计算机生成的三维虚拟环境，并与现实环境相隔绝。\nAR(augmented reality，增强现实)：在真实环境中增添或者移除由计算机实时生成的可以交互的虚拟物体或信息。\nMR(mixed reality，混合现实)：通过全息图，将现实环境与虚拟环境相互混合，也可以看成是VR与AR的混合。\n"},{"id":52,"href":"/posts/diary/difference-of-game-match-competition-and-contest/","title":"Difference of Game, Match, Competition and Contest","section":"日记","content":"【1】game： 指决定胜负的比赛，游戏，通常有一定的规则，参加者必须遵守，且多以个人对抗或集体对抗形式根据一定的规则进行的比赛。\n【2】match： 多指重要的，参加队数较多的大型体育运动项目比赛，隐含势均力敌意味。\n【3】competition： 多指体育运动中的各项比赛、角逐，也指知识、技巧等方面的竞赛。\n【4】contest： 多指在音乐、书法、演讲等方面所进行的比赛或竞争。其结果，由评判委员会裁决。\n"},{"id":53,"href":"/posts/diary/kubernetes-flannel-%E7%BD%91%E7%BB%9C%E6%B5%81%E7%A8%8B%E7%86%9F%E7%BB%83/","title":"Kubernetes Flannel 网络流程熟练","section":"日记","content":" pod IP docker 把容器网络命名空间隐藏起来了，查看容器网络需要把对应的网络命名空间显示出来： 容器Id:10316\n把容器网络命名空间链接到主机,这样主机就可以管理容器网络 ln -s /proc/10316/ns/net /var/run/netns/10316 查看网络命名空间  ip netns 在网络命名空间内执行命令  [root@k8s01 ~]# ip netns exec 10316 ip a 1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 3: eth0@if40: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1450 qdisc noqueue state UP link/ether 0a:58:0a:f4:02:f6 brd ff:ff:ff:ff:ff:ff link-netnsid 0 inet 10.244.2.246/24 scope global eth0 valid_lft forever preferred_lft forever inet6 fe80::885b:baff:fed8:f556/64 scope link tentative dadfailed valid_lft forever preferred_lft forever [root@k8s01 ~]# ip netns exec 10316 ip route default via 10.244.2.1 dev eth0 10.244.0.0/16 via 10.244.2.1 dev eth0 10.244.2.0/24 dev eth0 proto kernel scope link src 10.244.2.246 看到与容器网卡对接的主机网卡\n[root@k8s01 ~]# ip netns exec 10316 ethtool -S eth0 NIC statistics: peer_ifindex: 40 [root@k8s01 ~]# ip link show | grep ^40: 40: vethfac0226a@if3: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1450 qdisc noqueue master cni0 state UP mode DEFAULT flannel网络和网络插件；\n10: flannel.1: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1450 qdisc noqueue state UNKNOWN link/ether de:a4:50:24:9d:11 brd ff:ff:ff:ff:ff:ff inet 10.244.2.0/32 scope global flannel.1 valid_lft forever preferred_lft forever inet6 fe80::dca4:50ff:fe24:9d11/64 scope link valid_lft forever preferred_lft forever 11: cni0: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1450 qdisc noqueue state UP qlen 1000 link/ether 0a:58:0a:f4:02:01 brd ff:ff:ff:ff:ff:ff inet 10.244.2.1/24 scope global cni0 valid_lft forever preferred_lft forever inet6 fe80::4c4c:4bff:fe34:c300/64 scope link valid_lft forever preferred_lft forever 主机路由：\n[root@k8s01 ~]# ip route show default via 172.20.10.254 dev ens32 proto static metric 100 10.244.0.0/24 via 10.244.0.0 dev flannel.1 onlink 10.244.1.0/24 via 10.244.1.0 dev flannel.1 onlink 10.244.2.0/24 dev cni0 proto kernel scope link src 10.244.2.1 10.244.3.0/24 via 10.244.3.0 dev flannel.1 onlink 172.17.0.0/16 dev docker0 proto kernel scope link src 172.17.0.1 172.20.0.0/16 dev ens32 proto kernel scope link src 172.20.8.1 metric 100 "},{"id":54,"href":"/posts/diary/kubernetes%E6%8E%A7%E5%88%B6%E6%9C%BA%E5%88%B6%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/","title":"Kubernetes控制机制设计原则","section":"日记","content":" **控制逻辑应该只依赖于当前状态。**这是为了保证分布式系统的稳定可靠，对于经常出现局部错误的分布式系统，如果控制逻辑只依赖当前状态，那么就非常容易将一个暂时出现故障的系统恢复到正常状态，因为你只要将该系统重置到某个稳定状态，就可以自信的知道系统的所有控制逻辑会开始按照正常方式运行。 **假设任何错误的可能，并做容错处理。**在一个分布式系统中出现局部和临时错误是大概率事件。错误可能来自于物理系统故障，外部系统故障也可能来自于系统自身的代码错误，依靠自己实现的代码不会出错来保证系统稳定其实也是难以实现的，因此要设计对任何可能错误的容错处理。 **尽量避免复杂状态机，控制逻辑不要依赖无法监控的内部状态。**因为分布式系统各个子系统都是不能严格通过程序内部保持同步的，所以如果两个子系统的控制逻辑如果互相有影响，那么子系统就一定要能互相访问到影响控制逻辑的状态，否则，就等同于系统里存在不确定的控制逻辑。 **假设任何操作都可能被任何操作对象拒绝，甚至被错误解析。**由于分布式系统的复杂性以及各子系统的相对独立性，不同子系统经常来自不同的开发团队，所以不能奢望任何操作被另一个子系统以正确的方式处理，要保证出现错误的时候，操作级别的错误不会影响到系统稳定性。 **每个模块都可以在出错后自动恢复。**由于分布式系统中无法保证系统各个模块是始终连接的，因此每个模块要有自我修复的能力，保证不会因为连接不到其他模块而自我崩溃。 **每个模块都可以在必要时优雅地降级服务。**所谓优雅地降级服务，是对系统鲁棒性的要求，即要求在设计实现模块时划分清楚基本功能和高级功能，保证基本功能不会依赖高级功能，这样同时就保证了不会因为高级功能出现故障而导致整个模块崩溃。根据这种理念实现的系统，也更容易快速地增加新的高级功能，因为不必担心引入高级功能影响原有的基本功能。  "},{"id":55,"href":"/posts/diary/openvpn%E5%AE%89%E8%A3%85%E5%8F%8A%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE%E5%88%9B%E5%BB%BA/","title":"Openvpn安装及客户端配置创建","section":"日记","content":"文档即命令行\r#\r\rOVPN_DATA=\u0026quot;vpn-data\u0026quot; docker volume create --name $OVPN_DATA docker run -v $OVPN_DATA:/etc/openvpn --log-driver=none --rm # udp://112.60.90.13:1194 指定服务器地址协议端口, 默认1194 dockerhub.azk8s.cn/kylemanna/openvpn ovpn_genconfig -u udp://112.60.90.13 docker run -v $OVPN_DATA:/etc/openvpn -it --log-driver=none --rm dockerhub.azk8s.cn/kylemanna/openvpn ovpn_initpki docker run -v $OVPN_DATA:/etc/openvpn -d -p 1194:1194/udp --cap-add=NET_ADMIN dockerhub.azk8s.cn/kylemanna/openvpn docker run -v $OVPN_DATA:/etc/openvpn --log-driver=none --rm -it dockerhub.azk8s.cn/kylemanna/openvpn easyrsa build-client-full wangyijie nopass docker volume ls docker volume inspect vpn-data cd /var/lib/docker/volumes/vpn-data/_data ls pki/private/wangyijie.key docker run -v $OVPN_DATA:/etc/openvpn --log-driver=none --rm dockerhub.azk8s.cn/kylemanna/openvpn ovpn_getclient wangyijie \u0026gt; /data/wangyijie.ovpn cat /data/wangyijie.ovpn 注意事项：\r#\r\r 默认是全局流量走vpn, 如果不想全部走vpn, 需要在客户端配置里面注释 #redirect-gateway def1， 在服务器配置注释掉dns代理，添加希望走vpn的配置，比如我的服务器在172.31.250.0/25，我就只路由这个网段  客户指定路由我配置没有生效，如果你知道是什么原因，请给我留言  "},{"id":56,"href":"/posts/diary/%E4%BE%BF%E6%8D%B7golang%E5%BC%80%E5%8F%91/","title":"便捷golang开发","section":"日记","content":"go语言之旅：https://tour.go-zh.org/ 如何使用go编程：https://go-zh.org/doc/code.html 时效go编程：https://go-zh.org/doc/effective_go.html golang安装包下载：https://gomirrors.org/ go mod 代理地址：https://goproxy.io/\nbash\r#\r\r# Enable the go modules feature export GO111MODULE=on # Set the GOPROXY environment variable export GOPROXY=https://goproxy.io PowerShell\r#\r\r# Enable the go modules feature $env:GO111MODULE=on # Set the GOPROXY environment variable $env:GOPROXY=https://goproxy.io Go version \u0026gt;= 1.13\r#\r\rgo env -w GOPROXY=https://goproxy.io, direct # Set environment variable allow bypassing the proxy for selected modules go env -w GOPRIVATE=*.corp.example.com "},{"id":57,"href":"/posts/diary/%E6%83%85%E5%A2%83%E5%AD%A6%E4%B9%A0%E7%90%86%E8%AE%BA/","title":"情境学习理论","section":"日记","content":"情境学习理论认为，学习不仅仅是一个个体性的意义建构的心理过程，而更是一个社会性的、实践性的、以差异资源为中介的参与过程。知识的意义连同学习者自身的意识与角色都是在学习者和学习情境的互动、学习者与学习者之间的互动过程生成的，因此学习情境的创设就致力于将学习者的身份和角色意识、完整的生活经验、以及认知性任务重新回归到真实的、融合的状态，由此力图解决传统学校学习的去自我、去情境的顽疾。\n正是基于对知识的社会性和情境性的主张，情境学习理论告诉我们：学习的本质就是对话，在学习的过程中所经历的就是广泛的社会协商。而“学习的快乐就是走向对话”。\n简单说来，情境学习是指在要学习的知识、技能的应用情境中进行学习的方式。也就是说，你要学习的东西将实际应用在什么情境中，那么你就应该在什么样的情境中学习这些东西。“在哪里用，就在哪里学。”譬如，你要学习做菜，就应该在厨房里学习，因为你以后炒菜就是在厨房里。再如，你要学习讨价还价的技巧，就应该在实际的销售场合学习，因为这一技巧最终是用在销售场合的。\n为什么要这样学习呢？因为在莱夫和温格看来，学习不能被简单地视为把抽象的、去情境化的知识从一个人传递给另外一个人；学习是一个社会性的过程，知识在这个过程中是由大家共同建构的；这样的学习总是处于一个特定的情境中，渗透在特定的社会和自然环境中。\n"},{"id":58,"href":"/posts/diary/%E6%9C%80%E5%85%A8%E7%9A%84%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8D%8F%E8%AE%AE%E7%AB%AF%E5%8F%A3%E5%AF%B9%E7%85%A7%E8%A1%A8/","title":"最全的计算机协议端口对照表","section":"日记","content":"最全的计算机协议端口对照表\r#\r\recho 7/tcp\necho 7/udp\ndiscard 9/tcp sink null\ndiscard 9/udp sink null\nsystat 11/tcp users #Active users\nsystat 11/udp users #Active users\ndaytime 13/tcp\ndaytime 13/udp\nqotd 17/tcp quote #Quote of the day\nqotd 17/udp quote #Quote of the day\nchargen 19/tcp ttytst source #Character generator\nchargen 19/udp ttytst source #Character generator\nftp-data 20/tcp #FTP, data\nftp 21/tcp #FTP. control\nssh 22/tcp #SSH Remote Login Protocol\ntelnet 23/tcp\nsmtp 25/tcp mail #Simple Mail Transfer Protocol\ntime 37/tcp timserver\ntime 37/udp timserver\nrlp 39/udp resource #Resource Location Protocol\nnameserver 42/tcp name #Host Name Server\nnameserver 42/udp name #Host Name Server\nnicname 43/tcp whois\ndomain 53/tcp #Domain Name Server\ndomain 53/udp #Domain Name Server\nbootps 67/udp dhcps #Bootstrap Protocol Server\nbootpc 68/udp dhcpc #Bootstrap Protocol Client\ntftp 69/udp #Trivial File Transfer\ngopher 70/tcp\nfinger 79/tcp\nhttp 80/tcp www www-http #World Wide Web\nhosts2-ns 81/tcp #HOSTS2 Name Server\nhosts2-ns 81/udp #HOSTS2 Name Server\nkerberos 88/tcp krb5 kerberos-sec #Kerberos\nkerberos 88/udp krb5 kerberos-sec #Kerberos\nhostname 101/tcp hostnames #NIC Host Name Server\niso-tsap 102/tcp #ISO-TSAP Class 0\nrtelnet 107/tcp #Remote Telnet Service\npop2 109/tcp postoffice #Post Office Protocol\n Version 2  pop3 110/tcp #Post Office Protocol\n Version 3  sunrpc 111/tcp rpcbind portmap #SUN Remote Procedure Call\nsunrpc 111/udp rpcbind portmap #SUN Remote Procedure Call\nauth 113/tcp ident tap #Identification Protocol\nuucp-path 117/tcp\nsqlserv 118/tcp #SQL Services\nnntp 119/tcp usenet #Network News Transfer Protocol\nntp 123/udp #Network Time Protocol\nepmap 135/tcp loc-srv #DCE endpoint resolution\nepmap 135/udp loc-srv #DCE endpoint resolution\nnetbios-ns 137/tcp nbname #NETBIOS Name Service\nnetbios-ns 137/udp nbname #NETBIOS Name Service\nnetbios-dgm 138/udp nbdatagram #NETBIOS Datagram Service\nnetbios-ssn 139/tcp nbsession #NETBIOS Session Service\nimap 143/tcp imap4 #Internet Message Access Protocol\nsql-net 150/tcp\nsqlsrv 156/tcp\npcmail-srv 158/tcp #PCMail Server\nsnmp 161/udp #SNMP\nsnmptrap 162/udp snmp-trap #SNMP trap\nprint-srv 170/tcp #Network PostScript\nbgp 179/tcp #Border Gateway Protocol\nirc 194/tcp #Internet Relay Chat Protocol\nipx 213/udp #IPX over IP\nrtsps 322/tcp\nrtsps 322/udp\nmftp 349/tcp\nmftp 349/udp\nldap 389/tcp #Lightweight Directory Access Protocol\nhttps 443/tcp MCom #HTTP over TLS/SSL\nhttps 443/udp MCom #HTTP over TLS/SSL\nmicrosoft-ds 445/tcp\nmicrosoft-ds 445/udp\nkpasswd 464/tcp # Kerberos (v5)\nkpasswd 464/udp # Kerberos (v5)\nisakmp 500/udp ike #Internet Key Exchange\ncrs 507/tcp #Content Replication System\ncrs 507/udp #Content Replication System\nexec 512/tcp #Remote Process Execution\nbiff 512/udp comsat\nlogin 513/tcp #Remote Login\nwho 513/udp whod\ncmd 514/tcp shell\nsyslog 514/udp\nprinter 515/tcp spooler\ntalk 517/udp\nntalk 518/udp\nefs 520/tcp #Extended File Name Server\nrouter 520/udp route routed\nulp 522/tcp\nulp 522/udp\ntimed 525/udp timeserver\ntempo 526/tcp newdate\nirc-serv 529/tcp\nirc-serv 529/udp\ncourier 530/tcp rpc\nconference 531/tcp chat\nnetnews 532/tcp readnews\nnetwall 533/udp #For emergency broadcasts\nuucp 540/tcp uucpd\nklogin 543/tcp #Kerberos login\nkshell 544/tcp krcmd #Kerberos remote shell\ndhcpv6-client 546/tcp #DHCPv6 Client\ndhcpv6-client 546/udp #DHCPv6 Client\ndhcpv6-server 547/tcp #DHCPv6 Server\ndhcpv6-server 547/udp #DHCPv6 Server\nafpovertcp 548/tcp #AFP over TCP\nafpovertcp 548/udp #AFP over TCP\nnew-rwho 550/udp new-who\nrtsp 554/tcp #Real Time Stream Control Protocol\nrtsp 554/udp #Real Time Stream Control Protocol\nremotefs 556/tcp rfs rfs_server\nrmonitor 560/udp rmonitord\nmonitor 561/udp\nnntps 563/tcp snntp #NNTP over TLS/SSL\nnntps 563/udp snntp #NNTP over TLS/SSL\nwhoami 565/tcp\nwhoami 565/udp\nms-shuttle 568/tcp #Microsoft shuttle\nms-shuttle 568/udp #Microsoft shuttle\nms-rome 569/tcp #Microsoft rome\nms-rome 569/udp #Microsoft rome\nhttp-rpc-epmap 593/tcp #HTTP RPC Ep Map\nhttp-rpc-epmap 593/udp #HTTP RPC Ep Map\nhmmp-ind 612/tcp #HMMP Indication\nhmmp-ind 612/udp #HMMP Indication\nhmmp-op 613/tcp #HMMP Operation\nhmmp-op 613/udp #HMMP Operation\nldaps 636/tcp sldap #LDAP over TLS/SSL\ndoom 666/tcp #Doom Id Software\ndoom 666/udp #Doom Id Software\nmsexch-routing 691/tcp #MS Exchange Routing\nmsexch-routing 691/udp #MS Exchange Routing\nkerberos-adm 749/tcp #Kerberos administration\nkerberos-adm 749/udp #Kerberos administration\nkerberos-iv 750/udp #Kerberos version IV\nmdbs_daemon 800/tcp\nmdbs_daemon 800/udp\nftps-data 989/tcp #FTP data, over TLS/SSL\nftps 990/tcp #FTP control, over TLS/SSL\ntelnets 992/tcp #Telnet protocol over TLS/SSL\nimaps 993/tcp #IMAP4 protocol over TLS/SSL\nircs 994/tcp #IRC protocol over TLS/SSL\npop3s 995/tcp spop3 #pop3 protocol over TLS/SSL (was spop3)\npop3s 995/udp spop3 #pop3 protocol over TLS/SSL (was spop3)\nkpop 1109/tcp #Kerberos POP\nnfsd-status 1110/tcp #Cluster status info\nnfsd-keepalive 1110/udp #Client status info\nnfa 1155/tcp #Network File Access\nnfa 1155/udp #Network File Access\nactivesync 1034/tcp #ActiveSync Notifications\nphone 1167/udp #Conference calling\nopsmgr 1270/tcp #Microsoft Operations Manager\nopsmgr 1270/udp #Microsoft Operations Manager\nms-sql-s 1433/tcp #Microsoft-SQL-Server\nms-sql-s 1433/udp #Microsoft-SQL-Server\nms-sql-m 1434/tcp #Microsoft-SQL-Monitor\nms-sql-m 1434/udp #Microsoft-SQL-Monitor\nms-sna-server 1477/tcp\nms-sna-server 1477/udp\nms-sna-base 1478/tcp\nms-sna-base 1478/udp\nwins 1512/tcp #Microsoft Windows Internet Name Service\nwins 1512/udp #Microsoft Windows Internet Name Service\ningreslock 1524/tcp ingres\nstt 1607/tcp\nstt 1607/udp\nl2tp 1701/udp #Layer Two Tunneling Protocol\npptconference 1711/tcp\npptconference 1711/udp\npptp 1723/tcp #Point-to-point tunnelling protocol\nmsiccp 1731/tcp\nmsiccp 1731/udp\nremote-winsock 1745/tcp\nremote-winsock 1745/udp\nms-streaming 1755/tcp\nms-streaming 1755/udp\nmsmq 1801/tcp #Microsoft Message Queue\nmsmq 1801/udp #Microsoft Message Queue\nradius 1812/udp #RADIUS authentication protocol\nradacct 1813/udp #RADIUS accounting protocol\nmsnp 1863/tcp\nmsnp 1863/udp\nssdp 1900/tcp\nssdp 1900/udp\nclose-combat 1944/tcp\nclose-combat 1944/udp\nnfsd 2049/udp nfs #NFS server\nknetd 2053/tcp #Kerberos de-multiplexor\nmzap 2106/tcp #Multicast-Scope Zone Announcement Protocol\nmzap 2106/udp #Multicast-Scope Zone Announcement Protocol\nqwave 2177/tcp #QWAVE\nqwave 2177/udp #QWAVE Experiment Port\ndirectplay 2234/tcp #DirectPlay\ndirectplay 2234/udp #DirectPlay\nms-olap3 2382/tcp #Microsoft OLAP 3\nms-olap3 2382/udp #Microsoft OLAP 3\nms-olap4 2383/tcp #Microsoft OLAP 4\nms-olap4 2383/udp #Microsoft OLAP 4\nms-olap1 2393/tcp #Microsoft OLAP 1\nms-olap1 2393/udp #Microsoft OLAP 1\nms-olap2 2394/tcp #Microsoft OLAP 2\nms-olap2 2394/udp #Microsoft OLAP 2\nms-theater 2460/tcp\nms-theater 2460/udp\nwlbs 2504/tcp #Microsoft Windows Load Balancing Server\nwlbs 2504/udp #Microsoft Windows Load Balancing Server\nms-v-worlds 2525/tcp #Microsoft V-Worlds\nms-v-worlds 2525/udp #Microsoft V-Worlds\nsms-rcinfo 2701/tcp #SMS RCINFO\nsms-rcinfo 2701/udp #SMS RCINFO\nsms-xfer 2702/tcp #SMS XFER\nsms-xfer 2702/udp #SMS XFER\nsms-chat 2703/tcp #SMS CHAT\nsms-chat 2703/udp #SMS CHAT\nsms-remctrl 2704/tcp #SMS REMCTRL\nsms-remctrl 2704/udp #SMS REMCTRL\nmsolap-ptp2 2725/tcp #MSOLAP PTP2\nmsolap-ptp2 2725/udp #MSOLAP PTP2\nicslap 2869/tcp\nicslap 2869/udp\ncifs 3020/tcp\ncifs 3020/udp\nxbox 3074/tcp #Microsoft Xbox game port\nxbox 3074/udp #Microsoft Xbox game port\nms-dotnetster 3126/tcp #Microsoft .NET ster port\nms-dotnetster 3126/udp #Microsoft .NET ster port\nms-rule-engine 3132/tcp #Microsoft Business Rule Engine Update Service\nms-rule-engine 3132/udp #Microsoft Business Rule Engine Update Service\nmsft-gc 3268/tcp #Microsoft Global Catalog\nmsft-gc 3268/udp #Microsoft Global Catalog\nmsft-gc-ssl 3269/tcp #Microsoft Global Catalog with LDAP/SSL\nmsft-gc-ssl 3269/udp #Microsoft Global Catalog with LDAP/SSL\nms-cluster-net 3343/tcp #Microsoft Cluster Net\nms-cluster-net 3343/udp #Microsoft Cluster Net\nms-wbt-server 3389/tcp #MS WBT Server\nms-wbt-server 3389/udp #MS WBT Server\nms-la 3535/tcp #Microsoft Class Server\nms-la 3535/udp #Microsoft Class Server\npnrp-port 3540/tcp #PNRP User Port\npnrp-port 3540/udp #PNRP User Port\nteredo 3544/tcp #Teredo Port\nteredo 3544/udp #Teredo Port\np2pgroup 3587/tcp #Peer to Peer Grouping\np2pgroup 3587/udp #Peer to Peer Grouping\nws-discovery 3702/udp #WS-Discovery\nws-discovery 3702/tcp #WS-Discovery\ndvcprov-port 3776/tcp #Device Provisioning Port\ndvcprov-port 3776/udp #Device Provisioning Port\nmsfw-control 3847/tcp #Microsoft Firewall Control\nmsdts1 3882/tcp #DTS Service Port\nsdp-portmapper 3935/tcp #SDP Port Mapper Protocol\nsdp-portmapper 3935/udp #SDP Port Mapper Protocol\nnet-device 4350/tcp #Net Device\nnet-device 4350/udp #Net Device\nipsec-msft 4500/tcp #Microsoft IPsec NAT-T\nipsec-msft 4500/udp #Microsoft IPsec NAT-T\nllmnr 5355/tcp #LLMNR\nllmnr 5355/udp #LLMNR\nwsd 5357/tcp #Web Services on devices\nwsd 5358/tcp #Web Services on devices\nrrac 5678/tcp #Remote Replication Agent Connection\nrrac 5678/udp #Remote Replication Agent Connection\ndccm 5679/tcp #Direct Cable Connect Manager\ndccm 5679/udp #Direct Cable Connect Manager\nms-licensing 5720/tcp #Microsoft Licensing\nms-licensing 5720/udp #Microsoft Licensing\ndirectplay8 6073/tcp #DirectPlay8\ndirectplay8 6073/udp #DirectPlay8\nman 9535/tcp #Remote Man Server\nrasadv 9753/tcp\nrasadv 9753/udp\nimip-channels 11320/tcp #IMIP Channels Port\nimip-channels 11320/udp #IMIP Channels Port\ndirectplaysrvr 47624/tcp #Direct Play Server\ndirectplaysrvr 47624/udp #Direct Play Server\n"},{"id":59,"href":"/posts/diary/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/","title":"英语学习网站","section":"日记","content":"英语学习网站对自学者来说就像是寻觅家园，一旦找到，内心会平静下来，一扫喧嚣尘世间的烦恼。现在我坐在家里阳光明媚的窗下，理理思路，给大家一一道来这些英语学习网站的妙用，希望你们也喜欢，就像我一直听的老歌，耳畔回响起美妙的音乐，我就会满血复活，忍不住和大家分享，希望你们喜欢。\n1、读书非读教材，是读真实语料\n当学生时，每每盼着老师到我们宿舍一起吃午饭，饭后她不多聊，慢悠悠地取出英文的Reader\u0026rsquo;s Digest, 一个人悄悄地读，虽然宿舍有8个女生，我们也都会安静下来，不想打扰她阅读。就这样，当别人在读三毛的《撒哈拉日记》时，我们宿舍的女生在读英文小说。\n从我阅读的经历来看，适合学生看的杂志有这些：\nA: 科学美国人 www.scientificamerican.com/\n推荐理由：最新的科学类文章，考托福、考雅思、考四六级必备的阅读背景知识一网打尽。最有用的一个栏目是 Podcasts.\n2、听BBC News, Radio Beijing的日子\n上海的夏季好长，吃过晚饭后，小风轻轻地吹，或绵绵细雨柔柔地飘下，我们外文系的学生一定是去听老师录好的BBC News, 自己买的收音机只能听Radio Beijing. B: BBC 新闻 www.bbc.com/news 或者 www. bbc.com/radio\n推荐理由： BBC新闻和VOA新闻应该说有相似之处，想听英式英语，所以关注BBC World Service Radio, 其中五分钟新闻 (five minutes news bulletin)可以帮助我们了解国际大事，听着发音如此清脆的英语，真是有“大珠小珠落玉盘”的美感。\n3、听NPR，了解美帝的社会与生活\nC: NPR 新闻 www.npr.org\n推荐理由： 收听NPR可以听到新闻对话、诙谐故事、音乐栏目等。\n4、Vice\nD: www.vice.com/en_us\n推荐理由： VICE主讲流行文化，以及重大时事问题，你可以关心美国文化的方方面面，也可以了解美国人现在面临的问题。\n5、TED\nE: www.ted.com\nTED无疑是最精彩的演讲汇集处，这里不乏热门话题、名人演讲，更有拓展视野的专家演讲，配合同步字幕，适合多次聆听，每一遍听完后领悟、反思、更可以观察一些地道的英语用法。\n**6、Future Learn **\nF: www.futurelearn.com/\nFuture Learn上有很多英国著名大学的免费在线课程，有字幕可以帮助我们理解英文讲授的课程。\n7、可汗学院\nG: www.khanacademy.org/\n可汗学院的课程都是免费，对所有人开放的课程。其中有家长可能喜欢的SRT、GMAT等大学入学考试辅导，内容涵盖数学、工程类、艺术、人文、经济金融等。\n**8、寻书的网站 **\nH: www.goodreads.com （1）\nI: bookzz.org/ (2)\n如果你想读英文原版书，找不到合适的读物，good read网站上有很多学员的推荐，而BookZZ的数据库里有277万本书，以及5000多万篇文章，全步是可以免费下载的。\n9、国内有知乎，国外有Quora， Wikihow， Lifehack\nJ: www.quora.com （1）\nK: www.wikihow.com (2)\nL: www.lifehack.org (3)\n来自课堂在线-生活英语读写\n"},{"id":60,"href":"/posts/english/be-the-present-simple-tense/","title":"Be the Present Simple Tense","section":"English","content":"##Be(am/is/are) Usage: BE\n be + noun be + adjective be + preposition\n Grammar: BE\r#\r\rSubject + BE\n I + am You/We/They + are He/She/It + is ##Examples\n   Subject BE      I am teacher.   You are beautiful.   He is at work.   She is in London.   It is a book.   We are in the library.   They are busy.     "},{"id":61,"href":"/posts/english/because-vs-because-of/","title":"Because vs Because Of","section":"English","content":"在英语里，because 用在主句前面。\r#\r\rI can\u0026rsquo;t see because it is so foggy. 因为雾太大了，我看不到。\nBecause of 却会用在名词前面。\nIt was difficult to see because of the snow. 因为雪，很难看清楚。\nAngela couldn\u0026rsquo;t sleep because of the noise. 因为那些噪音，Angela 没有睡觉。\n"},{"id":62,"href":"/posts/english/difference-of-customer-client-and-guest/","title":"Difference of Customer, Client and Guest","section":"English","content":"customer意思是：消费者，用于表示消费者与销售厂家时 client意思是：客户端， 专门表示客户一方的术语 guest意思是：贵宾、客人 用于表示外国来访的客人或自己家来的客人等等\n"},{"id":63,"href":"/posts/english/difference-of-spent-cost-pay-and-take/","title":"Difference of Spent, Cost, Pay and Take","section":"English","content":"spend，cost，take和pay的区别是历年中考试题的必考内容之一，虽然它们都可以表示“花费”，但用法却不尽相同。\nspend的主语必须是人， 常用于以下结构：(1) spend time ／money on sth. 在……上花费时间（金钱）。例：I spent two hours on this maths problem. 这道数学题花了我两个小时。(2) spend time ／ money (in) doing sth. 花费时间（金钱）做某事。例：They spent two years (in) building this bridge. 造这座桥花了他们两年时间。(3)spend money for sth. 花钱买……。例：His money was spent for books. 他的钱用来买书了。\ncost的主语是物或某种活动， 还可以表示“值”， 常见用法如下：(1)sth. costs (sb.) ＋金钱,某物花了（某人）多少钱。例：A new computer costs a lot of money. 买一台新电脑要花一大笔钱。(2) (doing) sth. costs (sb.) ＋时间,某物（做某事）花了（某人）多少时间。例：Remembering these new words cost him a lot of time. 他花了大量时间才记住了这些单词。\n注意：cost的过去式及过去分词都是cost,并且不能用于被动句。\ntake后面常跟双宾语， 常见用法有以下几种：(1) It takes sb. ＋时间＋to do sth. 做某事花了某人多少时间。例：It took them three years to build this road. 他们用了三年时间修完了这条路。(2)doing sth. takes sb. ＋时间,做某事花了某人多少时间。例：Repairing this car took him the whole afternoon. 他花了一下午修车。\npay的基本用法是：(1) pay (sb.) money for sth. 付钱（给某人）买……。例：I have to pay them 20 pounds for this room each month. 我每个月要付20英磅的房租。(2)pay for sth. 付……的钱。例：I have to pay for the book lost. 我不得不赔丢失的书款。(3)pay for sb. 替某人付钱。例：Don?蒺t worry!I\u0026rsquo;ll pay for you. 别担心， 我会给你付钱的。(4)pay sb. 付钱给某人。 例: They pay us every month.他们每月给我们报酬。（5）pay money back 还钱。例：May I borrow 12 yuan from you? I\u0026rsquo;ll pay it back next week. 你能借给我12块钱吗？下周还你。（6）pay off one\u0026rsquo;s money还清钱。\nspend/cost/pay/take (1)spend的主语通常是人，往往用于以下句型： （sb）spend some money/some time on sth. (sb)spend some money/some time(in)doing sth.例如： I spent fifty yuan on the coat. = I spent fifty yuan (in) buying the coat. 我花50元买了这件大衣。 He spent three days on the work. = He spend three days (in) doing the work. 我干这项工作用了3天。 (2)take常用于“占用、花费”时间，其主语通常为形式主语“it”或物。句式是： It takes/took sb.some time to do sth＝Sth.takes sb.some time. 例如： It took me three years to draw the beautiful horses. 画这些漂亮的马花费了我3年时间。 The work will take me two days.这项工作花了2天时间。 (3) pay为“付款、赔偿”之意，主语通常是人，往往是sb. pays some money for sth或pay sb.(some money for sth) 例如： I paid fifty yuan for the coat.我花50元买了这件大衣。 He has paid the doctor 50 pounds for the medicine? 他买药已付医生50英镑。 How much did you pay him? 你付他多少钱？ (4) cost的主语必须是某物。spend … on sth．/in doing sth．的主语必须是人。pay … for 的主语也是人。It takes + sb．+ 时间（或钱）to do sth．的主语则必须是形式主语It。 动词cost的常用用法是sth.cost (sb.) some money。\n"},{"id":64,"href":"/posts/english/each-day-a-sentence/","title":"Each Day a Sentence","section":"English","content":"Every man dies, not every man really lives Yesterday is history, tomorrow is a mystery, and today is a gift There are two sides to every story, at least When you are convinced that your cause is right, have the courage to take a stand the supreme happiness of life is the conviction that we are loved As is a tale, so is life: not how long it is, but how good it is, is what matters. Try not to become a man of success but rather try to become a man of value. Medalist doesn\u0026rsquo;t grow on trees, you have to nurture them with love, with hard work, with dedication. Do all you can to survive, because life is never something you live only for yourself. Hope is a good thing and maybe the best of things. And no good thing ever dies. Life is but the shipwreck of our plans. 每个人都死了，不是每个人真正地生活 昨天是历史，明天是谜，今天是礼物 至少每个故事都有两个方面 当您确信自己的事业是对的时，就有勇气站出来 生活的至高幸福是我们被爱的信念 就像故事一样，生命也很重要：重要的不是寿命长短，而是寿命长短。 尽量不要成为成功的人，而要成为有价值的人。 金牌得主不在树上生长，您必须用爱，勤奋和奉献来培育它们。 尽您所能生存，因为生活永远不会是您自己的生活。 希望是一件好事，也许是最好的事情。 从来没有好事消亡。 生命不过是我们计划的沉船。\nI will be responsible for my fate. I will not be a burden to anyone confidence is contagious. So is a lack of confidence we don\u0026rsquo;t want to tell our dreams. We want to show them. you can never plan the future by the past the man who has made up his mind to win will never say impossible To like and dislike the same things, this is what makes a solid friendship. What I\u0026rsquo;ve learned here is that if you believe in the long term, your day eventually arrives. we must accept finite disappointment, but we must never lose infinite hope No other misfortune can be compared with the loss of time. Victory won\u0026rsquo;t come to me unless I go to it. Halloween gives you permission to be silly, to be terrifying, to be weird, and in fact, it rewards you for it. To believe with certainty, we must begin with doubting. True science teaches, above all, to doubt and be ignorant. Growing old is not upsetting; being perceived as old is. The truth is beautiful. Without doubt, and so are lies. Nothing in life is to be feared. It is only to be understood Scientific knowledge aims at being wholly impersonal. there are two sides to every story, at least. You\u0026rsquo;ll never move others, heart to heart, unless your speech comes from your heart. Important principles may and must be flexible. Ten men banded together in love can do what ten thousand separately would fail in. 我将为自己的命运负责。我不会成为任何人的负担 自信具有感染力。缺乏信心也是 我们不想告诉我们的梦想。我们想给他们看。 你永远不能过去规划未来 下定决心要赢的人永远不会说不可能 喜欢和不喜欢相同的事物，这就是牢固的友谊。 我在这里了解到的是，如果您长期相信，那您的日子最终就到了。 我们必须接受有限的失望，但我们绝不能失去无限的希望 没有其他不幸可以与时间的损失相提并论。 除非我努力，否则胜利不会降临我。 万圣节允许您愚蠢，恐怖，怪异，事实上，它会为此奖励您。 要确定地相信，我们必须从怀疑开始。 真正的科学首先要教给别人怀疑和无知。 变老并不令人沮丧；被认为是古老的。 真相是美丽的。毫无疑问，谎言也是如此。 生活中没有什么可恐惧的。只能理解 科学知识旨在完全非个人化。 至少每个故事都有两个方面。 除非您的讲话是发自内心的，否则您将永远不会动容他人。 重要原则可能而且必须灵活。 十个相爱的人可以做一万个失败的事。\nTime is a versatile performer. It flies, marches on, heals all wounds, runs out and will tell. No other misfortune can be compared with the loss of time. Heart with the border is ordinary, exit do turn is a saint. you can cut all the flowers but you cannot keep Spring from coming. Nothing is more dangerous than discontinued labor. Love, if the bubble is pricked, is called deception; if not, is called belief. People like to say that the conflict is between good and evil. the real conflict is between truth and lies. You can\u0026rsquo;t stay in your corner of the Forest waiting for others to come to you. You have to go to them sometimes. Life is 10% what happens to you and 90% how you react to it. The relentless pursuit of perfection Live a noble and honest life. Reviving past times in your old age will help you to enjoy your life again. To me. the past is black and white, but the future is always color. Life can be rough. Life can be cruel. Life can be downright hard. I like the night, without the dark, we\u0026rsquo;d never see the stars. 时间是多才多艺的表演者。它飞翔，前进，治愈所有伤口，用完并会告诉。 没有其他不幸可以与时间的损失相提并论。 有边界的心很普通，出境转弯是圣人。 您可以剪掉所有的花朵，但不能阻止Spring的到来。 没有什么比停工更危险了。 如果把泡沫戳破，爱情就被称为欺骗；如果不是，则称为信念。 人们喜欢说冲突是善与恶之间的冲突。真正的冲突在于真理与谎言之间。 您不能待在森林的角落等别人来找你。有时候你必须去找他们。 生活是您所发生的事情的10％，是您对它的反应的90％。 对完美的不懈追求 过上高贵而诚实的生活。重温过去的岁月将有助于您再次享受生活。 对我来说。过去是黑白的，但未来永远是彩色的。 生活可能很艰难。生活可能很残酷。生活可能非常艰难。 我喜欢夜晚，没有黑暗，我们永远看不到星星。\nWith and part you play, there is a certain amount of yourself in it. There has to be, otherwise it\u0026rsquo;s just not acting. it\u0026rsquo;s lying. Youth is the season of hope, enterprise, and energy, to a nation as well as an individual. wine and judgment mature with age. Our destiny offers not the cup of despair, but the chalice of opportunity. If you have time to think of a beautiful ending, why not use the time to live beautifully until the end. the secret of business is to know something that nobody else knows. Only those who are asleep make no mistakes. Pride goes before destruction, a haughty spirit before a fall. Don\u0026rsquo;t aim for success if you want it; just do what you love and believe in, and it will come naturally. we should always walk from the bottom to the top. The more we proceed, the tougher the next step will be. there are two powers in the world; one is the sword and the other is the pen. There is great competition and rivalry between the two. There is a third power stronger than both, that of the women. you should enjoy the little detours. To the fullest. because that\u0026rsquo;s where you\u0026rsquo;ll find things more important than what you want.\n在进行部分演奏的过程中，会有一定程度的自己。必须要有，否则就是不行动。它在说谎。 青年是一个国家和个人充满希望，努力和活力的季节。 葡萄酒和判断力会随着年龄的增长而成熟。 我们的命运不是提供绝望的杯子，而是机会的圣杯。 如果您有时间想一个美好的结局，那为什么不花时间去美丽地生活到最后。 商业的秘密是要知道别人没有的东西。 只有那些睡着了的人才不会犯错误。 骄傲要先于破坏，高尚的精神才能堕落。 如果您想要成功，就不要以成功为目标。只需做您喜欢并相信的事情，它就会自然而然地出现。 我们应该始终从底部走到顶部。我们进行的越多，下一步将越艰巨。 世界上有两种力量；一个是剑，另一个是笔。两者之间存在着巨大的竞争和竞争。女人比女人更强大。 您应该少走弯路。充分发挥。因为在那您会发现事情比您想要的更重要。\n"},{"id":65,"href":"/posts/english/english-grammar-and-structure/","title":"English Grammar and Structure","section":"English","content":" too + adjective; adjective + enough We can use this structure; adjective { comparative form } + than \u0026hellip; For example: he\u0026rsquo;s older than me as adjective as; like something if it\u0026rsquo;s short adjective { one or two syllables }, we often put \u0026lsquo;the\u0026rsquo; before it and add -est {superlative form}. if it\u0026rsquo;s a long adjective { more than 2 syllables}, we often form it this way: the + most + adjective compare 1} the adjective+est - the longest 2} the most + adjective - the most beautiful. we don\u0026rsquo;t put \u0026lsquo;the\u0026rsquo; after a possessive determiner {my, our, his\u0026hellip;}  "},{"id":66,"href":"/posts/english/four-kinds-of-man/","title":"Four Kinds of Man","section":"English","content":"In a relationship, some men fall into one of four categories. a boy, a player, a confused man, and a good man. A boy, a boy will always be a boy, regardless of his age. Growing up and growing old is never the same. Growing old is mandatory while growing up is optional by choice. A boy cares less about what makes you happy as a woman, he knows very little about putting a home together, and he\u0026rsquo;s not ready to learn. The woman will do the thinking and make decisions. He will be more concerned about his mode of dressing than his character. A boy is loose, he will and tell, and talks about everything in his relationship to everybody. And openly condemns his woman. A boy worries about what his mom thinks of him. even when it\u0026rsquo;s time to focus on his family. A boy doesn\u0026rsquo;t plan for the future and doesn\u0026rsquo;t want to grow up. he doesn\u0026rsquo;t understand the importance of responsibility. When his woman is upset, he gets angry. He doesn\u0026rsquo;t know how to help her become calm, he\u0026rsquo;s not a bad person, he\u0026rsquo;s still a child. He would rather play around on his computer, instead of participating with his family. you cannot put a bike engine of a car. When a matured woman marries of date\u0026rsquo;s a boy, she automatically becomes a girl. she will change from a peaceful mature woman to a nagging young girl, and her friends will think she\u0026rsquo;s going crazy. A boy gets easily intimidated by his woman\u0026rsquo;s position, status and feels insecure by her income. He believes he deserves respect because he thinks he is a man based on his age. It\u0026rsquo;s difficult to communicate with a boy since he usually thinks he\u0026rsquo;s right. He feels superior and thinks he\u0026rsquo;s doing a woman a favor by dating or marrying her. A player, it\u0026rsquo;s better to be single than date a player. No matter how much effort you invest in a relationship with a player, it most likely ends in hertbreak. A player is smart, selfish and inconsiderate, and usually doesn\u0026rsquo;t stay faithful to one woman. Most women fall for players, because they appear attractive and presnetable. Players have something extaordinary about them. He can be rich, famous tall, handsome, romantic, talented, and possess many qualities that a woman wants in a guy. he will sweep you off your feet at the beginning, and make you believe you\u0026rsquo;re the luckiest woman alive. He will tell you what you love to hear, and show you what you love to see. He will make unbelievable promises. He will get into your head through you heart, and take control of your thinking. He will spend any amount of money, and effort to take you to bed. And after accomplishing his mission, the story changes. Any attention and affection you get from a player can be temporary. The first problem you\u0026rsquo;ll encounter with him is his words will start to contradict his actions, then his behavior and timing will change drastically, then you will start wondering what you did wrong again. It\u0026rsquo;s not you, it\u0026rsquo;s him, a player\u0026rsquo;s time is very limited because he\u0026rsquo;s got a lot of women to share it with. It\u0026rsquo;s hard to win a game with a player unless she\u0026rsquo;s materialistic, or never dates or marries for love. A player\u0026rsquo;s heart has no space for love. He will marry a potential victim for selfish reasons or benefits, and continue his games after marriage. he will tell terrific stories about his innocent wife, just to get another woman to bed. A confused man, the problem with a confused man is he doesn\u0026rsquo;t know what he wants. The relationship is like a door, you\u0026rsquo;re either in or out. A confused man will put one foot in and one foot out. People will think you have a perfect relationship, while you\u0026rsquo;re actually not sure where you. A confused man can be a wonderful guy who doesn\u0026rsquo;t play games. he will love you, give you all you want, but he will rarely commit to you. He will give you excuses all the time, and put your life on hold. Not because he\u0026rsquo;s bad, but because he has yet to figure out what he wants in his life. Of course, there is no rush in love, but there is a big difference between endurance and ignorance. you can only endure with a man who knows what he wants, and where he\u0026rsquo;s going in life. endurance with a confused man can be risky, and a complete waste of time. When a woman makes up her mind and decides to leave, a confused man will change, and start making new promises and deadlines. just to make her wait for more. After a while, he goes to back to his old ways. And for the woman, the waiting continues. One of life\u0026rsquo;s greatest mistakes is to embark on a life journey with someone who is not going anywhere in life. A good man is the best gift any woman could get. He\u0026rsquo;s a grown up, matured man, regardless of his age that is done playing games, ready to commit to just one woman, and be faithful to her. He will be responsible, trustworthy, love you and all that concerns you and you will know it in your heart. He will be sensitive to your needs, and will listen when you\u0026rsquo;re upset. He will abore you, support you, and bring out the best in you. He will be consistent, and his words will match his actions. Good men don\u0026rsquo;t make promises, they make commitments. you will be his best friend, his confidant, and you wan\u0026rsquo;t have to fight nor beg for his attention. He will laugh with you and cry with you. He will focus on your future, and not complain about your past. When there\u0026rsquo;s conflict, he will listen with compassion. if you\u0026rsquo;re upset with him, he will work hard to understand why. he will carry you along with his plans. if you disagree with him, he will listen to your point of view. He will trust without doubt, and will give when you most need it. Although he may not have a lot, he will be happy to share the little he has. Most women think good men are difficult to find, the truth is there are millions of good men out there. Where are these good men? they\u0026rsquo;re standing right behind the boys, players and confused men. You just have to clear those away first, so you can see them. You cannot date or marry a boy or a player, and expect the treatment of a good man.\n"},{"id":67,"href":"/posts/english/have-got-posession/","title":"Have Got Posession","section":"English","content":"Have Got\r#\r\rUsage: have got\n have got + noun = possess noun/have noun/own noun\n Grammer: have got\n have =\u0026gt; have/has I/You/We/They + have got + noun He/She/It + has got + noun\n Example: have got\n   subj. have got noun     I have got a car.   You have got a bike.   He has got a laptop.   She has got a dog.   It has got 5 stars.   We have got books.   They have got pens.    Grammar: questions\n HAVE =\u0026gt; have/has (Q.+)have + I/you/we/they + got noun\u0026hellip;? (Q.+)has + he/she/it + got + noun\u0026hellip;?\n Examples: Questions \u0026raquo; Many Answers\n   Question HAVE SUBJ. got     How many emails have I got?   How many brothers have you got?   What car has he got?   How many pets has she got?   what features has it got?   How much milk have we got?   what food have they got?    Examples: Questions \u0026raquo; yes/no\n   HAVE SUBJ. got   Yes/No     Have I got a parcel? \u0026raquo; Yes\u0026hellip;   Have you got a bike? \u0026raquo; Yes\u0026hellip;   has he got a ticket? \u0026raquo; Yes\u0026hellip;    "},{"id":68,"href":"/posts/english/how-about-%E5%92%8C-what-about-/","title":"How About… 和 What About…","section":"English","content":"How about…? 和 What about…? 基本上意思是一样的！\nWhat about bringing some ice cream? 带一些冰淇淋怎么样？\nWhat about playing your new video games? 玩你的新电子游戏怎么样？\nWhat about getting some pizza? 买一些比萨怎么样？\n"},{"id":69,"href":"/posts/english/prefix-and-suffix/","title":"Prefix and Suffix","section":"English","content":"Anti- against(反对) Anticlimatic(虎头蛇尾)，anti-inflammotory(抗炎)，antiway(反对战争) De- opposite(相反的) Devalue(贬值)，destruction(破坏) Dis- not or the opposite of something(与某事不同或相反)，discover(发现)，disagree(不同意)，disproportionate(不成比例). En, Em cause to, enact造成, enable启用, empower授权, embrace拥抱 Fore-, before前, front of在什么前, foreshadow预兆, forearm前臂, forecast预测 In-, Im-, in this one\u0026rsquo;s pretty self-explanatory. income收入，impulse冲动 In-, Im, II-,Ir-, not, Indirect间接的, injustice不公正的, immoral不道德的, illiterate文盲的, irreverent不敬的, irresponsible不负责任的 Inter- between在什么之间, among interrupt, interact, Mid- middle中间, midway中途, midsentence中断 Mis- wrongly错误, misspell拼错, misstep失误,misdemeanor轻罪 Non- not不, nonviolent非暴力, nonsense胡说八道. Over- ove过度,too much, overeat吃的过量, overlook俯视 Pre- bfore在什么之前，preview预览，prefix,前缀 Re- again再次, this one is super common, rewrite重写,research研究, review回顾, refresh刷新,refurbish翻新 Semi- or you might hear people say semi, half, partly,not fully, 不完整的 semifial半决赛，semiformal半正式 Sub- under在什么下面，subway地铁,submarine潜艇 Super- above, beyond,超过，超越， superhuman超人，superstar超级明星 Trans- across or crossing a boundary, trans 越过边界，transmit传输，transport运输 Un- not不， opposite of. Unhealthy 不健康, unfriendly不友好, unusual不寻常 Under- under or too little, 低于过低， underrestimate低估, underreported少报\nSuffixes \u0026ndash;able, -ible, is , can be,是，可以， affordable负担得起, comfortale舒适的, sensible合理的 -al, -ial, 具有什么特点， universal通用的, facial面部的 -ed, 过去式或形容词， -en, 由…做成的， golden金制的，wooden木制的 -er, -or,与某事有关的人，如职业 -est最高级 -ful, 充满，hurtful有害的, helpfu乐于助人的,careful细心的, graceful优雅的 -ic, 具有某些特征， Poetic诗意的, linguistic语言的 -ing 动词时态 -ion, -tion, -ation occation场合，motion动作,relation关系, attraction吸引 -ity, -ty 某种状态， activity活动，society社会, infinity无线 -ive, -ative, - itive, 形容词 -less 没有， hopeless绝望的, fearless无所畏惧的, helpless无助的, loveless无爱的, -ly,某物怎么样，副词， lovely 可爱的 -ment,某种行为的状态 contentment知足, enjoyment享受 -ness, 某种状态或状况， openness开放性，kindness善良, happiness幸福 -ous, -eous, -ious 具有某种品质， Joyous充满欢乐的，courageous勇敢的，Gracious和蔼可亲的 -s, -es不止一个 -y, 具有某种特征，happy快乐的, gloomy阴郁的, sappy尽力充沛的\n"},{"id":70,"href":"/posts/english/recruitment/","title":"Recruitment","section":"English","content":"#Operations Engineer\nBe among the first 25 applicants 应聘者 IT Recruitment 招聘 Consultant 顾问 I Move IT\nMy international client 客户 is currently looking to hire 聘用 an Operations Engineer to join their Desktop Operations Department to be responsible负责 for providing mainly 3rd tier support.\nPosition Summary:\r#\r\r The role requires someone to engineer and support key desktop technologies and to assist协助 with 3rd tier support for complex desktop issues. This role needs to be knowledgeable in system applications and able to suggest提供 technical solutions 技术方案 with other teams.  Key Responsibilities 职责:\r#\r\r Manage and support systems and productivity applications Work closely with global technology teams and provide 3rd tier support for complex desktop issues  Understand end users' issues and concerns about technology - resolve or escalating升级 to global teams when necessary Package applications and upgrades for automated deployment using SCCM（System Center Configuration Manager） Identify辨别 and propose提出 suggestions建议 or solutions to improve productivity or streamline operational processes  Qualifications and Experience: 资格和经验\r#\r\rTechnical Competencies:资格\r#\r\r Advanced高级 troubleshooting故障排除 of Microsoft products Experience in software deployment using Microsoft SCCM Familiar熟悉 with application packaging Experience with the use and support of document management software  Work Experience:\r#\r\r minimum 5 years’ relevant相关 experience of engineering solutions in a professional work environment   Education:\r#\r\r Degree in IT related相关 field    Language:\r#\r\r Fluent流利的 in English, Chinese is advantageous很好的   Performance Traits:\r#\r\r Strong interpersonal人际的 and communication交流 skills Customer service and process oriented 以客户服务和流程为导向  Proactive\r#\r\r Ability to prioritise work 能力优先 Good analytic and problem- solving skills Good team player and able to work independently独立地 under pressure Positive积极的 mindset心态, can-do attitude 态度 Willing to learn 愿意学习  Seniority level 资历\r#\r\r Mid-Senior level  Employment type\r#\r\rFull-time\nJob function 职能\r#\r\rInformation Technology\nIndustries 行业\r#\r\rInformation Technology and Services\n"},{"id":71,"href":"/posts/english/saying-of-book/","title":"Saying of Book","section":"English","content":"1、书籍是人类知识的总结。\nBooks are the summary of human knowledge.\n2、书籍是人类思想的宝库。\nBooks are the treasure house of human thought.\n3、书籍是全人类的营养品。\nBooks are the nourishment of all mankind.\n4、书籍是我们的精神粮食。\nBooks are our spiritual food.\n5、读书，可以使生活过得更好！\nReading, can make a better life!\n6、书籍是朋友，我们并不孤独。\nBooks are friends, we are not alone.\n7、书籍是积累世人智慧的不灭的明灯。\nBooks are the ever-burning lamps of accumulated wisdom the world of eternal.\n8、没有书籍的屋子如同没有灵魂的**。\nNo books room like a body without soul.\n9、没有了书籍就好似你的人生没有了光彩。\nDid not have the book as if your life without a brilliance.\n10、我扑到书籍上，就像饥饿的人扑在面包上。\nI rushed to the books, like a hungry person sees a loaf of bread.\n11、书籍是青年人不可分离的生活伴侣和导师。\nBooks are inseparable youth life partner and mentor.\n12、人读书不多没关系，就是怕不在社会上读书。\nFew people read it doesn’t matter, is afraid of not on the social reading.\n13、书籍是朋友，虽然没有热情，但是非常忠实。\nBooks are friends, although there is no passion, but very loyal.\n14、相信生活，它给人的教益比任何一本书籍都好。\nBelieve that life, it gives a person the instructive than any books are all well.\n15、一个家庭中没有书籍，等于一间房子没有窗子。\nThere is no book in a family, a house without Windows.\n16、书籍是人见人爱的醒目之物，能够悦目看遍世界。\nBooks are everyone’s favorite smart thing in the world, can be pleasing to the eye to see all over the world.\n17、读书可以经历一千种人生，不读书的人只能活一次。\nReading can be one thousand kinds of life experience, not reading people can only live once.\n18、连照进来的阳光都似乎昏黄，如同古旧书籍的颜色。\nEven seems to yellow in the sun, like the color of the ancient books.\n19、未曾谋面的女孩最有魅力，没有翻页书籍最有吸引力。\nAn unknown girl is the most attractive, no flip books most attractive.\n20、书籍现在成了我得精神鸦片，一天不吸就会生不如死。\nBooks became my spiritual opium, now don’t suck a day will be born dead.\n21、看那么多温情动人的电影和书籍，脑里谁也想不起来。\nSo much warmth and moving movies and books, mind who also couldn’t remember.\n22、不是读书人，却入读书门。知我读书苦，方成人上人。\nReading not educated, but into the door. I study hard, Fang Chengren here.\n23、青春这本厚厚的书籍，翻来翻去翻得最后只剩下了你。\nYouth the thick books, turn to finally left with you.\n24、书籍是人类文化的主要载体，一个不读书的人是没有根的。\nBooks are the main carrier of human culture, a people who do not read is no root.\n25、书籍这一实体正逐渐消失，萦绕它的种种幻想却异常繁荣。\nBooks of this entity is disappearing, its fantasy is abnormal prosperity.\n26、任何书籍都不能给你好运，但它们能让你悄悄成为你自己。\nAny books are can’t give you a good luck, but they can let you be yourself quietly.\n27、书籍使人平静，拥抱使人安心，接吻使人狂热，你使我幸福。\nBooks make people calm, embraced and reassuring, make people kissing, you make me happy.\n28、读书不要贪多，而是要多加思索，这样的读书使我获益不少。\nDon’t take on too much reading, but to think more, such a reading make me benefit a lot.\n29、世事犹如书籍，一页页被翻过去。人要向前看，少翻历史旧账。\nThe world is like a book, page by page will be the past. People who want to look ahead, less historical old scores.\n30、从来没有人读书，只有人在书中读自己，发现自己或检查自己。\nNo one has ever read, only people in the book read themselves, find themselves or check yourself.\n31、一本怀有恶意的书籍将不会伤害到任何人，除了写作它的傻瓜。\nA malicious book will not hurt anyone, in addition to writing it’s fool.\n32、书是最好的朋友。唯一的缺点是使我近视加深，但还是值得的。\nBooks are the best friends. The only drawback is that I myopia deepened, but it’s still worth it.\n33、穷人读书而富，富人读书高贵；老人读书年少，少年读书聪慧！\nThe poor and rich, the rich reading nobility; Old people reading less, study smart!\n34、选择朋友应当像选择阅读的书籍一样，一要谨慎，二要控制数量。\nChoose friends should be like choose to read books, a caution, second to control the quantity.\n35、书籍把我们引入最美好的社会，使我们认识各个时代的伟大智者。\nBooks introduce us into the best society, make us know all times great wise man.\n36、我终是没能放弃自己，努力钻进书籍里，像一颗倔强的种子期待一场大雨！\nI always can’t give up on yourself, effort into books, like a stubborn seeds look forward to a heavy rain!\n37、漫长的岁月，既毁坏了坟墓，又损坏了墓碑，可是光阴对于书却无能为力。\nLong years, already destroyed the tomb, and damaged the tombstones, but helpless time for books.\n38、读书不是为了雄辩和驳斥，也不是为了轻信和盲从，而是为了思考和权衡。\nReading is not for eloquence and refute, also is not to trust and follow blindly, but to think and trade-offs.\n39、书籍便那是改造灵魂的工具。是人类所需要的，那就是富有启发性的养料。\nBooks that is transforming tool of the soul. Is a human need, which is illuminating.\n40、生活里没有书籍，就好象没有阳光；智慧里没有书籍，就好象鸟儿没有翅膀。\nLife without books, like no sunlight; Wisdom without books, just like the bird have no wing.\n41、世界上任何书籍，都不会给你带来幸福，但它们会悄悄教育你，让你成为你自己。\nAny books in the world, will not bring you happiness, but they will quietly education you, let you be yourself.\n"},{"id":72,"href":"/posts/english/the-100-most-commonly-used-words-in-english/","title":"The 100 Most Commonly Used Words in English","section":"English","content":"Listed here, according to the 100-million-word British National Corpus, are the 100 most commonly used words in English. Many of these words are function words: they glue pieces of sentences together into longer syntactic units.\nWhere needed, the part of speech is identified to distinguish different grammatical uses of the same word.\nthe be of and a in (preposition: \u0026ldquo;in the old days\u0026rdquo;) to (infinitive marker: \u0026ldquo;to sing\u0026rdquo;) have it to (preposition: \u0026ldquo;to the country\u0026rdquo;) for (preposition: \u0026ldquo;for you\u0026rdquo;) I that (relative pronoun: \u0026ldquo;the book that I read\u0026rdquo;) you he on (preposition: \u0026ldquo;on the beach\u0026rdquo;) with (preposition: \u0026ldquo;with pleasure\u0026rdquo;) do (verb: \u0026ldquo;I do\u0026rdquo;) at (preposition: \u0026ldquo;at school\u0026rdquo;) by (preposition: \u0026ldquo;by midnight\u0026rdquo;) not this (determiner: \u0026ldquo;this page\u0026rdquo;) but from (preposition: \u0026ldquo;from home\u0026rdquo;) they his (determiner: \u0026ldquo;his job\u0026rdquo;) that (determiner: \u0026ldquo;that song\u0026rdquo;) she or which (determiner: \u0026ldquo;which book\u0026rdquo;) as (conjunction: \u0026ldquo;as we agreed\u0026rdquo;) we an say (verb: \u0026ldquo;say a prayer\u0026rdquo;) will (auxiliary verb: \u0026ldquo;I will try\u0026rdquo;) would can (auxiliary verb: \u0026ldquo;I can go\u0026rdquo;) if their go (verb: \u0026ldquo;go now\u0026rdquo;) what (determiner: \u0026ldquo;what time\u0026rdquo;) there all (determiner: \u0026ldquo;all people\u0026rdquo;) get (verb: \u0026ldquo;get busy\u0026rdquo;) her (determiner: \u0026ldquo;her job\u0026rdquo;) make (verb: \u0026ldquo;make money\u0026rdquo;) who as (preposition: \u0026ldquo;as a child\u0026rdquo;) out (adverb: \u0026ldquo;go out\u0026rdquo;) up (adverb: \u0026ldquo;go up\u0026rdquo;) see (verb: \u0026ldquo;see the sky\u0026rdquo;) know (verb: \u0026ldquo;know a place\u0026rdquo;) time (time: \u0026ldquo;a time to laugh\u0026rdquo;) take (verb: \u0026ldquo;take a break\u0026rdquo;) them some (determiner: \u0026ldquo;some money\u0026rdquo;) could so (adverb: \u0026ldquo;I said so\u0026rdquo;) him year into (preposition: \u0026ldquo;into the room\u0026rdquo;) its then think (verb: \u0026ldquo;think hard\u0026rdquo;) my come (verb: \u0026ldquo;come early\u0026rdquo;) than more (adverb: \u0026ldquo;more quickly\u0026rdquo;) about (preposition: \u0026ldquo;about you\u0026rdquo;) now last (adjective: \u0026ldquo;last call\u0026rdquo;) your me no (determiner: \u0026ldquo;no time\u0026rdquo;) other (adjective: \u0026ldquo;other people\u0026rdquo;) give just (adverb: \u0026ldquo;just try\u0026rdquo;) should these (determiner: \u0026ldquo;these days\u0026rdquo;) people also well (adverb: \u0026ldquo;well written\u0026rdquo;) any (determiner: \u0026ldquo;any day\u0026rdquo;) only new (adjective: \u0026ldquo;new friend\u0026rdquo;) very when (conjunction: \u0026ldquo;when you go\u0026rdquo;) may (auxiliary verb: \u0026ldquo;you may go\u0026rdquo;) way look (verb: \u0026ldquo;look here\u0026rdquo;) like (preposition: \u0026ldquo;like a boat\u0026rdquo;) use (verb: \u0026ldquo;use your head\u0026rdquo;) her (pronoun: \u0026ldquo;give her\u0026rdquo;) such (determiner: \u0026ldquo;such problems\u0026rdquo;) how (adverb: \u0026ldquo;see how\u0026rdquo;) because when (adverb: \u0026ldquo;know when\u0026rdquo;) as (adverb: \u0026ldquo;as good\u0026rdquo;) good (adjective: \u0026ldquo;good time\u0026rdquo;) find (verb: \u0026ldquo;find time\u0026rdquo;)\n"},{"id":73,"href":"/posts/english/the-50-most-commonly-used-words-in-the-english-language/","title":"The 50 Most Commonly Used Words in the English Language","section":"English","content":"If you\u0026rsquo;re an English learner, knowing which words are most commonly used in the language can help you to improve your vocabulary skills and gain confidence in casual conversations.\nDon\u0026rsquo;t count on these words to help you become fluent in English, but do use them as a resource to help you build your skills as you grow more comfortable with the English language.\nTop Vocabulary Words\r#\r\rAll\nEveryone in a group. All the children did their homework. And\nA conjunction that joins parts of speech together in a sentence. She jumped, jogged, and danced in gym class. Boy\nA male child. The little boy asked his mother if she would buy him candy. Book\nA long text of words that people read. The college student had to read a 500-page book for English class. Call\nTo yell out or speak loudly; to contact someone by phone. The girl called out to her brother so he would wait for her. Car\nA four-wheeled vehicle that transports people from one place to another. He drove the car from school to work. Chair\nA piece of furniture that can hold one person. My mother is the only one allowed to sit in the big chair in the living room. Children\nYoung people who have not yet reached adulthood. The children didn\u0026rsquo;t listen to what their parents told them. City\nA place where many people live. New York is the biggest city in the United States. Dog\nAn animal that many people have as a household pet. My dog likes to play with bones.\nDoor\nA passageway from which you can enter or exit a room or a building. The students rushed through the classroom door just before the bell rang. Enemy\nThe opposite of a friend. A competitor or rival. The hero of the story killed his enemy with a sword. End\nTo finish something or come to a conclusion. The end of the book was a happy one.\nEnough\nTo have more than one needs of something. Most Americans have enough food to eat, but that\u0026rsquo;s not true in other countries. Eat\nTo consume food. The children liked to eat apples and bananas after school. Friend\nThe opposite of an enemy. Someone on your side and with whom you enjoy spending time. The girl played with her friend in the yard until her mother told her to come inside.\nFather\nA male parent. The father picked up his child when she started crying. Go\nTo travel to and from a location. We go to school every day. Good\nTo behave well or in a kind manner. My mother said that if I\u0026rsquo;m good and don\u0026rsquo;t hit my brother, she will take me to the movies. Girl\nA female child. The girl dropped her schoolbooks on the ground. Food\nAn edible substance that people, animals, and plants eat to live. Starving people do not have enough food to eat and may die. Hear\nTo listen to something. I could hear my brother and sister arguing from the other room. House\nA place where people, often families, live. My friend lives in the biggest house on the street. Inside\nThe internal part of something or to be located within something. The inside of the house was warm and cozy. Laugh\nTo express that you find something amusing. The children laughed after the clown made a joke. Listen\nTo hear something. We listen to music because we like to dance. Man\nAn adult male. The man was much taller than his son. Name\nThe title of a place, book, person, etc. I never liked my name growing up. Never\nNot ever. I am never getting back together with my boyfriend. Next\nThe thing that happens after something else in a sequence; to be situated by something else. Let\u0026rsquo;s go to the next question. New\nSomething just created or unused or unopened. My mother bought me a new doll for Christmas. It was still in the package. Noise\nLoud sounds, especially made by music or a group of people. There was so much noise at the party, the neighbors called the police. Often\nTo happen frequently. My teacher gets mad because I often forget my homework. Pair\nTwo things that go together. I like the new pair of shoes my sister bought me for my birthday. Pick\nTo choose or select. I picked the cupcake with vanilla frosting. Play\nTo have fun with someone or engage in an activity or sport. I like to play football with my brother. Room\nA part of a home, building, office or another structure. The room at the end of the hall is the coldest in the building. See\nTo watch or observe something. I see clouds in the sky, which must mean it will rain soon. Sell\nTo offer a service or a good for a price. I am going to sell my surfboard for $50 because it\u0026rsquo;s time for a new one. Sit\nTo rest on a floor, chair, or another surface. The teacher told the children to sit on the carpet. Speak\nTo say something. I speak too loudly sometimes. Smile\nTo grin or show pleasure. I smile when my brother tells jokes. Sister\nThe opposite of brother. The female child in relation to other children of the same parents. My parents took my sister and me to the circus. Think\nTo contemplate something or have an idea or belief. I think all pets should have a home. Then\nSomething that comes after an event in a sequence. I opened the refrigerator. Then, I ate some food. Walk\nTo travel on foot. I walk home from school every day. Water\nA substance plants, people, animals, and the earth need to survive. If animals don\u0026rsquo;t have enough water to drink, they will die. Work\nTo make a living, engage in an activity for pay, or to reach a goal. I work as a teacher because I like children. Write\nTo put something on paper with a pen or pencil. To use a computer to type text. I have to write three essays in English class this semester. Woman\nA female adult. That woman was our new school principal. Yes\nTo answer affirmatively or respond to one\u0026rsquo;s name being called. \u0026ldquo;Yes, I\u0026rsquo;m here,\u0026rdquo; the student said when the teacher called her name.\n"},{"id":74,"href":"/posts/english/the-difference-between-preposition-_to_-_for_-and-_of_/","title":"The Difference Between Preposition to , for and Of","section":"English","content":"to、for和of的区别： For，of都是介词，所以跟在后面的词动词要加ing，这是他们共有的特性。 for，to，of后都跟人称代词的宾格，这是他们共有的特性。 for是为了的意思，为了一般与decorate,help,thank等及物动词相连接； to是无意义的，与for意思差不多，区别是to后面是加动词原形。 of是\u0026rsquo;的\u0026rsquo;的意思,后面一般跟名词，它还连接量词和不可数名词。 具体的区别也是要根据用法来进行比较。\nto，for和of的用法： For的用法\n 表示“当作、作为”。如: I like some bread and milk forbreakfast. 我喜欢把面包和牛奶作为早餐。 What will we have for supper? 我们晚餐吃什么? 表示理由或原因,意为“因为、由于”。 如: Thank you for helping me with myEnglish. 谢谢你帮我学习英语。 表示动作的对象或接受者,意为“给……”、“对…… (而言)”。 如: Let me pick it up for you. 让我为你捡起来。 Watching TV too much is bad for yourhealth. 看电视太多有害于你的健康。 表示时间、距离,意为“计、达”。 如: I usually do the running for an hourin the morning. 我早晨通常跑步一小时。 We will stay there for two days. 我们将在那里逗留两天。 表示去向、目的,意为“向、往、取、买”等。 如: Let’s go for a walk. 我们出去散步吧。 I came here for my schoolbag. 我来这儿取书包。 I paid twenty yuan for thedictionary. 我花了20元买这本词典。 表示所属关系或用途,意为“为、适于……的”。 如: It’s time for school. 到上学的时间了。 Here is a letter for you. 这儿有你的一封信。 表示“支持、赞成”。 如: Are you for this plan or against it? 你是支持还是反对这个计划? 用于一些固定搭配中。 如: Who are you waiting for? 你在等谁? For example, Mr Green is a kindteacher. 比如,格林先生是一位心地善良的老师。 尽管for 的用法较多，但记住常用的几个就可以了。  to的用法: 一：表示相对，针对。 be strange (common, new, familiar, peculiar) to This injection will make you immune to infection. 二：表示对比，比较。 1：以-ior结尾的形容词，后接介词to表示比较，如：superior ,inferior,prior,senior,junior 2: 一些本身就含有比较或比拟意思的形容词，如equal，similar，equivalent，analogous A is similar to B in many ways. 3：表示一些先后顺序的形容词，如：second、next。 4: to也偶尔出现在个别动词之后,与动词形成固定词组,表示比较,如:prefer to,compare to,in contrast to。 compare to sth.表示比喻或比拟,而compare with sth.表示比较,如: World is usually compared to a stage Compared with his past,he has changed a lot. Prefer的正确句型是:prefer A to B或prefer doing A to doing B,但当prefer后接动词不定式时,表示比较的介 词to就要改成rather than ,如: The undaunted soldier preferred death to surrender. Many people prefer spending money to earning money. They prefer to pursue careers rather than remain home as house wives. 5: to与及个别的名词构成比较之意,如:alternative。 Going to an under water concert is a great alternative to going to dinner. 三: 表示修饰关系 1: 表示回复,反应意思的词,如:answer to question, solution to problem,response to inquiry,reaction to proposal,reply to letter 6: 表示与书籍,文本相关的词,如:introduction to passage. 7: 表示恭喜或是祝贺,如: The director proposed a toast to the health of the guests. Let’s drink to Dick’s success in business 8: 另外还有一些名词符合这种用法,有的具有两者息息相关,缺一不可的含义.如:key to door,invitation to party, 四: to还具有依据,伴随,和着节奏的含义,如:sing to piano, chance to the tune, stamp to the rhythm of the song, add salt to taste。 （一）：表示相关联，相连接，如：be related to,be relative to,in relation to ,link to Investigate all the facts related to the problem. People often linked walth to happiness. （二）：表示反对和赞同。 1：to引导的表示反对，抗拒，对抗意义的词组。Be opposed to,be oppsist to,be contrary to,be adverse to,be resistant to ,object to,oppose to 2: to引导的表示同意，赞同意义的词组：consent to,subseribe to。 The employer consented to give him a salary raise. 表示调整，使符合，使适应的含义，如：adapt to,commodate to, adjust to,conform to,habituate to,fit to,suit to,correspond to,cater to。 She tried to habituate herself to the style of plain living. Your action should conform to the interests of the people. 3: 表示投降,屈服,服从的含义,如:be subject to,be subordinate to,submit to,subject to,surrender to,give in to,confess to,admit to。 The minority is subordinate to the majority少数服从多数 五: 表示趋势或倾向,如:tend to,be prone to,be inclined to,be apt to,be liable to。 He’s liable to seasickness. You are liable to come to wrong conclusion. 七: 表示约束,局限,如:limit to,confine to,resrict to。 He’s confined to the house by illness. He confined his remarks to scientific mangement. 八: 表示一种习惯或是一种适应性,如:get (be) to,used to。 Finally,the students got used to my teaching method. 九: 表示起因和原由,如:owing to,due to,thanks to,attribute to,come down to。 The flight was cancelled due to the thick fog. The famous artist attributed his success to his wife. 十: 表示目的或结果,如:aim to,lead to,give rise to。 I aim to be an excellent college teacher. His conceit lead to his failure. 十二: 表示数量上的积累或增加,如:in addition to,add to,amount to。 In addition to relief supplies,he also presented with some money. 十三: 表示全身心投入的含义,如:be addicted to,contribute to,devote to,commit to。 He is determined to devote all his life to his. 十四: 表示展望或是回顾,如:look forward to反date back to。 The church dates back to the 13th century. 十五: 表示方位概念.如:close to,next to。 I don’t like wool next to my skin. 十六: 表示有关注,关于: as to,with regard to 。 十七: 表示关注或重视,如:pay attention to,attach to。 We should attach primary importance to job training. 十八: 表示应该或必须含义的句式。 如: It’s time to get up. We are supposed to get here at seven. It’s up to this country to ban nuclear weapons.\nof的用法： 一、前面的名词是主语的情况 1、表示所属关系\u0026hellip;的 eg:man of that time那个时代的人 2、表示关于\u0026hellip;的 eg:a long story of adventure一个很长的冒险故事 二、短语是主语的情况 1、[表示同位关系] eg:the city of Rome罗马市 2、[表示性质、内容 、状况等] eg:a look of pity令人哀怜的神色 3、[表示在\u0026hellip;方面] eg:be quick of eye眼快 三、后面的名词是主语的情况 1、[表示数量、种类] eg:three pieces of meat三块肉 2、[表示部分或全部] eg:five of us我们中五个人 3、[表示\u0026hellip;中最突出的] eg:the hero of heroes最杰出的英雄 4、[表示由\u0026hellip;组成、做成] eg:a table of wood木头桌子 5、[表示动作的主体] eg:It is clever of you to do so.你那样做真聪明。\n"},{"id":75,"href":"/posts/english/the-past-simple-tense-time-phrases/","title":"The Past Simple Tense Time Phrases","section":"English","content":"Past(in/at/on/last/ago)\r#\r\rUsage: in + time phrase\n in + the morning/the afternoon/the evening in + month(e.g. May) in + year(e.g. 2019) in + season(e.g. winter)\n Examples: in + time phrase\n   ACTIVITY in TIME PHRASE     I walked the dog in the morning.   He started in September.   We went in 2010.   It snowed in spring.    Example: on + time phrase\n   ACTIVTY on TIME PHRASE     I went to the gym on Wednesday.   He played football on Saturday.   They worked on Saturday morning.    Usage: at + time phrase\n at + time(e.g. 3 o\u0026rsquo;clock)\n Examples: at + time phrase\n   ACTIVITY at TIME PHRASE     I started at 9 o\u0026rsquo;clock.   He finished at 5 o\u0026rsquo;clock.    Usage: last + time phrase\n lasr + week/moth/year/night/weekend/Day(e.g. Monday)\n Examples: last + time phrase\n   ACTIVITY last TIME PHRASE     I went to the gym last Wednesday.    He came last week.   They started last month.   We saw him last year.   I watched it last \u0026quot; night        Be Careful!     I played last. false   I played yesterday. yes?    Usage: time phrase + ago\n number + hours/days/weeks/months/years + ago\n Examples: time phrase + ago\n   ACTIVITY NUMBER ago     I went 3 hours ago.   He came 4 days ago.   They started 3 weeks ago.   I joined 4 years ago.    Be Careful\n the week before last = 2 weeks ago\n Forms: before vs ago\n   Using before Using ago     the day before yesterday 2 days ago   the week before last 2 weeks ago   the month before last 2 months ago   the year before last 2 years ago    "},{"id":76,"href":"/posts/english/title-of-degree/","title":"Title of Degree","section":"English","content":"title of degree/学位的程度，是指学士/硕士/博士\n1、bachelor（学士）分为：BSc ：bachelor of science（理科）；B.A ：bachelor of Art（文科）BSc(Eng)： bachelor of science(engineering)工科\n2、master（硕士）分为：MSc ：master of science（理科）;M.A ：master of art（文科）；MSc(Eng) ：master of science(Engineering)工科\n3、doctor\u0026rsquo;s degree（博士）：统称Phd即可\n学位程度中的学士、硕士和博士还可以进行细分：\n1、学士：Bachelor of Arts B.A/文学士、Bachelor of Arts in Education B.A.Ed., B.A.E/教育学文学士、Bachelor of Arts in Computer Science B.A.CS/计算机文学士 、Bachelor of Arts in Music B.A.Mus,B.Mus/音乐艺术学士\nBachelor of Arts in Social Work B.A.S.W/社会工作学文学士、Bachelor of Engineering B.Eng., B.E/工学士、Bachelor of Engineering in Social Science B.Eng.Soc/社会工程学士、Bachelor of Science B.S/理学士等。\n2、硕士：Master of Arts M.A/文学硕士、Master of Accounting M.Acc/会计学硕士、Master of Arts in Education M.A.Ed/教育学文学硕士、Master of Architecture M.Arch/建筑学硕士、Master of Arts in Teaching M.A.T/教育文学硕士\nMaster of Business Administration M.B.A/工商管理学硕士、Master of Civil Engineering M.C.E/土木工程学硕士、Master of Chemical Engineering M.Ch.E., M.C.E/化学工程学硕士、Master of Criminal Justice M.C.J/刑事学硕士等。\n3、博士：Doctor of Arts D.A/文学博士 、Doctor of Dental Science D.D.S/牙科博士、Doctor of Engineering D.E/工程博士、Doctor of Education D.Ed/教育学博士、Doctor of Musical Arts D.M.A/音乐艺术博士、Doctor of Osteopathy D.O/骨科博士\nDoctor of Social Science D.S.S/社会科学博士、Doctor of Veterinary Medicine D.V.M/兽医学博士、Doctor of Jurisprudence J.D/法理学博士、Doctor of Judicial Science J.S.D/司法学博士、Doctor of Business Administration D.B.A/工商管理博士等\n"},{"id":77,"href":"/posts/english/which/","title":"Which","section":"English","content":"我们已经学过如何用 which 来提问。\r#\r\rWhich team has more fans? 哪个队有更多球迷？\nWhich 也可以用来把名词和修饰名词的词句连在一起！\nThat is a meter, which is about three feet. 那是一米，就是三英尺左右。\nThat is one foot, which is twelve inches. 那是一英尺，就是十二英寸。\nThis is one inch, which is about two and a half centimeters. 这是一英寸，就是两厘米半。\n"},{"id":78,"href":"/posts/english/%E4%B8%BB%E8%B0%93%E4%B8%80%E8%87%B4the-subject-and-predicate-are-consistent/","title":"主谓一致（ the Subject and Predicate Are Consistent）","section":"English","content":" the+形容词或分词表示一类人， +姓表示一家人，做主语时动词用复数 表示时间，金钱，距离等复合名词做主语时谓语动词用单数 一些学课名词以s结尾看作单数，还有一些形式复数，其实单数的名词 由every-, some-, no-, any-等候成的复合不定代词或者each every, either, neither等做主语的时候，谓语动词用单数 集体名词如family, class, team等做主语，表示每个成员时用复数，表示整体时谓语动词用单数 当主语用and连接时，表示同一概念，谓语动词用单数，不同概念时谓语动词用复数 不定式，动名词做主语，谓语动词用单数  "},{"id":79,"href":"/posts/english/%E5%85%AD%E7%BA%A7%E5%86%99%E4%BD%9C%E8%AF%84%E5%88%86%E6%A0%87%E5%87%86/","title":"六级写作评分标准","section":"English","content":"六级评分标准 满分15分 分档标准 文章表述全面，主题鲜明切题，结构层次清晰，语句连贯流畅，句式修辞丰富，语法、拼写、标点等错误极少。\n13-15分 文章比较完整，主题清楚切题，结构分明，语句比较流畅，句式修辞较多变，有少量语法、拼写、标点等错误。\n10-12分 文章内容完整，基本涵盖要点，结构不够清晰，语意不连贯，句式修辞单一，有较多语法、拼写、标点等错误。\n7-9分 文章表述不全，结构不清晰，层次混乱，语意不连贯，句式修辞单一且错误较多，语法、拼写、标点等错误过多。\n4-6分 主题混乱不清，要点表述不全，未划分段落结构，语句不通顺，有大量语法、拼写、标点等错误。\n1-3分 未进行任何主题相关写作。\n0分 规定字数 大于等于 150 words\n写作建议 A. 思想表达：\n  表达中心思想\n  表达重要或特定信息\n  表达观点、态度等\n  B. 篇章组织\n 围绕所给的题目叙述、议论或描述，突出重点\n  连贯地组句成段，组段成篇\n  C. 语言运用\n 运用恰当的词汇\n  运用正确的语法\n  运用合适的句子结构\n  使用正确的标点符号\n  运用衔接手段表达句间关系（如对比、原因、结果、程度、目的等）\n  D. 写作格式\n运用正确的符合英语表达习惯的写作格式  "},{"id":80,"href":"/posts/english/%E5%85%B3%E7%B3%BB%E5%89%AF%E8%AF%8D%E7%9A%84%E4%BB%A3%E6%9B%BF%E4%BD%BF%E7%94%A8/","title":"关系副词的代替使用","section":"English","content":"时间、地点或理由的名词的先行词是关系副词，在从句中作状语。\n1）when, where,why 关系副词when, where, why的含义相当于\u0026quot;介词+ which\u0026quot;结构，因此常常和\u0026quot;介词+ which\u0026quot;结构交替使用. There are occasions when (on which) one must yield.\n任何人都有不得不屈服的时候。 Beijing is the place where (in which) I was born.\n北京是我的出生地。 Is this the reason why (for which) he refused our offer?\n这就是他拒绝我们帮助他的理由吗？\n2）that代替关系副词 that可以用于表示时间、地点、方式、理由的名词后取代when, where, why和\u0026quot;介词+ which\u0026quot;引导的定语从 句，在非正式文体中that常被省略（正式文体中不可省略），例如： His father died the year (that / when / in which) he was born.\n他父亲在他出生那年逝世了。 He is unlikely to find the place (that / where / in which) he lived forty years ago.\n他不太可能找到他四十 年前居住过的地方\n"},{"id":81,"href":"/posts/english/%E5%88%9D%E4%B8%AD%E8%8B%B1%E8%AF%AD%E4%B8%80%E5%8D%83%E9%AB%98%E9%A2%91%E8%AF%8D/","title":"初中英语一千高频词","section":"English","content":"爱 love 安静的 silent 安静地 silently 安全 safety 安全的 safe 安装;修理 fix 按顺序 in order 按照,如同,当…,因为 as 昂贵的 expensive 嗷,哎哟 ouch [澳大利亚] [澳大利亚]人 Australian Aussie 澳门 Macao 八 eight 八月 August 巴黎 Paris 巴西 Brazil 爸爸 dad 白色的 white 白天 daytime 百 hundred 百货商店 department 百万 million 柏林 Berlin 班级,年级 class 办公室 office 邦戴 Bondy 帮助 help 傍晚;晚上 evening 棒球,垒球 baseball 磅;镑 pound 保持;使得… keep 报纸 newspaper 抱怨 complain 杯子 cup 悲伤的;难过的 sad 北方;北部 north 北方的;北部的 northern 鼻子 nose 比…;比较… than 比较 comparison 比较级的 comparative 比利时 Belgium 比例,比率 rate 比萨饼 pizza 比赛 match 比赛,竞赛 competition 比赛者;选手 player 必须 must 必须的 necessary 毕业 graduate 壁炉 fireplace 避免 avoid 避暑胜地 summer resort 边 side 边;边缘 edge 边缘 rim 鞭炮 firecrackers 便帽;军帽 cap 便士 penny (pence) 便条;纸币 note 便宜的 cheap 变成;成为 become 变换,改变 change 遍及 throughout 标点符号 puntuation 标记;符号;痕迹 sign 标签 label 表达 expression 表格;构成,组成 form 表演;成绩 performance 别的,其他的;另外的人 other 别的;其他的 else 冰 ice 冰雕 ice carving 冰激凌 ice cream 冰山 iceberg 并排 side by side 病假 sick leave 病人 patient 拨(电话) dial 波士顿 Boston 玻璃(杯) glass 脖子 neck 博物馆 museum 不 not 不,不是;没有 no 不安的 restless 不安的 uneasy 不按次序排队的人 jumper 不出名的 unknown 不好不坏的,马马虎虎的 so-so 不见的 missing 不健康的 unhealthy 不久；很快 soon 不可能的 impossible 不平常的 unusual 不同;差异 difference 不同的 different 不喜欢,厌恶 dislike 不走运的;不幸的 unlucky 布 cloth 部分 part 擦;磨 rub 猜 guess 猜想 suppose 裁缝 tailor 裁判，法官 judge 菜单 menu 参加 join 餐厅 dining-room 操场 playground 操作;动手术 operate 嘈杂的 noisy 嘈杂声,响声 noise 草;草地 grass 厕所 toilet 叉子 fork 茶;茶叶 tea 茶壶 teapot 察觉;领悟;了解 realize 长的 long 长筒袜 stocking 尝味;有\u0026hellip;味道 taste 畅销货(书) best-seller 唱唱歌 sing 唱诵 chant 抄写,誊写;复制 copy 超过…,经过…;过去(的) past 超级市场 supermarket 朝着…;向… towards 潮湿的 moist 潮湿的 wet 车站 station 陈列,展览 display 陈述 statement 称…的重量 weigh 成就;成功 success 成立;建立 found 成年人 adult 成员 member 城堡 castle 城市 city 城镇 town 乘…,通过… by 乘独木舟 canoe 乘客 passenger 乘以 multiply 吃 eat 池塘;水坑 pool 迟的 late 尺寸 size 尺子 ruler 冲;奔跑 rush 冲浪 surf 冲浪运动 surfing 冲浪者 surfer 虫;蠕虫 worm 宠物 pet 出口 exit 出去,在外面 out 出生(bear的过去分词) born 出声地, aloud 出现;露面 appear 出租车 taxi 除…之外 except 除非…;如果…不… unless 厨房 kitchen 穿着 wear 传播 spread 传单 leaflet 传递;通过 pass 传统的 traditional 传真 fax 窗子 window 床 bed 吹,刮 blow 春天 spring 磁带 tape 此后;自…以来;由于…;既然… since 此刻,瞬间 moment 从… from 从来不;决不 never 匆忙 hurry 聪明的;机灵的 clever 粗鲁的;激烈的;粗糙的 rough 粗体 bold type 粗心的 careless 粗心地 carelessly 村庄 village 错误 mistake 错误的 wrong 答复;回复 reply 打;撞;击中 hit 打包 pack 打电话,叫喊;电话通话 call 打开;开放的 open 打破(过去式) broke 打破,折断;课间休息 break 打扫;干净的, clean 打印机 printer 打字 type 大道,大街 avenue 大的 big 大的 large 大量地；猛烈地 heavily 大陆;本土 mainland 大门 gate 大米,米饭;水稻 rice 大声的;响亮的 loud 大声地;高声地 loudly 大厅 hall 大象 elephant 大笑;笑声 laugh 大写的 capital [大学生运动会]UNIVERSIADE 大众的;流行的 popular 代词 pronoun 代替 instead 带来;拿来 bring 单程的 one-way 单一的 single 担心，使…担心 worry 担心的,烦恼的 worried 但是;除了 but 蛋糕,,饼 cake 当然 certainly 岛屿 island 倒,灌;倾泻 pour 倒空,清空 empty 倒塌 collapse 倒下 fall 到…;往…;(不定式符号,无词义) to 到…里 into 到…上 onto 到处 everywhere 到达;抵达 arrive 到达;够着 reach 道路;公路 road 得到;到达 get 得分;获胜 score 德国 Germany 德国人 German(s) 的确;确信的 sure 灯笼 lantern 登记处 check-in 等候 wait 等候室 waiting room 低的 low 敌人 enemy 底部 bottom 地板 floor 地方 place 地理(学) geography 地面 ground 地球,地球仪 globe 地图 map 地下的 underground 地震 earthquake 地址 address 第……号 No. =number 第八 eighth 第二 second 第二十 twentieth 第二十一 twenty-first 第九 ninth 第三 third 第十八 eighteenth 第十二 twelfth 第四 fourth 第五 fifth 第一,首先;最初 first 电报 telegraph 电冰箱 fridge 电池 battery 电话;打电话 phone(=telephone) 电话;打电话给… telephone 电话传呼机 beeper 电脑,计算机 computer 电视机 TV 电梯;(云雾)消散 lift 电影 film 电影 movie 电影院;电影 cinema 电子的 electronic 电子邮件 e-mail 雕刻 carve 钓鱼 fishing 调查 survey 调羹;汤匙;勺子 spoon 调制解调器 modem 掉下,落下;滴,水滴 drop 顶部 top 定货单,点菜;订购, order 丢失 lose 丢失的 lost 东北;东北部 northeast 东方(的) east 东京 Tokyo 东西;事情 thing 冬天 winter 动物 animal 动物园 zoo 洞;坑 hole 都;全部;所有的 all 陡峭的,险峻的 steep 豆腐 tofu 独特的 unique 独自地 alone 妒忌的 jealous 短的 short 短袜 sock 堆 pile 队;组 team 队长(足球队);船长,上尉 captain 对不起的 sorry 对的;右边的;正好;恰好 right 对话 dialogue 多伦多 Toronto 多么;怎么样 how 多雪的;降雪的 snowy 多雨的;下雨的 rainy 多云的 cloudy 躲藏 hide 俄国;俄罗斯 Russia 俄国的;俄语;俄国人 Russian 呃,啊 er 儿子 son 耳朵 ear 二 two 二手的 secondhand 二月 February 发动 launch 发动机 engine 发光;照耀 shine 发明 invent 发明 invention 发明家 inventor 发生 happen 发送;寄;派遣 send 发现:找到 find 发现;发觉 discover 发型 hair style 发芽 sprout 发音 pronounce 发展 develop 乏味的 dull 法国 France 法国的;法语 French 法国人 Frenchman 翻译 translate 饭馆 restaurant 防止 prevent 妨碍;打扰 disturb 房顶 roof 房间;空间 room 房子 house 访问 visit 访问者 visitor 放 put 放松 relax 飞;乘飞机去;放(风筝) fly 飞机 aeroplane 飞机 plane 飞机场 airport 非常 very 非洲 Africa 肥胖的 fat 肥皂 soap 废物;浪费;废弃的 waste [肺结核]TB 分角色表演 role play 分类 classify 分享 share 分钟 minute 坟墓 tomb 粉红色 pink 风 wind 风筝 kite 疯狂的 crazy 蜂蜜 honey 夫妻,一对 couple 夫人 Mrs. 服务生 waiter 符号,象征 symbol 父母 parent; parents 父亲 father 付钱 pay 妇女 woman 妇女(pl.) women 复活节兔子 Easter Bunny 复述 retell 复数的 plural 复习 review 副词 adverb 覆盖 cover 改善 improve 改写 rewrite 改正;正确的; correct 干的;把…弄干 dry 干种子 berry 杆子 pole 敢于 dare 感恩节 Thanksgiving 感激的 grateful 感激的 thankful 感觉 feel 感谢 thank 感兴趣的 interested 刚;正好;仅仅 just 钢笔 pen 钢琴 piano 高的 tall 高的(地) high 高度 height 高尔夫球 golf 高兴;愉快 pleasure 高兴的 delighted 高兴的 glad 高兴的 pleased 高兴地,快乐地 happily 高音喇叭 loudspeaker 告诉;吩咐 tell 胳臂 arm 歌,歌曲;歌谣 song 歌唱者;歌手 singer 歌剧;戏剧 opera 个人的;私人的 personal 各个,每个 each 给 give 根据 according to 跟随 follow 更多的;更加 more 更好;较好的 better 更坏的;更差的 worse 更少的 less 更远的 farther 更早的;更早地 earlier 工厂 factory 工程 project 工程师 engineer 工具 tool 工人 worker 工作 job 工作 work 工作场所 workplace 公车停靠站 bus station 公车停靠站 bus stop 公共的;公众的 public 公鸡 rooster 公交车 bus 公斤;千克 kilo 公平的 fair 公司 company 公寓 flat 公园;停放(车辆) park 宫殿 palace 贡献 contribution 狗 dog 购买 buy 购物;买东西 shopping 孤独的 lonely 古代的 ancient 古典的,传统的 classical 谷仓 barn 鼓励 encourage 故事;(楼)层 story 雇员 employee 瓜 melon 拐弯处 turning 关闭 close 关闭 shut 关键的 critical 关门的 closed 关于…；大约 about 观点 opinion 冠军 champion 盥洗室;厕所 washroom 光;轻的,浅色的 light 广泛地;广阔地 widely 广告 ad(=advertisement) 规则;规定 rule 规则的，定时的 regular 轨道;跑道 track 轨道;铁路 rail 鬼 ghost 棍棒 stick 国际象棋 chess 国家的 national 果汁 juice 过程;经过;道路 course 哈佛大学 Harvard 报,广告 poster 海豹 seal 海底的 undersea 海豚 dolphin 海峡,航道;频道 channel 海鲜;海产品 seafood 海洋 ocean 海洋 sea 害怕的 afraid 害怕的 scared 害羞的;腼腆的 shy 汉堡包 hamburger 旱灾,干旱 drought 航班;飞行 flight 豪华，庄重的 grand 好;健康的;好吧 well 好的 good 好的 OK 好的:(身体)好的 fine 好几个 several 好哇 hooray 好象;似乎 seem 好心的 kind-hearted 合理的,公道的 reasonable 合适的 suitable 合同 contract 合作;协同工作 teamwork 何时;当…时 when 和;又;而 and 和…;有…;关于… with 河岸,银行 bank 核桃 walnut 黑板 blackboard 黑的 black 嘿 hey 很,十分 quite 很棒的;好极了的 terrific 很可能;大概 probably 哼 hmn 横穿…,穿过… across 烘烤 bake 红的 red 洪水;淹没 flood 猴子 monkey 后来;以后 later 厚的;粗的 thick 呼喊;喊叫 shout 呼吸 breathe 狐狸 fox 胡椒 pepper 胡萝卜 carrot 壶 pot 湖泊 lake 护士 nurse 护照 passport 花 flower 花费；度过 spend 花园;菜园 garden 华盛顿 Washington 滑冰;溜冰 skate 滑旱冰 roller-skating 滑稽的 funny 滑雪 ski 化石 fossil 化学 chemistry 化妆 costume 划船 boating 划分 divide 划水 paddle 画 draw 画家 painter 话题,主题 topic 怀基基 Waikiki 坏的 bad 欢呼 cheer 欢呼声 yippee 欢迎 welcome 还(没有) yet 环境 environment 患病的 sick 黄色的 yellow 黄油 butter 灰色的 grey 回,向后;背部 back 回答 answer 回来;归还 return 会话 conversation 会见,采访 interview 会见,遇见 meet 会议 meeting 昏暗的 dim 婚礼 wedding 混合 mix up 混合，混和 mix 活动 activity 活动的;动人的 moving 活着的 alive 火 fire 火车;训练,培养 train 火鸡 turkey 火箭 rocket [火奴鲁鲁]Honolulu 伙伴,搭档 partner 或者；否则 or 货物 load 获胜者 winner 饥饿的 hungry 机会 chance 机器 machine 机器人 robot 机械的 mechanical 鸡,鸡肉 chicken 鸡蛋,蛋 egg 积极的 active 激光唱片 CD 吉普车 jeep 极地 polar region 疾病 disease 几乎 almost 几乎不 hardly 计划 plan 记得 remember 记号;标记;痕迹 mark 记录 record 记忆存贮器 memory 记者 journalist 技师 mechanic 技术;工艺学 technology 季节 season 继续 continue 加 plus 加利福尼亚号 Californian 加拿大 Canada 加拿大人 Canadian 夹克衫 jacket 佳能(相机名) Canon 家;在家,到家 home 家庭 family 家庭作业homework 家务 housework 家乡 hometown 甲壳虫乐队 Beatles 价格 price 价钱为…,花费 cost 驾驶 drive 驾驶;掌舵 steer 架子;搁板 shelf 假如;如果 if 假设 imagine 假设 suppose 坚果,果仁 nut 肩膀 shoulder 监视器 monitor 捡起 pick 减去 minus 剪刀 scissors 检查 check 建议 suggest 建议，忠告 advice 建造 build 建筑(物) building 健康 health 健康的 healthy 健康地 healthily 键盘 keyboard 江河;河 river 将 shall 将,愿意 would 将;应该 should 将近;几乎 nearly 将来 future 将要 will 奖品;奖赏 prize 降水 rainfall 交通 traffic 礁岩 reef 角落;拐角 corner 绞死 hang 饺子 dumpling 脚 foot (feet) 脚步;走;踏,踩 step 脚趾 toe 搅动 stir 叫,鸣叫 crow 叫喊(动物声) yip 轿车,汽车 car 教;教书 teach 教练 coach 教师 teacher 教室 classroom 教堂;教会 church 教育 education 接力(赛) relay 接收;收到;得到 receive 街道 street 节假日 holiday 节目 programme 节日(的) festival 结冰;凝固 freeze 结果 result 结婚 marry 结尾,结局 ending 她 she 她(宾格) her 她的 hers 她自己 herself 姐;妹 sister 解决;解答 solve 介绍 introduce 介意,关心;小心,照顾 care 借 borrow 借(出) lend 今天 today 今晚 tonight 金属 metal 仅仅;只有 only 紧张不安的 nervous 尽管,虽然 although 尽管;虽然 though 近来 lately 进步;提高;前进 progress 进攻;袭击 attack 进入;回车键 enter 经常 often 经理 manager 经验 experience 惊奇,惊讶;对…感到怀疑 wonder 惊奇,惊讶;使…吃惊 surprise 精彩的 wonderful 精确地 exactly 精神 spirit 景色 scenery 警察 policeman 警察;警方 police 警告;提醒 warn 警官,监督员 inspector 竞争 compete 镜子 mirror 九 nine 九十 ninety 九月 September 酒,红酒 wine 救生船 lifeboat 居住;生活 live 橘子,桔子;橙色的 orange 沮丧的 frustrated 句子 sentence 巨大的 huge 拒绝 refuse 俱乐部 club 俱乐部;社团 club 剧场;戏院 theatre 聚会 get-together 聚会 party 聚酯化合物 polyester 卷笔刀 sharpener 决定 decide 决定 decision 攫取;抓取 grab 咔哒声;发出咔哒声 click 咖啡 coffee 卡车 truck 开端;开始 beginning 开花 bloom 开罗 Cairo 开始,着手;出发 start 开始:着手 begin 看;看起来 look 海(河)滩 beach 待;当作 regard 看见;看望 see 看门人 gatekeeper 慷慨;豁达 generosity 考试 exam 考试 examination 科学 science 科学家 scientist 咳嗽 cough 可带走的（熟食） take-away 可口可乐 coke 可能的 possible 可怕的;感到不舒服的 terrible 可移动的 mobile 可以 may 可以…;行; could 课 lesson 课本 textbook 课桌 desk 空白处 blank 空的;清空,倒空 empty 空调机 air conditioner 空间;太空 space 空气 air 恐怖的 scary 恐怖主义者 terrorist 恐龙 dinosaur 口袋,衣袋 pocket 口对口的 mouth-to-mouth 口渴的 thirsty 哭;叫喊 cry 骷髅 skeleton 裤子 trousers 酷妹 foxy ladies 夸奖 praise 跨越,横跨;十字形 cross 快的;迅速的 quick 快的;迅速地 fast 快地;迅速地 quickly 快乐的;幸福的 happy 筷子 chopstick 宽的 wide 昆虫 insect 捆扎;系 tie 困难 difficulty 困难的 difficult 困难的;努力地;硬的 hard 括号 bracket 垃圾;废物 rubbish 垃圾;扔垃圾 litter 垃圾箱 dustbin 拉,拽,拖,拔 pull 蜡烛 candle 来 come 来回的;往返的(车票等) round-trip 栏目 column 蓝的 blue 篮球 basketball 篮子 basket 懒惰的 lazy 狼 wolf 浪;波浪 wave 老板 boss 老的 old 老虎 tiger 老鼠;鼠标 mouse 乐队 band 雷声 boon 累的 tired 冷的 cold 梨子 pear 离开 away 离开 off 离开;出发 leave 礼貌的 polite 礼貌地 politely 礼堂,演讲厅 auditorium 礼物 gift 礼物 present 里士满 Richmond 理解 understand 理由 reason 历史 history 历险，冒险 adventure 利物浦 Liverpool 例子;榜样 example 连接 connect 怜悯,同情;遗憾的事 pity 联盟 league 脸 face 练习 practice 练习 practise 练习;锻炼 exercise 凉爽的;(口语)酷 cool 两层 two-story 两次;两倍 twice 两者;(二者)都 both 两者都不;(两者)无一个 neither 了望塔 watchtower 邻居 neighbour 邻里;街坊 neighbourhood 铃响；打电话 ring 铃子 bell 零 zero 领导,带领 lead 令人兴奋的 exciting 令人厌烦的 boring 令人愉快的;好的,漂亮的 nice 另一，又一 another 溜溜球 yo-yo 流行歌手 pop singer 六 six 六月 June 笼子;鸟笼 cage 聋的 deaf 楼道,楼梯 stairway 陆地,大地;地球 earth 陆地;登陆,降落 land 录象 video 鹿 deer 路;方法 way 路线;去路 path 旅程 journey 旅馆 hotel 旅行 travel 旅行;绊倒,失误 trip 旅行者 traveller 旅游者;观光者 tourist 绿色的 green 伦敦 London 轮船 ship 轮流;翻转;变得 turn 轮子 wheel 罗马 Rome 妈妈 mum 妈咪 mummy 麻烦 trouble 马 horse 马卡哈 Makaha 埋葬 bury 卖;售 sell 满的 full 曼彻斯特 Manchester 慢的;慢慢地;放慢 slow 慢慢地 slowly 忙的 busy 猫 cat 毛笔 writing-brush 毛衣;运动衣 sweater 帽子 hat 没有人 nobody 没有什么东西 nothing 没有一个人;没有任何东西 none 每个 every 每个人;大家 everybody 每个人;大家 everyone 每件事 everything 美分 cent 美国 America 美国 USA 美国的,美国人 American 美丽的;漂亮的 beautiful 美利坚合众国 the United States 美味的 delicious 美元 dollar 门 door 门口的垫子 doormat 门铃 door-bell 猛敲;砰砰声 bang 迷、球迷、影迷 fan 谜语 riddle 米(长度单位) metre (meter) 秘密 secret 秘书 secretary 密码;符号;编码 code 蜜蜂 bee 绵羊 sheep 棉花 cotton 面包 bread 面粉 flour 面条 noodle 描述;描写 description 描述;叙述 describe 庙会 temple fairs 名字;姓名 name 明亮的 bright 明亮地 brightly 明天 tomorrow 明信片 postcard 模型;模范 model 摩托车 motorbike 魔法的 magical 魔鬼 thriller 末梢;结束 end 莫斯科 Moscow 墨尔本 Melbourne 墨西哥 Mexico 某人,有人 somebody 某人,有人 someone 某事(物) something 母鸡 hen 母亲 mother 木板 board 木头 wood 目的 purpose 目的地 destination 目击者 witness 牧羊人 shepherd 拿;握 hold 拿出;提供 offer 拿到;带到;花费,耗费 take 哪个;哪些 which 那个 that 那里;(引导词,无词义) there 那些 those 奶奶;婆婆 grandma 奶牛,母牛 cow 奶油;乳脂 cream 男衬衫 shirt 男孩 boy 男人 man 男人们(man的复数) men 男生 schoolboy 南方;南部 south 南瓜 pumpkin 难过地;悲哀地 sadly 难闻的 smelly 闹钟 alarm clock 能;可以;会 can 能量 energy 嗯 um 尼泊尔 Nepal 尼龙 nylon 你(们)的 your 你(们)的 yours 你,你们(主格,宾格) you 你好 hi 你们自己 yourselves 你自己 yourself 年 year 年级 grade 年龄 age 年轻的 young 鸟 bird 宁愿;更喜欢 prefer 牛奶 milk 牛肉 beef 纽基 Newquay 农场 farm 农民 farmer 农田 farmland 农业;耕种 farming 努力;尝试;射门 shot 女衬衫 blouse 女儿 daughter 女服;(统指)衣服 dress 女孩 girl 女裙 skirt 女士 Ms 女士;夫人 lady 女士;夫人 madam 女售货员 salesgirl 欧洲 Europe 爬 climb 排;行 row\n"},{"id":82,"href":"/posts/english/%E5%8A%A8%E8%AF%8D%E4%B8%8D%E5%AE%9A%E5%BC%8F%E7%94%A8%E5%88%97/","title":"动词不定式用列","section":"English","content":"动词不定式做主语:\r#\r\r to get up early is necessary 早起是必要的 it做形式主语 it\u0026rsquo;s necessary to get up early\n 动词不定式做宾语\r#\r\r he decided to buy a new car\n 动词不定式做宾语补足语\r#\r\r I like you to keep everything tidy\n 疑问词加不定式做宾语\r#\r\r please show us how to do that\n 动词不定式做表语\r#\r\r his wish is to be a policeman\n 动词不定式做状定语\r#\r\r we need someone to help I have many letters to write 如果不定式的动词是不及物动词，后面须加上适当的介词 I am looking for a room to live in.\n "},{"id":83,"href":"/posts/english/%E5%8A%A8%E8%AF%8D%E7%9A%84%E6%97%B6%E6%80%81/","title":"动词的时态","section":"English","content":"动词时态的意义 动词，就是用来形容或表示各类动作的词汇。基本上每个完整的子句都有一个动词，要表示第二个动作时可使用不定词、动名词、对等连接词、从属连接词或增加子句等方法连结。而在英语中根据时间和动作的种类，动词又分为了多种时态。\n动词时态的种类 时间和动作的种类 1.一般现在时(do); 2.一般过去时(did); 3.一般将来时( will do)(be going to do)(shall do); 4.一般过去将来时( would do); 5.现在进行时( be doing); 6.过去进行时(was/were doing); 7.将来进行时( will be doing); 8.过去将来进行时( would be doing)(was/were going to do); 9.现在完成时(have done); 10.过去完成时( had done); 11.将来完成时( will have done); 12.过去将来完成时(would have done); 13.现在完成进行时( have been doing); 14.过去完成进行时( had been doing); 15.将来完成进行时( will have been doing); 16.过去将来完成进行时(would have been doing)。\n　其实是英语动词的时和体。时有现在、过去、将来和过去将来;体有一般、完成、进行和完成进行。而态有2种，即主动和被动。以上只是主动，加上被动就更多了。\n注意：本文来自互联网，复制是为了知识传播，本人不从转载中获取金钱利益\n"},{"id":84,"href":"/posts/english/%E6%97%B6%E9%97%B4%E4%BB%8B%E8%AF%8Din-on-at-%E7%9A%84%E4%B8%8D%E5%90%8C%E7%94%A8%E5%A4%84/","title":"时间介词in, on , at 的不同用处","section":"English","content":"用 at 来表示在某一段时刻：\r#\r\r　atdawn/daybreak： 在黎明 at six ：在6点钟 atmidnight ：在午夜 at 4:30 ：在4点30分 用 at 来表示在……岁时 at sixteen/at the age of sixteen ：16岁的时候 ##用 on 来表示在星期几/某日 on Monday ：在星期一 on January fifth：在1月5日 on Christmas Day ：在圣诞节那一天 也可用atChristmas onNew Year\u0026rsquo;s Day：在新年那天 ##用in来表示一天中的早中晚，月份，季节或年份 in the morning/afternoon/evening在早晨，下午，晚上 inJanuary/February在一月，二月 inSpring在春天 in 2014在2014年\n"},{"id":85,"href":"/posts/english/%E8%8B%B1%E6%96%87%E8%AF%AD%E6%B3%95%E8%AF%8D%E6%B1%87/","title":"英文语法词汇","section":"English","content":"抽象名词 abstract noun 副词 adverb 形容词 adjective 冠词 article 助动词 auxiliary verb 基数词 cardinal numeral 集体名词 collective noun 普通名词 common noun 连接词 conjunction 可数名词 countable noun 定冠词 dfinite sentence 指示代词 demonstrative pronoun 限定词 determiner 动名词 gerund 不定冠词 indefinite article 不定代词 indefinite pronoun 感叹词 interjection word\n疑问代词 in terrogative pronoun 不及物动词 intransitive verb 不规则动词 irregular verb 系动词 link verb 物质名词 material noun 情态动词 modal noun 非限定动词 non-finite verb 名词 noun 数词 numberal 序数词 ordinal numberal 人称代词 personal pronoun 短语动词 phrasa verb 物主代词 possesive pronoun 谓语动词 predicate verb 代词 pronoun 专有名词 proper noun 量词 quantifier 规则动词 regular verb 关系副词 relative adverb 关系代词 relative pronoun 自身代词 self/ reflexive pronoun 及物动词 transitive verb 不可数名词 uncountable noun 动词 verb 非限定性动词 verbal 形容词短语 adjective phrase 同位语 appositive 定语 attribute 补语 complement 复合宾语 complex object 直接宾语 direct object 直接引语 direct speech 间接引语 indirect speech 间接宾语 indirect object 修饰词语 modifier\n宾语 object 宾语补足语 object complement 插入语 parenthetical statement 过去分词短语 past participle phrase 谓语 predicate 介词短语 prepositional phrase 现在分词短语 present participle phrase 主语 subject 动词短语 verb phrase 状语从句 adverbial clause 肯定句 affirmative sentence 选择疑问句 alternative question 同位语从句appositive clause 复合句 complex sentence 并列句compound sentence 条件句conditional sentence 陈述句 declarative sentence\n强调句 emphatic sentence 感叹句 exclamatory sentence 一般疑问句 general question 祈使句 imperative sentence 疑问句 interrogative sentence 倒装句 inverted sentence 否定句 negative sentence 非限定性从句 non-defining clause 非限定定语从句 non-restrictive relative clause 名词从句 noun clause 宾语从句 object clause 表语从句 predicative clause 简单句 simple sentence 特殊疑问句 special question 主语从句 subject clause\n"},{"id":86,"href":"/posts/english/%E8%8B%B1%E8%AF%AD%E5%8F%A3%E8%AF%AD%E5%85%B3%E9%94%AE%E5%90%8D%E8%AF%8D-nouns/","title":"英语口语关键名词 Nouns","section":"English","content":"#有关物的名词 ##时间类 time morning afternoon noon evening night tonight today tomorrow yesterday weekend month year season spring autumn winter day date moment period history future birthday holiday festival schedule age ##气候类 weather rain snow wind cloud ##自然类 nature mountain air light water fire ice smoke heat ground sky river field forest sea stone star ##植物类 plant grass tree crop ##动物类 animal bird cat dog horse rabbit elephant bear tiger lion bull cow pig chicken fish sheep monkey snake reptile ##昆虫类 insect bee butterfly spider ##其他生物 bacteria ##地点类 place hospital restaurant hotel university factory jail zoo park school store club bar court market town village city ##机构类 organization company charity ##声音类 sound voice noise music ##食品类 food egg meat steak bread cake dessert soup sandwich noodle pie chocolate sauce ##餐饮类 meal breakfast lunch dinner ##蔬菜类 vegetable potato tomato carrot lettuce bean ##水果类 fruit apple orange banana ##食材类 ingredient oil sugar salt butter cream ##饮料类 drink coffee milk tea juice beer wine alcohol ##营养类 nutrient mineral vitamin protein ##疾病类 disease fever flu cancer ##房屋类 house office room floor wall window door roof kitchen ##家具类 furniture bed chair desk table seat couch ##服装类 clothes shirt shoes cap hat coat dress pants uniform suits underwear pocket jeans button zip sock ##首饰类 jewelry diamond ring ##化妆品 cosmetics perfume lipstick powder ##交通类 transport traffic bicycle ship boat plane train ##车辆类 vehicle motorcycle bus car truck brake engine gear tire wheel ##路桥类 road street bridge station ##装置类 device lock key bell scale tap 设备类 equipment shower radio telephone camera computer TV fridge video ##容器类 container box cup dish plate bowl basket tub sink pot pan ##材料类 material cloth paper glass plastic gold paint chemical ##日常用品类 toy brush mirror chain board handle cartoon bottle wood clock knife pen book album menu card envelope ticket pipe tube wire belt web film screen gift channel alarm electricity towel carpet tool junk fork spoon medicine drug pill ##数量 couple double load pack lot ##单位 unit meter inch pound gram piece ##事情 thing issue matter stuff object event #有关人的名词 ##家庭角色类 parent daughter son father mother brother sister husband wife uncle aunt grandfather grandmother role ##社会角色类 kid child baby boy girl man woman friend lady gentleman boss customer student neighbor person volunteer fool sir madam ##职业类 job doctor nurse professor lawyer engineer teacher coach guard judge ##群体类 group people class team human staff society generation army government family 总单词量：355个 类别：38个 ##抽象名词： #话语类 words topic subject joke question suggestion instruction permission ##文字类 document story report novel note text letter email blog list menu rule：law grammar principle ##信息类 information message news update notice fact detail evidence clue background data sign knowledge ##状态类 state condition environment situation：mess balance peace emergency chance opportunity ##行为类 act exercise practice test experiment lesson bath security attention focus step education advertisement treatment trick habit service business homework job：task project challenge duty：responsibility fault performance：concert opera drama study：math art science philosophy psychology arrangement：deal insurance account engagement occasion：meeting interview party picnic wedding funeral barbecue ceremony money：profit income salary loan cash cost credit deposit price tax bill budget ##活动类 activity game discipline crime trade economy politics war trip fashion industry sports：soccer football golf basketball race ##思想类 thought idea view theory religion plan：strategy policy program ##整体类 network internet series career system：language transport ##其他类 favor privilege mistake risk advantage benefit problem trouble surprise secret award prize diet property option case example sample score limit experience effort energy figure 总单词量：166个 类别：9个 #构成类名词：你的外在与内在 ##核心词 part ##部位 side edge base core ##身体 head eye ear face nose foot mouth tooth tongue neck shoulder breast chest stomach arm hand finger nail leg knee throat brain heart lung muscle bone nerve hair skin blood sweat ##精神 mind spirit soul emotion feeling：shame stress respect desire pain sense ##力量 strength force power：authority ability：sight intelligence memory skill ##动物 tail wing ##植物 flower leaf root branch ##其他 whole rest half 总单词量：65个 类别：8个 #属性类名词：你的状态 ##静态属性 ###形状 shape appearance ###尺寸 size space ###位置 position point line end bottom middle top front back center corner left right direction：east west north south ###品质 quality feature character personality ##其他属性 color weight tone material structure ##数量 amount number measurement distance volume angle temperature level：degree grade rank standard rate：speed percentage ##类别 kind type ##动态属性 ###方式 form way：behavior mood logic tradition culture style pattern relation manner ###原因 cause reason source excuse factor ###目的 purpose goal ###结果 effect result ###过程 course process 总单词量：70个 类别：12个\n练习英语请加微信群，仅使用英语交流，内容来至于英语口语教学书籍《1368个单词就够了》。 Practice English, please scan the code and add WeChat group, only use English to communicate, the content comes to the English oral teaching book \u0026quot;1368 words is enough\u0026quot;. "},{"id":87,"href":"/posts/english/%E8%8B%B1%E8%AF%AD%E5%A4%A7%E8%AF%8D/","title":"英语大词","section":"English","content":"动词： be, make, 单纯词：go, have, give，get, take\n"},{"id":88,"href":"/posts/english/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95%E7%BB%86%E8%8A%82/","title":"英语语法细节","section":"English","content":"拼读基础知识：\r#\r\r 语调\n语调（intonation），即说话的腔调，就是一句话里声调（pitch）高低抑扬轻重的配制和变化。英语有五种基本语调：升调（↗）、降调（↙）、升降调（∧）、降升调（∨）以及平调（→）。一句话除了词汇意义（lexical meaning）还有语调意义（intonation meaning）。语调意义就是说话人用语调所表示的态度或口气。一句话的词汇意义加上语调意义才算是完全的意义。同样的句子，语调不同，意思就会不同，有时甚至会相差千里。 读音规则  重读音节 非重读音节   读音\n48个英语国际音标 用对称法排序 20个辅音 3个鼻音 2个半元音 3个似拼音 20个元音  元音  12个单元音  5个长元音\n[i:][ə:][ɔ:][u:][ɑ:] 7个短元音 [ə][ɔ][æ][e][ʌ][i][u]     8个双元音\n[ai][ei][ɔi][iə][εə][uə][əu][au] 辅音  10个清辅音 [p][t][k][f][s][θ][ʃ][tʃ][tr][ts] 10个浊辅音\n[b][d][g][v][z][ð][ʒ][dʒ][dr][dz]   3个鼻音 [m][n][ŋ] 3个似拼音\n[h][r][l] 2个半元音\n[w][j] 音标字母对应：  [i:] 字母组合:ee ea e ie ei （eo ey i）\nthree tree green sheep meet beef see seek\neat tea meat leave lead teacher team mean speak clean please\nhe she me piece receive ceiling [ I ]发音字母 i y e ui u a\nsit picture it is list six mix fix fit pig big build miss myth many twenty happy dictionary defect decide delicious [ æ] 发音字母 a\nbag hand and ant happy hat map mad bad black back glad flag shall man [e] 字母组合 ea e a （ue,u,ie,ai,ei,ay）\nhead bread pleasure elephant electric remember sell shell lesson better bed desk hotel yes many any [ε:] 字母组合ir ur ear er or\ngirl shirt skirt thirty thirteen third bird turn burn murder nurse turtle Thursday burger learn earn earth heard term her nerd serve work worm work world [ε] 字母组合 er or ou ar o a e u\nteacher leader remember player speaker farmer powder doctor actor mayor author tractor delicious gracious pleasure familiar collar dollar together tomorrow today shallop lesson Washington control polite around account ago elephant manta banana Canada Japan china men listen famulus Saturday [a:] 字母组合 ar a\ncar farm card arm garden fast class last glass plant aunt calm [ ʌ] 发音字母 u o ou oo\nup supper lunch fun gun hunt cup bus come mother dose brother love above trouble rough flourish blood flood [ɔ: ]字母组合 al or au our ar\nsmall wall talk tall hall ball call walk short more lord horse for forty sport door floor store author caught autumn four mourn court bought warm quarrel quarter [ ɔ] ([ɒ])发音字母 o a ou\nhot lost lot fox box mop hop loss collar not want wash watch [u:] 字母组合 oo o u\nfood moon room gloom broom doom goose tooth shoe do two true truth blue full prude [u] 字母组合 oo ou u o\nlook good foot book wood should could put full bull pull push woman wolf [ei] 发音字母 a ay ea ai ey\nname cake late gate plane April play say may way great break rain paint plain they grey [ai] 发音字母 i y\nbike fine find die nine light night high my try fly eye [au] 字母组合 ou ow\nhouse out flour ground account count sound loud around mouse flower down now cow how town [εu] 发音字母 o ow oa\nhome cold go no phone host ghost know low below grow blow show flow boat coat goal [ ɔɪ] 字母组合oy oi\nboy toy joy oil soil voice choice [iε] 字母组合 eer ear\nbeer deer ear near here fierce idea [ ɛə ] ([eə])字母组合ear air ere\npear bear chair air fair there where care [uε] [auə]字母组合our ower     字母  词法\r#\r\r词类\r#\r\r  名词\n  动词\n  形容词\n  副词\n副词（Adverb 简称adv.）是指在句子中表示行为或状态特征的词，用以修饰动词、形容词、其他副词或全句，表示时间、地点、程度、方式等概念。副词可分为：时间副词、频率副词、地点副词、方式副词、程度副词、疑问副词、连接副词、关系副词、表顺序的副词。\n 时间频率副词 now，then，often，always，usually，next，lastday，already(已经)，generally(一般地)， frequently（频繁），seldom/hardly（很少地），ever，never，yet，soon，too， immediately（立即）， finally，shortly（很快）， before， ago，sometimes， yesterday. once，twice， lately，recently，personally，today……yet 地点副词 here， there， everywhere， anywhere，somewhere， in， out， inside， outside， above， below， up，down， back， forward（向前地）， home， upstairs(楼上地)， downstairs， across， along， round ， around， near， off， past， up， away， on.…… 方式副词 carefully， properly(适当地)， anxiously(焦虑地)， suddenly， normally(正常地)， fast， well， calmly(冷静地)， politely(有礼貌地)， proudly(自豪地)， softly， warmly ，slowly，badly，hard，bravely…… 程度副词 much，little， very，rather(相当)，so，too，still， quite， perfectly(完美地)， enough， extremely(非常)， entirely(整个)，almost， slightly(细小地)， hardly.…… 疑问副词 how， when， where， why…… 关系副词 when， where， why…… 连接副词 therefore(因此)，moreover(此外)，however，otherwise(另外的)， then，when ，where，how，why…… 表顺序的副词 first，then，next，finally，afterwards，primarily…… 完成时的副词 already，ever，just，never，since，yet，recently……    代词\n  数词\n  冠词\n冠词（Article）是一种虚词，在句子中不重读，本身不能独立使用，只能放在名词前帮助说明名词所指的人或事物，它是英语词性中最小的一类，只有三个，一种是不定冠词（Indefinite Article），一种是定冠词（Definite Article）。此外也有些特定场合不用冠词，即通常所称的零冠词（Zero Article）。其中冠词简称“art.”冠词有不定冠词、 定冠词、 零冠词。\n 定冠词（例如英语中的the）用来限定这个冠词后面的名词是某个特定的事物； 不定冠词（例如英语中的a/an）用来表示这个冠词后面的名词是指某一类特定事物中的一个，但具体是哪一个并不重要； 部分冠词（例如法语中的du/de la）用来表示这个冠词后面的名词的量是不确定的。    介词\n介词（preposition 简写prep.）又称作前置词，表示名词、代词语句中其他词的关系，在句中不能单独作句子成分。介词后面一般有名词、代词或相当于名词的其他词类、短语或从句作它的宾语，表示与其他成分的关系。介词和它的宾语构成介词词组，在句中作状语，表语，补语，定语或介词宾语。同时介词的用法也很灵活，同一个介词可以表达多种意义，介词可以分为时间介词、地点介词、方式介词、原因介词、数量介词和其他介词。\n 简单介词\n包括in，on，with，by，for，at，about，under，of等。 合成介词\n包括into，within，throughout，inside，outside，without等 重叠介词\n包括 from among 从\u0026hellip;当中 from behind 从\u0026hellip;后面， until after 直至\u0026hellip;之后， at about 在大约\u0026hellip;， after about 在大约\u0026hellip;之后 等 短语介词\n一个或两个简单介词和一个或几个其他词类构成一个短语，作用相当于一个介词，这就叫做短语介词。这类介词的末尾总是一个简单介词 如 according to，because of，by means of，in addition to，in front of， in spite of，into等。 分词介词\n有极少数介词的词尾是“-ing”，形似现在分词（其中也有些可做分词）。 常用的有：considering，regarding，respecting，including。 按词义分\n表示“地点（包括动向）”的有：about around（在\u0026hellip;附近、周围），above(高于、在\u0026hellip;斜上方)，across(在\u0026hellip;对面、横过).    连词\n连词是用来连接词与词、词组与词组或句子与句子、表示某种逻辑关系的虚词。连词可以表并列、承接、转折、因果、选择、假设、比较、让步等关系。\n  感叹词\n表示说话时喜悦、惊讶等情感的词就是感叹词。感叹词有oh，喔，耶，啊，哇等。感叹词一般放在句首，后用逗号隔开，感情强烈时，可用感叹号表示。\n Oh\n表示惊讶、指责、痛苦、称赞、懊恼等，可译为“哦”、“哎呀”、“噢”“啊”、“呀”等。\n1．“Oh， who was that？” Mr． Black asked．“哦，是谁？”布莱克先生问。\n2．“Oh， how blind you are！” he cried．“哎呀，你们真瞎！”他大声道。\n3．“Oh， oh！” he cried．“My stomach！ My head！ oh！ oh！”“哎呀，哎哟！”他大声道，“我的肚子！我的头！哎哟！哎哟！”\n4．Oh， learned judge！ Oh， wise young man．噢，博学的法官！噢，聪明的年轻人！ Ah\n表示惊奇、高兴、讨厌、懊悔、藐视、威胁等，可译为“呀、啊”等。\n1．Ah， yes， Jeanne married a man with a lot of money．啊，对啦，珍妮嫁给了一个很有钱的人。\n2．“Ah， what splendid clothes！” thought the Emperor．“啊！多华丽的衣服啊！”皇帝想。\n3．Ah，how pitiful！呀，多可惜！\n4． Ah， here is the thing I am after．哎呀，我找的东西在这儿呢。 come\n表示鼓励、不耐烦、引起注意、安慰等，可译为“喂、好吧、说吧、得啦”等。\n1．Oh，come， Mathilde．Surely you can tell an old friend．嗨，说吧，玛蒂尔德，你对老朋友说说总是可以的吧。\n2．Come， we must hurry．喂，我们得赶紧啦！\n3．Come， come， get him his change．Tod，get him his change．好吧，好吧，托德，快把钱找给他，快把钱找给他。\n4． Come，come！ What were you really doing behind the bicycle sheds？喂！喂！你还在车棚里磨蹭啥？ dear\n表示后悔、难过、怜悯、同情、吃惊、盼望等，可译为“哎呀、天哪”等。\n1． Dear me！ What awful weather！哎呀！多糟的天气！\n2．Oh， dear， dear！ Where can Harry be？天哪，天哪，亨利会在哪儿？\n3．Dear， dear！ Where have I put my keys？哎呀，我把钥匙放在哪啦？\n4．“Dear me，” he said to himself，“Am I foolish or unfit for my office？”“哎呀！”他心里嘀咕着，“我是愚蠢呢还是不称职？” well\n表示快慰、让步、期望、讥讽、解释、责备、犹豫等，可译为“好吧、不过、好啦、嗯”等。\n1． Well，your father has found him in the garage．好啦，你父亲在车库里找到他了。\n2．Are you sure？ Well，perhaps you are right．你能肯定吗？嗯，也许你说得对。\n3．Well，you must come to lunch tomorrow．不过，你明天一定要来吃午饭。\n4．I handed the note to him and said，“Oh，very well，I apologize．”我把那张票子递给了他，说道：“啊，好极了，我向你道歉。”\n5．Well，why don\u0026rsquo;t you make a notice like theirs？那么，你为什么不做个像他们那样的广告牌呢？ now\n表示警告、命令、请求、说明、安慰筹，可译为“喂、喏、好了”等，有时也可不必译出。\n1．Now，now， you two；Don\u0026rsquo;t fight again．喂，喂，你们俩，别再打了。\n2．Now， now， my boy！It\u0026rsquo;s all right！There\u0026rsquo;s no need to cry！好了，好了，孩子，没事了，别哭了。\n3．Now，let\u0026rsquo;s play basketball．喏，咱们打篮球吧！\n4．Now，lift me up，Doctor，lift me up．Where is he？把我扶起来吧，医生，把我扶起来。他在哪里？ there\n表示得意、鼓励、同情、悲哀、不耐烦、失望、安慰、挑衅、引起注意等，可译为“哟、瞧、好啦、得啦”等。\n1．There！There！ Never mind， you\u0026rsquo;ll soon feel better．好啦，好啦，不要紧，你马上会好的。\n2．There，there，you said too much．得啦，得啦，你说的太多了。\n3．There—I\u0026rsquo;ve filled it up again．瞧，我又把它灌满了。\n4．There—what\u0026rsquo;s that？哟，那是什么！ man\n表示兴奋、轻蔑、不耐烦、引起注意、可译为“啊、嗨”等。\n1．“Use you knife，man！” ordered the British officer nearby．“嗨，用刀子割！”旁边的英国军官命令道。\n2．Hurry up，man．嗨，快点。\n3．We have won the match，man！啊，我们胜利了。 boy\n表示高兴、兴奋、惊奇等，可译为“嘿、哇、哼、怎么样”等。\n1． Boy，oh，boy！Our team\u0026rsquo;s going to win！How fantastic？哇，怎么样！我们队要赢了！真是太好了！\n2．Boy！This soup is good，Mama！嘿，妈妈，这汤好得很。\n3．Oh，boy！I just had a wonderful dream！嘿，我刚才做了个好梦。    语气\r#\r\r 陈述语气 祈使语气 虚拟语气\n虚拟语气用来表示假想，而不表示客观存在的事实，所说的是一个条件，不一定是事实，或与事实相反。虚拟语气通过谓语动词的特殊形式来表示。英语中的语气分为陈述语气、祈使语气、虚拟语气三类。虚拟语气表示说话者做出的假设并非事实，或难以实现的，甚至表达相反的概念。另外表示主观愿望或表达某种强烈的感情时，也用虚拟语气。  语态\r#\r\r 主动语态 被动语态\n被动语态(passive voice)是动词的一种形式，用以说明主语与谓语动词之间的关系。英语的语态共有两种：主动语态和被动语态。主动语态表示主语是动作的执行者，被动语态表示主语是动作的承受者。被动语态是动词的一种特殊形式，一般来说，只有需要动作对象的及物动词才有被动语态。汉语往往用\u0026quot;被\u0026quot;、\u0026ldquo;受\u0026rdquo;、\u0026ldquo;给\u0026quot;等被动词来表示被动意义 。被动语态由“助动词be+及物动词的过去分词”构成。被动语态的时态变化只改变be的形式，过去分词部分不变。疑问式和否定式的变化也如此。  时态\r#\r\r 一般现在时 一般过去时 一般将来时 过去将来时 现在进行时 过去进行时 将来进行时 过去将来进行时 现在完成时 过去完成时 将来完成时 过去将来完成时 现在完成进行时 过去完成进行时 将来完成进行时 过去将来完成进行时  非谓语动词\r#\r\r 不定式\n在语法中，动词不定式是指动词的一种不带词形变化从而不指示人称、数量、时态的形式。它之所以被叫做不定式，是因为动词不被限定，或者说不被词形变化所局限。不定式属于非谓语动词。 动词ing形式 动词过去分词  句法\r#\r\r句子\r#\r\r句子是由词或词组（短语）按照一定的语法规则构成的，表达一个完整的意思。在谈话时要用一定的语调，句与句之间要有一定的停顿。在书写时句子末尾用标点符号，如句号、问号、感叹号等。句首第一个字母要大写。\n句子成分\r#\r\r 句子的组成成分叫句子成分，也叫句法成分。在句子中，词与词之间有一定的组合关系，按照不同的关系，可以把句子分为不同的组成成分。句子成分由词或词组充当。汉语： 现代汉语里一般的句子成分有八种，即主语、谓语、宾语、动语，定语、状语，补语和中心语。 英语：句子的组成部分，包括主语、谓语、宾语、定语、状语、表语、宾语补足语和同位语八种。\n  主语\n主语是句子陈述的对象，表示句子主要说明的人或事物，一般由名词.代词.数词.动名词.动词不定式等充当。\nHe likes watching TV. 他喜欢看电视。（在这句中“He”为代词，充当句子主语） 谓语 谓语由动词构成，说明主语所发出的动作或具有的特征和状态。依据其在句中繁简程度可把谓语分为简单谓语和复合谓语两类。不论何种时态，语态，语气，凡由一个动词（或动词词组）构成的谓语都是简单谓语。   简单谓语\n由动词(或短语动词)构成。\n可以有不同的时态，语态和语气。\nWe study for the people.我们为人民学习。 复合谓语：情态动词+不定式\nI can speak a little English.我可以说一点英语。    宾语\n宾语是谓语动作所涉及的对象，它是动作的承受者，宾语可以由名词或起名词作用的成分担任，宾语一般放在谓语动词后面。 有些及物动词可以有两个宾语，其中一个宾语多指人，另一个宾语指物，指人的宾语叫做间接宾语，指物的宾语叫做直接宾语，简称双宾语,可以带两个宾语的动词有 bring,give,show,send,pass,tell等。间接宾语一般放在直接宾语的前面，如果强调直接宾语可把直接宾语放在间接宾语的前面，但间接宾语前须加\u0026quot;to\u0026rdquo;。\n My father bought me a book.\n我父亲给我买了一本书。 Give the rubber to me.\n把橡皮给我。 Please give the letter to XiaoLi. 请把这封信给小李。 有些及物动词除跟一个宾语外，还需要加上宾语补足语，否则意思不完整，它们一起构成复合宾语，复合宾语中宾语和后面的宾语补足语有一种逻辑上的主谓关系，这也是判断是两个宾语是否为复合宾语的依据，宾语可以由名词或起名词作用的词担任。 We make him our monitor.\n我们选他当班长。 We all call him LaoWang.\n我们都叫他老王。 Please color it red.\n请给它涂上红颜色。 We found the little girl in the hill.\n我们在山上找到了小女孩    定语\n用于描述名词，代词，短语或从句的性质，特征范围等情况的词叫做定语，定语可以由名词，形容词和起名词和形容词作用的词，短语担任。如果定语是单个词，定语放在被修饰词的前面，如果是词组，定语放在被修饰词的后面。\n That is a beautiful flower.\n那是一朵漂亮的花。 The TV set made in that factory is very good.\n那个工厂生产的电视机很好。 This is my book,not your book.\n这是我的书，不是你的书。 There are more than twenty trees in our school.\n我们学校里有二十多棵树。 I have a lot of things to do.\n我有好多要做的事情。 Our country is a developing country.\n我们的国家是一个发展中的国家。    状语\n 说明事物发生的时间，地点，原因，目的，结果方式，条件或伴随情况，程度等情况的词叫状语。 状语的功用：状语说明地点、时间、原因、目的、结果、条件、让步、方向、程度、方式和伴随状况等。 状语一般由副词、形容词短语、名词短语、介词短语、分词和分词短语、不定式或相当于副词的词或短语或从句来担当。其位置一般放在句末，但也可放在句首或句中，修饰动词、形容词、副词等  副词一般在句子中做状语．\nHe speaks English very well. 他英语说得非常好.\nHe is playing under the tree.中的under the tree是地点状语. 不定式在句子中可以作目的状语。\nI come specially to see you.我专门来看你. 介词短语\nTen years ago,She began to live in Dalian.\nThe boy was praised for his bravery. 从句作状语\nWhen she was 12 years old,she began to live in Dalian.\nIf I am not busy tomorrow,I will play football with you. 分词作状语\nHaving had a quarrel with his wife,he left home in a bad temper。\nInhibited in one direction,it now seems that the Mississippi is about to take another.      表语\n表语是用来说明主语的性质，身份，特征和状态。表语须和连系动词一起构成句子的复合谓语。表语一般放在系动词之后。表语可以由名词，形容词或起名词和形容词作用的词和短语担任。\n These desks are yellow. 这些桌子是黄色的。 I am all right. 我没事。 We are happy now. 我们现在很幸福。 It\u0026rsquo;s over. 时间到了。 She is ten. 她十岁了。 My work is teaching English, 我的工作是教英语。 The dictionary is in the bag. 词典在书包里边。 My question is how you knew him. 我的问题是你如何知道他。    补语 英语中补语的作用对象是主语和宾语，具有鲜明的定语性描写或限制性功能，在句法上是不可或缺的。补语是起补充说明作用的成份。最常见的是宾语补足语。名词、动名词、形容词、副词、不定式、现在分词、过去分词都可以在句子中作宾补。\n 主语的补语\n它用在系动词后，是句子的一个基本成分。常用主－系－表结构。  I saw her with them,at least,I thought it was her.\n我看到她和他们在一起，至少，至少我认为是她。（前一个her做宾语，them做介词宾语，后一个her做主语补语） Who broke the vase? \u0026ndash;谁打碎了花瓶？\n\u0026ndash; Me. \u0026ndash;我。（me做主语补语= It\u0026rsquo;s me.） John hoped the passenger would be Mary and indeed it was she. （she做主语补语）\n约翰希望那位乘客是玛丽，还真是她。   宾语的补语  不定式(to do)\nFather will not allow us to play on the street. 父亲不让我们在街上玩耍。\nWe believe him to be guilty. 我们相信他是有罪的。\nWe made him（to） copy the sentence.（此处的to应省略）我们让他复读这个句子\nHe is made to copy the sentence.他被要求复读这句子。\nI felt my hands（to） tremble.（此处的to应省略）我感到我的手在颤抖。 名词 At the meeting we elected him monitor.在班会上，我们选了他当班长\nI think your brother a clever boy.我觉得你的兄弟是个聪明的男孩 形容词 What you said made Xiao Wang angry.你所说的使小王生气了\nI found the classroom empty.我发现教室里面一个人都没有 副词 Please call the students back at once.请马上让学生们回来\nHe was seen to take his cap off.（这里off作cap的补语）有人看见他脱下了帽子 现在分词 We hear him singing in the hall.我们听见他正在大厅里面唱歌\nI found him lying in bed,sleeping.我发现他正躺在床上睡觉 过去分词 He saw his face reflected in the water.他看见他的脸倒映在水里\nI heard it spoken of in the next room.我听到隔壁房里提到过这个      同位语\n一个名词(或其它形式)对另一个名词或代词进行解释或补充说明，这个名词（或其它形式）就是同位语。同位语与被它限定的词的格式要一致，并常常紧挨在一起。同位语除表示其同位成分的全部意义外，还可以表示部分意义。\n  由两个或两个以上同一层次的语言单位组成的结构，其中前项与后项所指相同，句法功能也相同，后项是前项的同位语其中常用‘，’连接。\nMr. Smith,our new teacher,is very kind to us.\n我们的新老师史密斯先生对我们很好。\nour new teacher是主语Mr.Smith 的同位语，指同一人。\nYesterday I met Tom,a friend of my brothers'.\n昨天我遇到了我弟弟的朋友汤姆。\na friend of my brothers\u0026rsquo;是受词Tom的同位语，指同一人。\n  同位语与其同位成分关系紧密时不用逗点隔开；同位语对其同位成分只作补充解释时可用逗点隔开。\nHe told me that his brother John was a world-famous doctor.\n他本人对我讲，他的兄长约翰是一位世界闻名的医生。\n（brother和John都是单一的字作同位语，与其同位成分之间不用逗点隔开。）\nYesterday I talked to my English teacher,Mr. James.\n昨天我与我的英语老师詹姆斯先生谈过了。\n（同位语Mr. James补充解释my English teacher，同位语与其同位成分之间可用逗点隔开。）\n  同位语除表示其同位成分的全部意义外，还可以表示部分意义。\nWe Chinese people are brave and hard-working.\n我们中国人民是勤劳勇敢的。\nChinese people是we的同位语。\nHe is interested in sports,especially ball games.\n他喜欢运动，特别是球类运动。\nball games是sports的同位语。\n    句子类型\r#\r\r  陈述局\n陈述句(Declarative Sentence)是陈述一个事实或者说话人的看法。陈述句又分为肯定的陈述句和否定的陈述句，简称为肯定句（The Affirmative Sentence）和否定句（The Negative Sentence）。陈述句在书写时句末用句号，在朗读时用降调。\n陈述句的五种基本句型：\n 主语+连系动词+表语 主语+谓语（不及物动词） 主语+谓语（及物动词）+宾语 主语+谓语（及物动词）+间接宾语+直接宾语 主语+谓语（及物动词）v.+宾语+宾语补足语    疑问句\n疑问句是按照句子的语气分出来的一个类，它与陈述句、感叹句、祈使句的最大区别就是它的疑问语气；是问一些事情的，表达的内容并不是陈述，所以是不确定的；主要有四大句型，一般疑问句、选择疑问句、特殊疑问句和反意疑问句。\n 一般疑问句\n一般疑问句是疑问句的一种。它是指用“yes”或“no”来回答的句子。其结构是：系动词be/助动词/情态动词+主语+其他成分?如：\nIs this your pen?\u0026ndash;Yes it is./No it isn\u0026rsquo;t.  由肯定的陈述句转化的一般疑问句。\nHave you been living here? 你一直住在这儿吗？ 否定的一般疑问句。\nCan\u0026rsquo;t he drive? 他不是会开车吗？ Can he not drive? 他不会开车吗？ 回答否定形式的一般疑问句的注意事项： Is he not a student? 他不是学生吗？\nYes,he is. 不，他是学生。（错误的答语：No,he is.）\n小窍门：在回答的时候，只要把它当成没有加以否定形式的普通一般疑问句一样看待。 将陈述句变为一般疑问句时，如句中有be 动词（am is are …）时，可直接将它们提至主语前。如主语为第一人称，应将其改为第二人称。如：\nI\u0026rsquo;m in Class 2 Grade 1.→Are you in Class 2 Grade 1? 陈述句中有情态动词（can may must …）时，也可直接将它们提至主语前，即可成为一般疑问句。如：\nHe can swim now.→Can he swim now? 陈述句中只有一个实义动词作谓语且其时态为一般现在时，变为一般疑问句时要在句首加“do”或“does” 主语后的实义动词用原形。如： I like these animals.→Do you like these animals? 一般疑问句一般读升调（↑） 一般疑问句有时不用“yes”或“no”回答。      选择疑问句\n定义：选择疑问句提出两个或两个以上可能的答案供对方选择。这类疑问句有两种形式：一种是以一般疑问句的结构形式为基础，只是在语调上有所区别。这一类选择疑问句通常都是在前一个供选择的答案用低升调，后一个用降调；如果有两个以上供选择的答案，则在最后一个用降调，其余都用低升调。\n例如：\n Would you like a gin,or a whisky,or a\u0026rsquo;beer?\n你是要喝杜松子酒，还是威士忌酒，还是啤酒？\n这种语调上的特征往往是区别选择疑问句和一般疑问句的重要标志。试比较:\nShall we leave at six or\u0026rsquo;seven?我们是6点动身还是7点动身？\nShall we leave at six or seven?我们在六七点钟动身好吗？\n上述第一例是选择疑问句，其答案只能是两者之一。\nWe shall leave at six/ seven．我们将在6点/7点动身。\n上述第二例是一般疑问句，它的答案只是 yes/no，而且并不肯定是6点或7点，甚至可能既不是6点，也不是7点：\nYes,we shall leave at six or seven.\n是的，我们将在六七点钟动身。\nNo.We must leave earlier.\n不。我们必须早点动身。\n另一种选择疑问句是以特殊疑问句的结构形式为基础的，也是在语调上有所区别。例如：\nWhich vase shall I use,the short one or the tall one.\n   特殊疑问句\n以疑问词开头，对句中某一成分提问的句子叫特殊疑问句。常用的疑问词有：what who whose which when where how why等。特殊疑问句有两种语序：\n 如疑问词作主语或主语的定语，即对主语或主语的定语提问， 其语序是陈述句的语序：疑问词（+主语）+其他成分？如：\nwho is singing in the room? whose bike is broken? 如疑问词作其他成分，即对其他成分提问，其语序是：疑问词+一般疑问句语序？如：\nwhat class are you in?\n注意：1．回答特殊疑问句时，不能用yes / no，即问什么答什么，尤其是简略回答。如： Who is from Canada? \u0026ndash;Helen (is). 特殊疑问句一般读降调(↓)。    反意疑问句\n反意疑问句又叫附加疑问句，是指当提问的人对前面所叙述的事实不敢肯定，而需要向对方加以证实时所提出的问句。其结构为：前一部分是一个陈述句，后一部分是一个简单的问句。完成后一部分简单问句时，要根据前面陈述句的动词时态和人称来选择适当的助动词进行提问，前后两部分的人称和动词时态要保持一致。如果前一部分用肯定式，后一部分一般用否定式；反之，前一部分为否定式，后一部分要用肯定式，即“前肯定后否定，前否定后肯定”。\n 陈述部分的主语是“I”，疑问部分要用 aren\u0026rsquo;t I.I\u0026rsquo;m as tall as your sister.aren\u0026rsquo;t I? 陈述部分的谓语是“wish”，疑问部分要用“may”+主语。\nI wish to have a word with you,may I?我想和你说句话，可以吗？ 陈述部分用no、nothing、nobody、never、few、seldom、hardly、rarely、little等否定含义的词时，疑问部分用肯定含义。例：The Swedemade no answer,did he / she? 含有“ought to”的反意疑问句，陈述部分是肯定的，疑问部分用shouldn\u0026rsquo;t / oughtn\u0026rsquo;t +主语。\nHe ought to know what to do,oughtn\u0026rsquo;t he? / shouldn\u0026rsquo;t he? 陈述部分有“have to”+v. （had to + v.），疑问部分常用“don\u0026rsquo;t”+主语（didn\u0026rsquo;t +主语）。\nWe have to get there at eight tomorrow,don\u0026rsquo;t we? 陈述部分的谓语是“used to”时，疑问部分用“didn\u0026rsquo;t”+主语或“usedn\u0026rsquo;t”+主语。\nHe used to take pictures there,didn\u0026rsquo;t he? / usedn\u0026rsquo;t he? 陈述部分有“had better”+ v. 疑问句部分用“hadn\u0026rsquo;t you”。\nYou\u0026rsquo;d better read it by yourself,hadn\u0026rsquo;t you? 陈述部分有“would rather”+v.，疑问部分多用“wouldn\u0026rsquo;t”+主语。\nHe would rather read it tentimesthan recite it,wouldn\u0026rsquo;t he? 陈述部分有“You\u0026rsquo;d like to”+v. 疑问部分用“wouldn\u0026rsquo;t”+主语。\nYou\u0026rsquo;d like to go with me,wouldn\u0026rsquo;t you? 陈述部分有“must”的疑问句，疑问部分根据实际情况而定。\nHe must be a doctor,isn\u0026rsquo;t he? 感叹句中，疑问部分用“be”+主语。\nWhat colours,aren\u0026rsquo;t they? 陈述部分由“neither… nor”，“either… or ”连接的并列主语时，疑问部分根据其实际逻辑意义而定。\nNeither you nor I am engineer,are we? 陈述部分主语是指示代词或不定代词everything,that,nothing,this,疑问部分主语用“it”。 Everything is ready,isn\u0026rsquo;t it? 陈述部分为主语从句或并列复合句，疑问部分有三种情况： 陈述部分主语是不定代词everybody,anyone,somebody,nobody,no one等，疑问部分常用复数“they”，有时也用单数“he”。\nEveryone knows the answer,don\u0026rsquo;t they?（does he?） 带情态动词“dare”或“need”的反意疑问句，疑问部分常用“need”（dare）+主语。 省去主语的祈使句的反意疑问句，疑问部分用“will you”。Don\u0026rsquo;t do that again,will you? 陈述部分是“there be”结构的，疑问部分用“there”省略主语代词。There is something wrong with your watch,isn\u0026rsquo;t there?\nThere will not be any trouble,will there? 否定前缀不能视为否定词，其反意疑问句仍用否定形式。\nIt is impossible,isn\u0026rsquo;t it?\nHe is not unkind to his classmates,is he? “must”在表“推测”时，根据其推测的情况来确定反意疑问句。\nHe must be there now,isn\u0026rsquo;t he?\nIt must be going to rain tomorrow,won\u0026rsquo;t it ?    感叹句\n感叹句(exclamation ；Exclamatory sentences)有多种表现形式，有时一个单词、短语或一个词组也可成为感叹句。如：Hello!(喂！),The design and the colours!(多美丽的图案和色彩啊！);有时陈述句、疑问句以及祈使句也可以转化成感叹句，如：What a nice boy!(多好的孩子！)How can you be so silly!(你怎么这么傻！)Don’t go with us!(别跟我们一起去！)。尽管感叹句的表现形式多种多样，但主要的表现形式只有两种，即what和how引导的感叹句。what修饰名词（名词前可加冠词和形容词）,how修饰形容词、副词或动词。感叹句除了可以由how和what引导外，还有许多其他形式，可以用陈述句、疑问句、祈使句，有时甚至是一个单词或是一个短语也可以是一个感叹句。通常用how，what。\n 由感叹词what引导的感叹句。  What+a/an+（形容词）+单数可数名词+主语+谓语！\nWhat+名词词组+主语+谓语！\n如: What a fine day it is! What+(形容词）+可数名词复数或不可数名词+主语+谓语! 如:\nWhat kind women they are!\nWhat nice music it is!   由How引导的感叹句。（how用来修饰形容词、副词或动词。）  How+形容词（副词）+主语+谓语！ 如:\nHow hard the workers are working! How clever the girl is! How quickly the boy is writing! How+主语+谓语！ 如：\nHow time flies! 时光飞逝!   注意:  当how修饰动词时，动词不跟着感叹词提到主语之前。 如: How fast the runner runs! how与what引导的感叹句中的第一种格式(单数名词)一般情况下可以相互转换，转换后意义不变。 如:\nWhat an interesting story it is! = How interesting the story is! What a beautiful building it is! = How beautiful the building is! 在口语中，感叹句的主语和谓语常常省略。 如:\nWhat a nice present!（省略it is） How disappointed!（省略she is或其它可作本句主、谓的词语）      祈使句\n表示要对方做或不做某事、带有祈使语气的句子。\n 祈使句的语调特点：  语音强度一般比陈述句重，书面上用感叹号表示。 句末用降调，较长句子的后半部分几个音节速度加快。   根据祈使句的语用意义和语气的强弱，祈使句可以分为四类:  表示命令的祈使句 表示请求的祈使句 表示禁止的祈使句 表示劝阻的祈使句      句子的种类\r#\r\r 简单句 并列句 由并列连词把两个或两个以上的简单句连在一起的句子叫并列句。不同的并列连词表示并列分句之间的不同关系。 复合句\n复合句（Compound Sentence）分为并列复合句和主从或从属复合句，并列复合句是有并列连词：and、or、but连接；从属复合句由一个主句（Principal Clause)和一个或一个以上的从句(Subordinate Clause)构成  直接引语,间接引语\r#\r\r 引用别人的话有两种方式，一种是直接引用别人原句，这叫直接引语；另一种是用自己的话来转述别人话，且不能用引号，这是间接引语。\n 定语从句\r#\r\r 定语从句，一个句子跟在一名词或代词（先行词）后进行修饰限定，就叫做定语从句。通俗来讲，从句在整个句子中做定语，这个从句就叫做定语从句。在主句中充当定语成分。 [1] 被修饰的词叫先行词。定语从句不同于单词作定语的情况，它通常只能放在被修饰的词（即先行词）之后。\n 状语从句\r#\r\r 状语从句 （Adverbial Clause） 状语从句指句子用作状语时，起副词作用的句子。它可以修饰谓语、非谓语动词、定语、状语或整个句子。根据其作用可分为时间、地点、原因、条件、目的、结果、让步、方式和比较等从句。状语从句一般由连词(从属连词)引导，也可以由词组引起。从句位于句首或句中时通常用逗号与主句隔开，位于句尾时可以不用逗号隔开。\n 倒装句\r#\r\r 为了强调、突出等词语的目的而颠倒原有语序的句式叫做倒装句。在倒装句中，颠倒了的成分可以恢复原位而句意基本不变，句法成分不变\n 主谓一致\r#\r\r 主谓一致即谓语动词在人称和数上要和主语保持一致，主谓一致包括语法一致、意义一致和就近一致，语法一致即谓语动词在单复数形式上要和主语保持一致，意义一致就是谓语动词要和主语意义上的单复数保持一致，就近一致就是谓语动词要和靠近它的主语部分保持一致。\n 强调句型\r#\r\r 强调句，是基本语法 ，是一种修辞，是人们为了表达自己的意愿或情感而使用的一种形式。英语常用的强调结构是\u0026quot;It is (was)+被强调部分(主语、宾语或状语)+who (that)\u0026hellip;\u0026quot;。\n通过各种方式对句子中的某个部分进行强调，从而起到修辞的作用。一般说来,被强调部分指人时,用who;指事物时用that,但that也可以指人。在美国英语中指事物时常用which来代替that。\n 名词性从句\r#\r\r 表语从句\n表语从句（Predicative Clause）就是用一个句子作为表语。说明主语是什么，由名词、形容词或相当于名词或形容词的词或短语充当表语。 主语从句\n主语从句，即在复杂句中充当主语成分的句子，例如\u0026quot;That he finished writing the composition in such a short time surprised us all\u0026quot;，他在很短的时间内写完作文让我们都很惊讶，此复合句主要描述的是某事让我们惊讶，某事就是该复合句的主语，因此“That he finished writing the composition in such a short time”便是该复合句的主语从句。\n引导主语从句的连词主要有：\n从属连词：that whether\n连接代词：who whoever whom whose what whatever which whichever\n连接副词：when where how why 宾语从句\n宾语从句，是名词性从句的一种。在主从复合句中充当宾语，位于及物动词、介词或复合谓语之后的从句称为宾语从句。宾语从句分为三类：动词的宾语从句，介词的宾语从句和形容词的宾语从句。 同位语从句\n同位语从句指的是在复合句中充当同位语的从句，属于名词性从句的范畴，同位语从句用来对其前面的抽象名词进行解释说明，被解释说明的词和同位语在逻辑上是主表关系  "},{"id":89,"href":"/posts/english/%E8%AF%AD%E6%B3%95-grammar/","title":"语法 Grammar","section":"English","content":"主语\u0026ndash;动作的发出者 谓语\u0026ndash;动词，有实意动词和系动词 宾语\u0026ndash;动作指向的对象是宾语 定语\u0026ndash;形容词，修饰、限定、说明名词或代词的品质与特征 状语\u0026ndash;修饰动词 表语\u0026ndash;系动词之后，对主语进行描述 补语\u0026ndash;对宾语进行补充\n"},{"id":90,"href":"/posts/english/%E8%AF%AD%E6%B3%95%E5%BD%92%E7%BA%B3/","title":"语法归纳","section":"English","content":"名词、动词、形容词\r#\r\r副词\r#\r\r副词（Adverb 简称adv.）是指在句子中表示行为或状态特征的词，用以修饰动词、形容词、其他副词或全句，表示时间、地点、程度、方式等概念。副词可分为：时间副词、频率副词、地点副词、方式副词、程度副词、疑问副词、连接副词、关系副词、表顺序的副词。 \u0026hellip;\u0026hellip;地\n冠词\r#\r\r冠词（Article）是一种虚词，在句子中不重读，本身不能独立使用，只能放在名词前帮助说明名词所指的人或事物，它是英语词性中最小的一类，只有三个，一种是不定冠词（Indefinite Article），一种是定冠词（Definite Article）。此外也有些特定场合不用冠词，即通常所称的零冠词（Zero Article）。其中冠词简称“art.”冠词有不定冠词、 定冠词、 零冠词。 定冠词（例如英语中的the）用来限定这个冠词后面的名词是某个特定的事物； 不定冠词（例如英语中的a/an）用来表示这个冠词后面的名词是指某一类特定事物中的一个，但具体是哪一个并不重要； 部分冠词（例如法语中的du/de la）用来表示这个冠词后面的名词的量是不确定的。\n介词\r#\r\r介词（preposition 简写prep.）又称作前置词，表示名词、代词语句中其他词的关系，在句中不能单独作句子成分。介词后面一般有名词、代词或相当于名词的其他词类、短语或从句作它的宾语，表示与其他成分的关系。介词和它的宾语构成介词词组，在句中作状语，表语，补语，定语或介词宾语。同时介词的用法也很灵活，同一个介词可以表达多种意义，介词可以分为时间介词、地点介词、方式介词、原因介词、数量介词和其他介词。\n连词\r#\r\r连词是用来连接词与词、词组与词组或句子与句子、表示某种逻辑关系的虚词。连词可以表并列、承接、转折、因果、选择、假设、比较、让步等关系。\n感叹词\r#\r\r表示说话时喜悦、惊讶等情感的词就是感叹词。感叹词有oh，喔，耶，啊，哇等。感叹词一般放在句首，后用逗号隔开，感情强烈时，可用感叹号表示。oh ah come dear well now man boy\n语气\r#\r\r陈述语气、祈使语气、虚拟语气\n语态\r#\r\r主动语态、被动语态 被动语态(passive voice)是动词的一种形式，用以说明主语与谓语动词之间的关系。英语的语态共有两种：主动语态和被动语态。主动语态表示主语是动作的执行者，被动语态表示主语是动作的承受者。被动语态是动词的一种特殊形式，一般来说，只有需要动作对象的及物动词才有被动语态。汉语往往用\u0026quot;被\u0026quot;、\u0026ldquo;受\u0026rdquo;、\u0026ldquo;给\u0026quot;等被动词来表示被动意义 。被动语态由“助动词be+及物动词的过去分词”构成。被动语态的时态变化只改变be的形式，过去分词部分不变。疑问式和否定式的变化也如此。\n非谓语动词\r#\r\r不定式 在语法中，动词不定式是指动词的一种不带词形变化从而不指示人称、数量、时态的形式。它之所以被叫做不定式，是因为动词不被限定，或者说不被词形变化所局限。不定式属于非谓语动词。 动词ing形式 动词过去分词\n句子成分\r#\r\r句子的组成部分，包括主语、谓语、宾语、定语、状语、表语、宾语补足语和同位语八种\n主语\r#\r\r主语是句子陈述的对象，表示句子主要说明的人或事物，一般由名词.代词.数词.动名词.动词不定式等充当。\n谓语\r#\r\r谓语由动词构成，说明主语所发出的动作或具有的特征和状态。依据其在句中繁简程度可把谓语分为简单谓语和复合谓语两类。不论何种时态，语态，语气，凡由一个动词（或动词词组）构成的谓语都是简单谓语。\n定语\r#\r\r用于描述名词，代词，短语或从句的性质，特征范围等情况的词叫做定语，定语可以由名词，形容词和起名词和形容词作用的词，短语担任。如果定语是单个词，定语放在被修饰词的前面，如果是词组，定语放在被修饰词的后面。\n状语\r#\r\r说明事物发生的时间，地点，原因，目的，结果方式，条件或伴随情况，程度等情况的词叫状语。 状语的功用：状语说明地点、时间、原因、目的、结果、条件、让步、方向、程度、方式和伴随状况等。 状语一般由副词、形容词短语、名词短语、介词短语、分词和分词短语、不定式或相当于副词的词或短语或从句来担当。其位置一般放在句末，但也可放在句首或句中，修饰动词、形容词、副词等\n表语\r#\r\r表语是用来说明主语的性质，身份，特征和状态。表语须和连系动词一起构成句子的复合谓语。表语一般放在系动词之后。表语可以由名词，形容词或起名词和形容词作用的词和短语担任。 主系表结构\n补语\r#\r\r英语中补语的作用对象是主语和宾语，具有鲜明的定语性描写或限制性功能，在句法上是不可或缺的。补语是起补充说明作用的成份。最常见的是宾语补足语。名词、动名词、形容词、副词、不定式、现在分词、过去分词都可以在句子中作宾补。\n同位语\r#\r\r一个名词(或其它形式)对另一个名词或代词进行解释或补充说明，这个名词（或其它形式）就是同位语。同位语与被它限定的词的格式要一致，并常常紧挨在一起。同位语除表示其同位成分的全部意义外，还可以表示部分意义。\n句子类型\r#\r\r陈述局\r#\r\r陈述句(Declarative Sentence)是陈述一个事实或者说话人的看法。陈述句又分为肯定的陈述句和否定的陈述句，简称为肯定句（The Affirmative Sentence）和否定句（The Negative Sentence）。陈述句在书写时句末用句号，在朗读时用降调。 陈述句的五种基本句型： 主语+连系动词+表语 主语+谓语（不及物动词） 主语+谓语（及物动词）+宾语 主语+谓语（及物动词）+间接宾语+直接宾语 主语+谓语（及物动词）v.+宾语+宾语补足语\n疑问句\r#\r\r疑问句是按照句子的语气分出来的一个类，它与陈述句、感叹句、祈使句的最大区别就是它的疑问语气；是问一些事情的，表达的内容并不是陈述，所以是不确定的；主要有四大句型，一般疑问句、选择疑问句、特殊疑问句和反意疑问句。 一般疑问句 一般疑问句是疑问句的一种。它是指用“yes”或“no”来回答的句子。其结构是：系动词be/助动词/情态动词+主语+其他成分?\n特殊疑问句\r#\r\r以疑问词开头，对句中某一成分提问的句子叫特殊疑问句。常用的疑问词有：what who whose which when where how why等。特殊疑问句有两种语序： 1.如疑问词作主语或主语的定语，即对主语或主语的定语提问，其语序是陈述句的语序：疑问词（+主语）+其他成分？ 如疑问词作其他成分，即对其他成分提问，其语序是：疑问词+一般疑问句语序？\n选择疑问句\r#\r\r定义：选择疑问句提出两个或两个以上可能的答案供对方选择。这类疑问句有两种形式：一种是以一般疑问句的结构形式为基础，只是在语调上有所区别。这一类选择疑问句通常都是在前一个供选择的答案用低升调，后一个用降调；如果有两个以上供选择的答案，则在最后一个用降调，其余都用低升调。\n反意疑问句\r#\r\r反意疑问句又叫附加疑问句，是指当提问的人对前面所叙述的事实不敢肯定，而需要向对方加以证实时所提出的问句。其结构为：前一部分是一个陈述句，后一部分是一个简单的问句。完成后一部分简单问句时，要根据前面陈述句的动词时态和人称来选择适当的助动词进行提问，前后两部分的人称和动词时态要保持一致。如果前一部分用肯定式，后一部分一般用否定式；反之，前一部分为否定式，后一部分要用肯定式，即“前肯定后否定，前否定后肯定”\n感叹句\r#\r\r感叹句(exclamation ；Exclamatory sentences)有多种表现形式，有时一个单词、短语或一个词组也可成为感叹句。如：Hello!(喂！),The design and the colours!(多美丽的图案和色彩啊！);有时陈述句、疑问句以及祈使句也可以转化成感叹句，如：What a nice boy!(多好的孩子！)How can you be so silly!(你怎么这么傻！)Don’t go with us!(别跟我们一起去！)。尽管感叹句的表现形式多种多样，但主要的表现形式只有两种，即what和how引导的感叹句。what修饰名词（名词前可加冠词和形容词）,how修饰形容词、副词或动词。感叹句除了可以由how和what引导外，还有许多其他形式，可以用陈述句、疑问句、祈使句，有时甚至是一个单词或是一个短语也可以是一个感叹句。通常用how，what。\n祈使句\r#\r\r表示要对方做或不做某事、带有祈使语气的句子。 祈使句的语调特点： 语音强度一般比陈述句重，书面上用感叹号表示。 句末用降调，较长句子的后半部分几个音节速度加快。 根据祈使句的语用意义和语气的强弱，祈使句可以分为四类: 表示命令的祈使句 表示请求的祈使句 表示禁止的祈使句 表示劝阻的祈使句\n句子的种类\r#\r\r简单句\r#\r\r并列句\r#\r\r由并列连词把两个或两个以上的简单句连在一起的句子叫并列句。不同的并列连词表示并列分句之间的不同关系。\n复合句（Compound Sentence）\r#\r\r分为并列复合句和主从或从属复合句，并列复合句是有并列连词：and、or、but连接；从属复合句由一个主句（Principal Clause)和一个或一个以上的从句(Subordinate Clause)构成\n直接引语,间接引语\r#\r\r引用别人的话有两种方式，一种是直接引用别人原句，这叫直接引语；另一种是用自己的话来转述别人话，且不能用引号，这是间接引语。\n定语从句\r#\r\r定语从句，一个句子跟在一名词或代词（先行词）后进行修饰限定，就叫做定语从句。通俗来讲，从句在整个句子中做定语，这个从句就叫做定语从句。在主句中充当定语成分。 [1] 被修饰的词叫先行词。定语从句不同于单词作定语的情况，它通常只能放在被修饰的词（即先行词）之后。\n状语从句\r#\r\r状语从句 （Adverbial Clause） 状语从句指句子用作状语时，起副词作用的句子。它可以修饰谓语、非谓语动词、定语、状语或整个句子。根据其作用可分为时间、地点、原因、条件、目的、结果、让步、方式和比较等从句。状语从句一般由连词(从属连词)引导，也可以由词组引起。从句位于句首或句中时通常用逗号与主句隔开，位于句尾时可以不用逗号隔开。\n名词性从句\r#\r\r表语从句（Predicative Clause）\r#\r\r就是用一个句子作为表语。说明主语是什么，由名词、形容词或相当于名词或形容词的词或短语充当表语。\n主语从句\r#\r\r即在复杂句中充当主语成分的句子，例如\u0026quot;That he finished writing the composition in such a short time surprised us all\u0026rdquo;，他在很短的时间内写完作文让我们都很惊讶，此复合句主要描述的是某事让我们惊讶，某事就是该复合句的主语，因此“That he finished writing the composition in such a short time”便是该复合句的主语从句。 引导主语从句的连词主要有： 从属连词：that whether 连接代词：who whoever whom whose what whatever which whichever 连接副词：when where how why 宾语从句 宾语从句，是名词性从句的一种。在主从复合句中充当宾语，位于及物动词、介词或复合谓语之后的从句称为宾语从句。宾语从句分为三类：动词的宾语从句，介词的宾语从句和形容词的宾语从句。 同位语从句 同位语从句指的是在复合句中充当同位语的从句，属于名词性从句的范畴，同位语从句用来对其前面的抽象名词进行解释说明，被解释说明的词和同位语在逻辑上是主表关系\n倒装句\r#\r\r为了强调、突出等词语的目的而颠倒原有语序的句式叫做倒装句。在倒装句中，颠倒了的成分可以恢复原位而句意基本不变，句法成分不变\n"},{"id":91,"href":"/posts/english/%E9%9B%85%E6%80%9D%E8%AF%84%E5%88%86%E6%A0%87%E5%87%86/","title":"雅思评分标准","section":"English","content":"满分9分 分档标准 完全满足任务的所有要求，对于题目的回应非常切题，观点鲜明，论证非常充分； 不露痕迹地使用衔接手段，分段得体； 词汇使用广泛、自然而老到，极少出现小错误如“笔误”； 语法结构的使用广泛、准确而灵活。\n9分 充分涵盖题目的所有要求，对于题目的回应切题，观点鲜明，论证充分； 信息和观点的安排有序而富有逻辑性，衔接性的各个方面安排得体，分段充分、适当； 能流畅、灵活地使用多样词汇来准确表达思想，能巧妙使用较不常见单词和习语，尽管偶尔有词汇选择和搭配上的不准确，拼写和构词法错误极少； 灵活使用多种结构，大部分语句无误。\n8分 涵盖题目要求，文章立场清晰，提出、引申、并支持主要观点，但可能有过度概括，分支观点不够紧凑； 信息和观点组织有逻辑性，文章从头至尾有延续性，衔接手段使用合理，虽然可能有一些使用过少或过多，每个段落有明确的主题； 词汇使用丰富、有一定的准确性和灵活性，能使用较不常见词汇，对语体和搭配有所了解，在词汇的选择、拼写和构词法上偶尔有错误；\n7分 回应题目要求，虽然有的部分涵盖不够完整，立场切题，虽然结论可能不清晰或重复，主要观点切题，但有的观点可能论证不够充分或不清晰； 信息和观点组织连贯，文章有延续性，衔接手段使用有效，但是句子内部和句子之间的衔接可能有误或过于机械，指代关系可能不能总是清晰合理地使用，有分段但没有逻辑性； 使用适当范围的词汇，试图使用较不常见词汇但有一些不准确，在拼写和构词法上有错误但不至于影响交际。\n6分 只是部分回应题目要求，格式可能有时不准确，有立场但发展不够清晰，可能缺少结论，有主要观点但观点有限并且论证不够充分，可能有不相关细节； 信息有一定组织但缺少总体延续性，衔接手段不充分、不准确或过度使用，缺少指代和替换，显得重复过多，没有分段或分段不充分； 使用有限词汇量，但只是在最低层面满足题目，拼写和构词法上可能出现明显错误，造成阅读困难； 只能使用有限句子结构，试图使用复杂句但准确性低。\n5分 只在最低限度回应任务或文章离题，格式可能不得体，有立场但不清晰，有一些主要观点但难以辨认，可能有重复、不相关或论证不充分； 提供信息和观点，但安排不连贯也没有清晰的连续性，使用一些基本的衔接手段，但不准确或重复，可能没有分段或段落的使用令人费解； 只使用基本词汇，可能重复或使用不得体，构词法和拼写掌握有限，错误导致读者理解困难； 只使用有限的句子结构，从句很少见，有的结构准确但错误较多。\n4分 没有能够充分回应题目的任何部分，没有提出清晰的立场，观点有限，可能大部分都是未经论证或不相关； 没有逻辑性地组织观点，衔接手段的使用非常有限，不能标明观点之间的逻辑关系； 只使用非常有限的单词和表达，对于构词法和拼写的掌握很有限，错误严重干扰信息的传递； 试图写出句子但语法和标点错误非常多，扭曲表意。\n3分 几乎没有对任务做出回应，没有提出立场，可能试图表达一两个观点但缺乏展开； 对组织结构的掌握极少； 词汇使用及其有限，基本没有掌握构词法和拼写； 除了背诵的短语以外无法使用句子。\n1-2分 未写作，或完全抄袭背诵好的范文。\n0分 规定字数 大于等于 250 words\n写作建议\n  Task Achievement：提前规划好每个段落论点；保持结构清楚，逻辑清晰。\n  Cohesion and Coherence：连接词注意逻辑关系；代词指向明确；信息流，已知信息在前，未知信息在后，保证逻辑顺畅连贯。\n  Lexical resources：讲求搭配地道；注意用词选择多样化，通过近义词/代词指代/同义词/上义词等方式去替换关键词，避免简单重复；善用小词，少用名词化的动词。\n  Grammatical Range and Accuracy：杜绝语法错误，简单句、并列句和复合句每一段尽量都要出现。\n  "},{"id":92,"href":"/posts/essay/ceph-scrub%E7%9A%84%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90%E5%92%8C%E5%BB%BA%E8%AE%AE/","title":"Ceph Scrub的详细分析和建议","section":"随笔","content":"前言\r#\r\r关于scrub这块一直想写一篇文章的，这个在很久前，就做过一次测试，当时是看这个scrub到底有多大的影响，当时看到的是磁盘读占很高，启动deep-scrub后会有大量的读,前端可能会出现 slow request,这个是当时测试看到的现象，一个比较简单的处理办法就是直接给scrub关掉了，当然关掉了就无法检测底层到底有没有对象不一致的问题 关于这个scrub生产上是否开启，仁者见仁，智者见智，就是选择的问题了，这里不做讨论，个人觉得开和关都有各自的道理，本篇是讲述的如果想开启的情况下如何把scrub给控制住\n最近在ceph群里看到一段大致这样的讨论：\n scrub是个坑 小文件多的场景一定要把scrub关掉 单pg的文件量达到一定规模，scrub一开就会有slow request 这个问题解决不了\n 上面的说法有没有问题呢？在一般情况下来看，确实如此，但是我们是否能尝试去解决下这个问题，或者缓解下呢？那么我们就来尝试下\nscrub的一些追踪\r#\r\r下面的一些追踪并不涉及代码，仅仅从配置和日志的观测来看看scrub到底干了什么\n环境准备\r#\r\r我的环境为了便于观测，配置的是一个pg的存储池，然后往这个pg里面put了100个对象，然后对这个pg做deep-scrub，deep-scrub比scrub对磁盘的压力要大些，所以本篇主要是去观测的deep-scrub\n开启对pg目录的访问的监控\r#\r\r使用的是inotifywait，我想看下deep-scrub的时候，pg里面的对象到底接收了哪些请求\ninotifywait -m 1.0_head\n|\n|\n在给osd.0开启debug_osd=20后观测chunky相关的日志\n|\n|\n截取关键部分看下，如图 我们看下上面的文件访问监控里面这些对象在什么位置\n|\n|\n看上去是不是很有规律，这个地方在ceph里面会有个chunk的概念，在做scrub的时候，ceph会对这个chunk进行加锁，这个可以在很多地方看到这个，这个也就是为什么有slow request，并不一定是你的磁盘慢了，而是加了锁，就没法读的\n osd scrub chunk min\nDescription: The minimal number of object store chunks to scrub during single operation. Ceph blocks writes to single chunk during scrub. Type: 32-bit Integer Default: 5\n 从配置文件上面看说是会锁住写，没有提及读的锁定的问题，那么我们下面验证下这个问题，到底deep-scrub，是不是会引起读的slow request\n上面的环境100个对象，现在把100个对象的大小调整为100M一个，并且chunk设置为100个对象的，也就是我把我这个环境所有的对象认为是一个大的chunk，然后去用rados读取这个对象，来看下会发生什么\n|\n|\n使用ceph -w监控\n|\n|\n我从deep scrub 一开始就进行a40对象的get rados -p rbd get a40 a40，直接就卡着不返回，在pg内对象不变的情况下，对pg做scrub的顺序是不变的，我专门挑了我这个scrub顺序下最后一个scrub的对象来做get，还是出现了slow request ，这个可以证明上面的推断，也就是在做scrub的时候，对scub的chunk的对象的读取请求也会卡死，现在我把我的scrub的chunk弄成1看下会发生什么\n配置参数改成\n|\n|\n|\n|\n使用五个请求同时去get a9,循环的去做\n然后做deep scrub，这一次并没有出现slow request 的情况\n另外一个重要参数\r#\r\r再看看这个参数osd_scrub_sleep = 0\n osd scrub sleep\nDescription: Time to sleep before scrubbing next group of chunks. Increasing this value will slow down whole scrub operation while client operations will be less impacted. Type: Float Default: 0\n 可以看到还有scrub group这个概念，从数据上分析这个group 是3，也就是3个chunks 我们来设置下\n osd_scrub_sleep = 5\n 然后再次做deep-scrub,然后看下日志的内容\n|\n|\n可以看到1s做一个对象的deep-scrub，然后在做了3个对象后就停止了5s\n默认情况下的scrub和修改后的对比\r#\r\r我们来计算下在修改前后的情况对比，我们来模拟pg里面有10000个对象的情况小文件 测试的文件都是1K的，这个可以根据自己的文件模型进行测试\n假设是海量对象的场景，那么算下来单pg 1w左右对象左右也算比较多了，我们就模拟10000个对象的场景的deep-scrub\n|\n|\n使用上面的脚本统计每秒scrub的对象数目\n|\n|\n可以看到1s 会扫300个对象左右，差不多40s钟就扫完了一个pg，默认25个对象一个trunk\n这里可以打个比喻，在一条长为40m的马路上，一个汽车以1m/s速度前进，中间会有人来回穿，如果穿梭的人只有一两个可能没什么问题，但是一旦有40个人在这个区间进行穿梭的时候，可想而知碰撞的概率会有多大了\n或者同一个文件被连续请求40次，那么对应到这里就是40个人在同一个位置不停的穿马路，这样撞上的概率是不是非常的大了？\n上面说了这么多，那么我想如果整个看下来，应该知道怎么处理了 我们看下这样的全部为1的情况下，会出现什么情况\n|\n|\n这里减少chunk大小，相当于减少上面例子当中汽车的长度，原来25米的大卡车，变成1米的自行车了\n|\n|\n上面从日志里面截取部分的日志，这个是什么意思呢，是每秒钟扫描3个对象，然后休息3s再进行下一个，这个是不是已经把速度压到非常低了？还有上面做测试scrub sleep例子里面好像是1s 会scrub 1个对象，这里怎么就成了1s会scrub 3 个对象了，这个跟scrub的对象大小有关，对象越大，scrub的时间就相对长一点，这个测试里面的对象是1K的，基本算非常小了，也就是1s会扫描3个对象，然后根据你的设置的sleep值等待进入下一组的scrub\n在上面的环境下默认每秒钟会对300左右的对象进行scrub，以25个对象的锁定窗口移动，无法写入和读取，而参数修改后每秒有3个对象被scrub，以1个对象的锁定窗口移动，这个单位时间锁定的对象的数目已经降低到一个非常低的程度了，如果你有生产环境又想去开scrub，不妨尝试下降低chunk，增加sleep\n这个的影响就是扫描的速度而已，而如果你想加快扫描速度，就去调整sleep参数来控制这个扫描的速度了，这个就不在这里赘述了\n本篇讲述的是一个PG上开启deep-scrub以后的影响，默认的是到了最大的intelval以后就会开启自动开启scrub了，所以我建议的是不用系统自带的时间控制，而是自己去分析的scrub的时间戳和对象数目，然后计算好以后，可以是每天晚上，扫描指定个数的PG，然后等一轮全做完以后，中间就是自定义的一段时间的不扫描期，这个可以自己定义，是一个月或者两个月扫一轮都行，这个会在后面单独写一篇文章来讲述这个\n总结\r#\r\r关于scrub，你需要了解，scrub什么时候会发生，发生以后会对你的osd产生多少的负载，每秒钟会扫描多少对象，如何去降低这个影响，这些问题就是本篇的来源了，很多问题是能从参数上进行解决的，关键是你要知道它们到底在干嘛\n"},{"id":93,"href":"/posts/essay/excel-%E5%90%88%E5%B9%B6%E8%A1%A8%E6%A0%BC/","title":"Excel 合并表格","section":"随笔","content":" 前提： 要合并的表格表格列数相同 在要合并的表格放一个文件内，建一个新的空表格：   3.打开表格：\n4.鼠标放到左下角的sheet导航栏上右键选择查看源码：  把后面的代码贴入文本框中点顶部菜单栏的运行即可：   脚本\n  Sub 合并当前目录下所有工作簿的全部工作表() Dim MyPath, MyName, AWbName Dim Wb As Workbook, WbN As String Dim G As Long Dim Num As Long Dim BOX As String Application.ScreenUpdating = False MyPath = ActiveWorkbook.Path MyName = Dir(MyPath \u0026amp; \u0026quot;\\\u0026quot; \u0026amp; \u0026quot;*.xlsx\u0026quot;) AWbName = ActiveWorkbook.Name Num = 0 Do While MyName \u0026lt;\u0026gt; \u0026quot;\u0026quot; If MyName \u0026lt;\u0026gt; AWbName Then Set Wb = Workbooks.Open(MyPath \u0026amp; \u0026quot;\\\u0026quot; \u0026amp; MyName) Num = Num + 1 With Workbooks(1).ActiveSheet .Cells(.Range(\u0026quot;B1048576\u0026quot;).End(xlUp).Row + 2, 1) = Left(MyName, Len(MyName) - 4) For G = 1 To Sheets.Count Wb.Sheets(G).UsedRange.Copy .Cells(.Range(\u0026quot;B1048576\u0026quot;).End(xlUp).Row + 1, 1) Next WbN = WbN \u0026amp; Chr(13) \u0026amp; Wb.Name Wb.Close False End With End If MyName = Dir Loop Range(\u0026quot;B1\u0026quot;).Select Application.ScreenUpdating = True MsgBox \u0026quot;共合并了\u0026quot; \u0026amp; Num \u0026amp; \u0026quot;个工作薄下的全部工作表。如下：\u0026quot; \u0026amp; Chr(13) \u0026amp; WbN, vbInformation, \u0026quot;提示\u0026quot; End Sub "},{"id":94,"href":"/posts/essay/git%E6%8E%A8%E9%80%81%E8%A6%86%E7%9B%96%E6%97%A7%E4%BB%93%E5%BA%93/","title":"Git推送覆盖旧仓库","section":"随笔","content":"使用 git push origin master \u0026ndash;force\r#\r\rPS D:\\src\\angular6\\material\u0026gt; git remote add origin https://github.com/getfirstcn/hsd-devops.git PS D:\\src\\angular6\\material\u0026gt; git push origin master --force fatal: HttpRequestException encountered. 发送请求时出错。 Username for 'https://github.com': 785471184@qq.com Password for 'https://785471184@qq.com@github.com': Counting objects: 489, done. Delta compression using up to 8 threads. Compressing objects: 100% (470/470), done. Writing objects: 100% (489/489), 244.28 KiB | 0 bytes/s, done. Total 489 (delta 270), reused 0 (delta 0) remote: Resolving deltas: 100% (270/270), done. To https://github.com/getfirstcn/hsd-devops.git + bcddf61...e3e2a8a master -\u0026gt; master (forced update) "},{"id":95,"href":"/posts/essay/linux-shell%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BB%88%E7%AB%AF%E6%B5%8F%E8%A7%88%E5%99%A8w3m%E5%8F%82%E8%80%83%E5%8F%82%E6%95%B0/","title":"Linux Shell浏览器，终端浏览器w3m参考参数","section":"随笔","content":"W3m\r#\r\rw3m是一个基于文本的网页浏览器，支持多种操作系统，在命令行终端可以很好的支持中文。即使在没有鼠标支持的情况下也可以检查网页的输出。本文列出常用的快捷键。\n页面操作\r#\r\rSPC,C-v 向下翻页 b,ESC v 向上翻页 l,C-f 焦点向右 h,C-b 焦点向左 j,C-n 焦点向下 k,C-p 焦点向上 J 向下滚动一行 K 向上滚动一行 ^,C-a 到行首 $,C-e 到行尾 w 到下一个单词 W 到上一个单词\n 右移一屏 \u0026lt; 左移一屏 . 屏幕右移一列 , 屏幕左移一列 g,M-\u0026lt; 到首行 G,M-\u0026gt; 到末行 ESC g 到指定行 Z 当前行居中 z 当前列居中 TAB 转到下个超链接 C-u,ESC TAB 到上个超链接 [ 到第一个超链接 ] 到最後一个超链接  超链接操作\r#\r\r RET 打开超链接 a, ESC RET 链接另存为 u 查看链接url i 查看图片url I 查看图片 ESC I 图片另存为 标记rul字符串为锚点 ESC : 标记ID串为锚点 c 查看当前页面的URL = 显示当前页面属性 C-g 查看当前行号 C-h 查看历史记录 F 提交表单 M 用外部浏览器打开当前页面 (use 2M and 3M to invoke second and third browser) ESC M 用外部浏览器打开链接 (use 2ESC M and 3ESC M to invoke second and third browser   文件/流 操作\r#\r\rU 打开URL V 打开文件 @ 执行外部命令并导入\n执行外部命令并浏览\r#\r\r缓存操作\r#\r\rB 返回 v 查看源代码 s 选择缓存 E 编辑缓存代码 C-l 重画屏幕 R 刷新 S 页面另存为 ESC s 源码另存为 ESC e 编辑图片 缓存选择模式（也就是按了s以後）\r#\r\rk, C-p 上一缓存 j, C-n 下一缓存 D 删除当前缓存 RET 转至选择的缓存 书签操作\r#\r\rESC b 打开书签 ESC a 添加当前页到书签 搜索\r#\r\r/,C-s 向前搜索 ?,C-r 向後搜索 n 下一个 N 上一个 C-w 打开/关闭 循环搜索 标记\r#\r\rC-SPC 设定/取消 标记（好像这个键一般被输入法占用了） ESC p 转至上一标记 ESC n 转至下一标记 \u0026quot; 使用正则表达式标记 杂项\r#\r\r! 执行外部命令 H 帮助 o 设置选项 C-k 显示接受到的cookie C-c 终止 C-z 挂起（输入jobs命令可以列出被停止运行的进程及编号， 运行命令bg %进程编号可将进程转为后台运行， fg %进程号将进程转向前台进行） q 退出（需确认） Q 退出而不确认 行编辑模式\r#\r\rC-f 光标向後 C-b 光标向前 C-h 删除前一字符 C-d 删除当前字符 C-k 删除光标後所有内容 C-u 删除光标前所有内容 C-a 光标到行首 C-e 光标到行尾 C-p 取得历史记录中的前一个词 C-n 取得历史记录中的後一个词 TAB,SPC 自动完成文件名 RETURN 确定"},{"id":96,"href":"/posts/essay/top-%E5%91%BD%E4%BB%A4%E8%A7%A3%E9%87%8A/","title":"Top 命令解释","section":"随笔","content":"VIRT：virtual memory usage 虚拟内存 1、进程“需要的”虚拟内存大小，包括进程使用的库、代码、数据等 2、假如进程申请100m的内存，但实际只使用了10m，那么它会增长100m，而不是实际的使用量\nRES：resident memory usage 常驻内存 1、进程当前使用的内存大小，但不包括swap out 2、包含其他进程的共享 3、如果申请100m的内存，实际使用10m，它只增长10m，与VIRT相反 4、关于库占用内存的情况，它只统计加载的库文件所占内存大小\nSHR：shared memory 共享内存 1、除了自身进程的共享内存，也包括其他进程的共享内存 2、虽然进程只使用了几个共享库的函数，但它包含了整个共享库的大小 3、计算某个进程所占的物理内存大小公式：RES – SHR 4、swap out后，它将会降下来\nDATA 1、数据占用的内存。如果top没有显示，按f键可以显示出来。 2、真正的该程序要求的数据空间，是真正在运行中要使用的。\ntop 运行中可以通过 top 的内部命令对进程的显示方式进行控制。内部命令如下： s – 改变画面更新频率 l – 关闭或开启第一部分第一行 top 信息的表示 t – 关闭或开启第一部分第二行 Tasks 和第三行 Cpus 信息的表示 m – 关闭或开启第一部分第四行 Mem 和 第五行 Swap 信息的表示 N – 以 PID 的大小的顺序排列表示进程列表 P – 以 CPU 占用率大小的顺序排列进程列表 M – 以内存占用率大小的顺序排列进程列表 h – 显示帮助 n – 设置在进程列表所显示进程的数量 q – 退出 top s – 改变画面更新周期\n序号 列名 含义 a PID 进程id b PPID 父进程id c RUSER Real user name d UID 进程所有者的用户id e USER 进程所有者的用户名 f GROUP 进程所有者的组名 g TTY 启动进程的终端名。不是从终端启动的进程则显示为 ? h PR 优先级 i NI nice值。负值表示高优先级，正值表示低优先级 j P 最后使用的CPU，仅在多CPU环境下有意义 k %CPU 上次更新到现在的CPU时间占用百分比 l TIME 进程使用的CPU时间总计，单位秒 m TIME+ 进程使用的CPU时间总计，单位1/100秒 n %MEM 进程使用的物理内存百分比 o VIRT 进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES p SWAP 进程使用的虚拟内存中，被换出的大小，单位kb。 q RES 进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA r CODE 可执行代码占用的物理内存大小，单位kb s DATA 可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位kb t SHR 共享内存大小，单位kb u nFLT 页面错误次数 v nDRT 最后一次写入到现在，被修改过的页面数。 w S 进程状态。（D=不可中断的睡眠状态，R=运行，S=睡眠，T=跟踪/停止，Z=僵尸进程） x COMMAND 命令名/命令行 y WCHAN 若该进程在睡眠，则显示睡眠中的系统函数名 z Flags 任务标志，参考 sched.h\n默认情况下仅显示比较重要的 PID、USER、PR、NI、VIRT、RES、SHR、S、%CPU、%MEM、TIME+、COMMAND 列。可以通过下面的快捷键来更改显示内容。\n通过 f 键可以选择显示的内容。按 f 键之后会显示列的列表，按 a-z 即可显示或隐藏对应的列，最后按回车键确定。 按 o 键可以改变列的显示顺序。按小写的 a-z 可以将相应的列向右移动，而大写的 A-Z 可以将相应的列向左移动。最后按回车键确定。 按大写的 F 或 O 键，然后按 a-z 可以将进程按照相应的列进行排序。而大写的 R 键可以将当前的排序倒转。\ntop使用方法：\n使用格式：\ntop [-] [d] [p] [q] [c] [C] [S] [s] [n]\n参数说明：\nd：指定每两次屏幕信息刷新之间的时间间隔。当然用户可以使用s交互命令来改变之。\np:通过指定监控进程ID来仅仅监控某个进程的状态。\nq:该选项将使top没有任何延迟的进行刷新。如果调用程序有超级用户权限，那么top将以尽可能高的优先级运行。\nS：指定累计模式。\ns：使top命令在安全模式中运行。这将去除交互命令所带来的潜在危险。\ni：使top不显示任何闲置或者僵死进程。\nc:显示整个命令行而不只是显示命令名。\n常用命令说明：\nCtrl+L：擦除并且重写屏幕\nK：终止一个进程。系统将提示用户输入需要终止的进程PID，以及需要发送给该进程什么样的信号。一般的终止进程可以使用15信号；如果不能正常结束那就使用信号9强制结束该进程。默认值是信号15。在安全模式中此命令被屏蔽。\ni：忽略闲置和僵死进程。这是一个开关式命令。\nq：退出程序\nr:重新安排一个进程的优先级别。系统提示用户输入需要改变的进程PID以及需要设置的进程优先级值。输入一个正值将使优先级降低，反之则可以使该进程拥有更高的优先权。默认值是10。\nS：切换到累计模式。\ns：改变两次刷新之间的延迟时间。系统将提示用户输入新的时间，单位为s。如果有小数，就换算成m s。输入0值则系统将不断刷新，默认值是5 s。需要注意的是如果设置太小的时间，很可能会引起不断刷新，从而根本来不及看清显示的情况，而且系统负载也会大大增加。\nf或者F：从当前显示中添加或者删除项目。\no或者O：改变显示项目的顺序\nl：切换显示平均负载和启动时间信息。\nm:切换显示内存信息。\nt:切换显示进程和CPU状态信息。\nc:切换显示命令名称和完整命令行。\nM:根据驻留内存大小进行排序。\nP:根据CPU使用百分比大小进行排序。\nT:根据时间/累计时间进行排序。\nW:将当前设置写入~/.toprc文件中。\n"},{"id":97,"href":"/posts/essay/window-linux-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%88%9B%E5%BB%BAzip%E5%8E%8B%E7%BC%A9%E5%8C%85/","title":"Window Linux 命令行创建zip压缩包","section":"随笔","content":"linux\r#\r\rzip -r test.zip ./\n[root@ip-172-31-28-124 ec2-user]# cd /opt/ [root@ip-172-31-28-124 opt]# ls [root@ip-172-31-28-124 opt]# mkdir test [root@ip-172-31-28-124 opt]# ls test [root@ip-172-31-28-124 opt]# echo 123 \u0026gt;\u0026gt; test/test.txt [root@ip-172-31-28-124 opt]# ls test [root@ip-172-31-28-124 opt]# zip -r test.zip . adding: test/ (stored 0%) adding: test/test.txt (stored 0%) [root@ip-172-31-28-124 opt]# ls test test.zip [root@ip-172-31-28-124 opt]# rm -rf test [root@ip-172-31-28-124 opt]# unzip test.zip  Archive: test.zip creating: test/ extracting: test/test.txt [root@ip-172-31-28-124 opt]# ls test test.zip [root@ip-172-31-28-124 opt]# windows\r#\r\rCompress-Archive -Path * -DestinationPath doc.zip\nPS D:\\web\\doc\u0026gt; Compress-Archive -Path * -DestinationPath doc.zip PS D:\\web\\doc\u0026gt; ls 目录: D:\\web\\doc Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 11/1/2017 10:51 PM doc d----- 10/19/2017 2:18 PM hugo-theme-docdock d----- 10/19/2017 2:18 PM hugo-theme-learn d----- 11/1/2017 10:42 AM kubernetes d----- 10/23/2017 1:46 PM zhikong -a---- 6/26/2018 5:14 PM 75689120 doc.zip PS D:\\web\\doc\u0026gt; "},{"id":98,"href":"/posts/essay/windows%E5%88%86%E5%B1%8F%E6%9C%BA%E5%B7%A7%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/","title":"Windows分屏机巧，快捷方式","section":"随笔","content":"不说废话 windows + 上下左右即可任意分屏，最多四屏幕，还可以左右移动窗口的位置\n还有些程序不支持四分之一显示，二分一应该都可以\n如果开始分屏的窗口位置不对，windows + 左右移动一下就会变得规整\n"},{"id":99,"href":"/posts/essay/%E4%BC%A0%E7%BB%9F%E6%9C%8D%E8%A3%85/","title":"传统服装","section":"随笔","content":"襌衣：又称“单衣”，流行于秦汉时期，是一种作为上层人士平日所穿的单层罩衣 缝掖：即儒服，大袖单衣，古儒者所服。亦指儒者，儒服为章甫之冠，缝掖之衣 青衿：青色交领的深衣。周朝学子和北齐、北周、隋唐、两宋国子生的常服 道服：即是道袍指道教徒穿在外面的长袍。可以分为大褂、得罗、戒衣、法衣、花衣、衲衣等六种服装，均取肥大宽松，以寓包藏乾坤、隔断尘凡之意 短褐：又称“竖褐”、“裋褐”，以劳作方便为目的的便服。与常服和礼服相区别 剑服：剑士的服装 中衣：祭服、朝服的裹衣 深衣：深藏不露，雍容典雅，华夏之礼服\n便服 常服 礼服\n"},{"id":100,"href":"/posts/essay/%E5%8D%A1%E8%B7%AF%E9%87%8C/","title":"卡路里","section":"随笔","content":"1卡路里(cal)=4.1858518焦耳(J) 卡路里（简称卡，缩写为cal），由英文[Calorie])音译而来，其定义为在1个大气压下，将1克水提升1摄氏度所需要的热量；卡路里（calorie）是能量单位，现在仍被广泛使用在营养计量和健身手册上，国际标准的能量单位是焦耳（joule）。作为食物热量的法定单位，在欧洲普遍使用焦耳，美国则采用卡路里。虽然焦耳是中国大陆与台湾地区的法定单位，然而由于沿袭传统，卡路里在中国大陆与台湾地区仍然被广泛的使用\n卡路里，是一个能量单位。我们往往将卡路里与食品联系在一起，但实际上它们适用于含有能量的任何物质。\n简单地说，1卡路里的能量或热量可将1克水在一个大气压下的温度升高1摄氏度。1卡路里约等于4.186焦耳(焦耳是物理学中常用的能量单位)。 我们大多数人把卡路里与我们吃的或喝的东西联系在一起，就比如“这瓶汽水含有200卡路里”。实际上，食品包装上列出的卡路里是大卡，也被记做大写字母C，相当于将1000克水在1大气压下由14.5摄氏度提升到15.5摄氏度所需的热量，约等于4186焦耳的内能。 (1000卡路里=1大卡)。所以，实际上这听汽水含有20万卡路里(但不要担心，这一点也适用于锻炼——当练习图上说你慢跑2公里燃烧100卡路里时，它的意思是10万卡路里)。在英文中，“calorie”（首字母小写）表示卡路里，约等于4.186焦耳，“Calorie”（首字母大写）表示大卡，约等于4186焦耳。\n由于后来科学家发现水在不同温度下的比热容不同，所以衍生了以下不同的定义：\n营养学用的“15度卡路里”：将1克水在1大气压下由14.5℃提升到15.5℃所需的热量，约等于4.1855焦耳。\n“4度卡路里”：将1克水在1大气压下由3.5℃提升到4.5℃所需的热量。\n“平均卡路里”：将1克水在1大气压下由0℃提升到100℃所需的每度热量平均数，约等于4.190焦耳。\nInternational Steam Table（国际蒸汽表）的卡路里，相约4.1868焦耳。\n热力学和化学使用的“热化学卡路里”，相约4.184焦耳。\n一般所说的卡路里还分为两种：\n大卡，也被记做大写字母C，最常见于食品标注，相当于将1000克水在1大气压下由14.5℃提升到15.5℃所需的热量，约等于4186焦耳的内能。\n小卡，也被记做cal，较多见于科研文档中，1000小卡=1大卡（1 Calorie）\n功能\r#\r\r编辑\n热量作用\r#\r\r正如电脑要耗电，卡车要耗油，人体的日常活动也要消耗热量。热量除了给人在从事运动，日常工作和生活所需要的能量外，同样也提供人体生命活动所需要的能量，血液循环，呼吸，消化吸收等等。减肥人士可以通过运动可以来消耗脂肪，可以达到加速消耗卡路里以达到健康瘦身的效果。\n热量来源\r#\r\r热量来自于 碳水化合物，脂肪，蛋白质\n碳水化合物产生热能 = 4千卡/克\n蛋白质产生热量 = 4 千卡/克\n脂肪产生热量 = 9 千卡/克。\n热量的单位\r#\r\r千卡 Kilocalorie， 1千卡 =1大卡\n1 千卡 = 4.184 千焦耳\n1 千卡： 是能使出1升水上升摄氏1度的热量。\n需要热量\r#\r\r成人每日需要的热量 =人体基础代谢的需要的基本热量 + 体力活动所需要的热量 + 消化食物所需要的热量。\n消化食物所需要的热量 =10% x （人体基础代谢的需要的最低热量 +体力活动所需要的热量）\n成人每日需要的热量 = 1.1 x (人体基础代谢的需要的最低基本热量 +体力活动所需要的热量 )\n男性 ： 9250- 10090千 焦耳\n女性： 7980 - 8820千 焦耳\n注意：每日由食物提供的热量应不少于己于 5000千焦耳- 7500 千焦耳 这是维持人体正常生命活动的最少的能量\n人体基础代谢的需要基本热量 简单算法\n女子 ： 基本热量（大卡）= 体重(斤） x 9\n男子 ： 基本热量（大卡）= 体重(斤） x 10\n基本热量 精确算法\n女子\n年龄 公式\n18- 30 岁 14.6 x 体重（公斤） + 450\n31- 60 岁 8.6 x 体重（公斤） + 830\n60岁以上 10.4 x 体重（公斤） + 600\n男子\n18- 30 岁 15.2 x 体重（公斤）+ 680\n31- 60 岁 11.5 x 体重（公斤） + 830\n60岁以上 13.4 x 体重（公斤） + 490\n代谢作用\r#\r\r一般来说，成人每天至少需要1500千卡的能量来维持身体机能，这是因为即使你躺着不动，你的身体仍需能量来保持体温，心肺功能和大脑运作。基础代谢消耗会因个体间身高、体重、年龄、性别的差异而有所不同。人类生存需要能量，并从食物中获取该能量。食物中的卡路里含量是该食品产生多少潜在能量的量度标准。1克碳水化合物含4千卡路里，1克蛋白质含4千卡路里，1克脂肪含9千卡路里。食物一般由这三种物质组成。因此只要知道食物中这三种物质的含量，就可以知道食物含多少卡路里或多少能量。\n我们的机体通过代谢作用“燃烧”食物中的卡路里，代谢作用通过酶将碳水化合物分解为葡萄糖和其他糖类，将脂肪分解为甘油和脂肪酸，将蛋白质分解为氨基酸。然后，这些分子通过血流被转运到细胞中，它们在这里可被立即吸收利用，也可进入最终代谢阶段，与氧进行反应，释放其存储的能量。\n计算方法\r#\r\r1.人们应该清楚自己每天应该摄入多少热量，自己的身体需要多少热量。它取决于很多的因素，比如你想多快完成你的减肥计划或者你在体力活动中消耗了多少的热量等。在一般情况下，女性每天消耗的卡路里不应小于1200。\n2.有自己的饮食计划，并且完美的执行下去。当然你可以随时调整它，但是如果没有必要，最好是保持基本的计划。计划中至少有三个正餐和两个小吃。感觉食物被剥夺会使减肥变得更加困难。确保你在每个食物组中能得到足够的能量，尤其是脂肪和蛋白质，这将有助于让你感觉饭饱。\n3.正确的跟踪每天的卡路里。跟踪的方法很多，比如使用表格记录下来。记住要保持跟踪任何额外摄入的点心和饮料等，包括汽水和果汁。写下每一餐食物和零食摄入的数量。测量或衡量你的食物可以得到一个确切的热量数。你也可以考虑使用一个卡路里计数器。在每一天结束后，计算总热量的摄入量。尝试消耗的热量均匀的分布在一整天里。\n来源情况\r#\r\r当摄入的卡路里多于或少于机体所燃烧的量会怎样?机体会分别增加或减少脂肪。如果多积聚3500卡路里，机体就会储存0.45公斤脂肪，储存脂肪是机体储存能量、未雨绸缪的方式。相反，如果消耗的能量比摄入的多3500卡路里(无论是由于增加运动还是减少饮食)，机体就会将储存的0.45公斤脂肪转化成能量以补偿不足部分。\n运动时，代谢率的增加不仅仅发生在运动的时候比如气喘吁吁在跑步机上。代谢率恢复到正常水平需要一段时间。它在停止运动后大约两个小时内仍将继续保持较高水平，这时机体仍会消耗较多的卡路里。\n很多人想知道卡路里的来源是否要紧。说到底，如果我们摄入和消耗的卡路里恰好相等，并且只考虑体重的话，答案是否定的，1卡路里就是1卡路里。一个蛋白质卡路里和一个脂肪卡路里没有区别，它们都只是能量的单位。如果消耗量等于所摄入的能量，体重就保持不变;如果消耗量大于摄入的量，体重就会减轻。\n但是如果谈到营养，卡路里的来源就很重要。碳水化合物和蛋白质是比脂肪更健康的卡路里来源。虽然机体保持正常功能需要一定量的脂肪(充足的脂肪可以帮助机体吸收消化的维生素)，但是过量的脂肪则会引起严重的健康问题。[1]美国食品与药品管理局建议每天摄入的卡路里中脂肪的比例不能超过30%。因此，如果我们每天摄入2000卡路里，那么来自脂肪的部分最多只能为600卡路里，即每天67克脂肪。但是，很多医生和营养学家将脂肪卡路里的上限设为每日卡路里摄入量的25%。对于2000卡路里的食谱来说，这就表示每天可以摄入56克脂肪。\n相关知识\r#\r\r身体必须的燃料\n卡路里是法语calorie的音译，是计算热量的单位，有大卡与小卡之分。1大卡相当于在1个标准大气压下，把1公升水提高1摄氏度所用的热量；1大卡等于1000小卡。\n我们身体所需的热量都来自于食物，吃东西时，人体新陈代谢的化学作用把食物分解，转化成能量。日常种种活动，从呼吸到跑马拉松，都靠燃烧热量来推动。\n燃烧热量是新陈代谢的过程之一。假如身体所需的氧气、水、食物供应充足，细胞就会积极工作，以最佳速度燃烧热量。因此，健康的饮食、良好的消化、适量的矿物质和维生素，以及定时适量的运动，缺一不可。\n假如营养不足，新陈代谢的效率就会下降，使细胞工作缓慢，燃烧热量的速度就会大幅降低，“使用”不完的卡路里就会囤积形成脂肪，让体重增加。\n食物中有三种热量\n食物中的热量分为3种：蛋白质的热量是增强肌肉的基础营养素，主要源于肉类、乳制品和蛋，每克含有4卡的热量；碳水化合物的热量是人体在正常情况下的主要能量来源，含于米饭、面粉、面条、面包、麦片、蔬菜和水果中，每克的热量也是4卡；脂肪每克含有9卡的热量，含于油、奶油中。\n另外还有一种热量称为“空热量”，指那些只提供能量而营养价值很低的食物，如清凉饮料、酒类以及速食品等。\n每顿饭理想的热量比例大概是：碳水化合物65%、脂肪20%、蛋白质15%。\n厄文·伍勒是美国生化专家兼营养专家，著有20多本专业书籍。他说，最佳的热量比例因人而异，大原则是碳水化合物不宜过量或过少，脂肪和蛋白质也不能完全拒之门外。\n吃多少东西才合适\n食物要吃多少才不算过量？美国营养专家拉迪西亚·弗洛雷斯建议大家“适可而止”，“没有哪一类食物比较重要，也无须规范食物的分量，仅需大致区分为‘大量’、‘适量’和‘少量’即可。”这个方法不提供定量的建议，因为个人所需的营养会随着年龄、性别与运动量而有分别。如果规定了分量则容易让某些人吃得太多，而另一些人却吃不饱。\n以下是“适可而止”原则的重点：\n尽量吃不同类别的食物；吃大量蔬菜和水果；吃适量谷物(米饭、全麦面包、面条、饼干和燕麦等)；吃少量肉类，最好是去皮的鱼或鸡，猪、牛、羊等肉类最好少吃。\n美国营养学家伍勒说，判断一个人应摄取多少热量，最简单的公式就是把体重的公斤数乘以30。人类每公斤体重大约需要30卡热量，例如体重为60公斤，每天就需要1800卡的热量。不过，营养专家还可以举出许多实例，说明这算法并不完全准确。因为基因、饮食、营养等因素都会有影响。\n升糖指数很关键\n从生理和营养的角度来看，不同食物在身体里转化成热量的速度也各不相同。例如，人体从碳水化合物中摄取热量，会比从脂肪中来得快；而摄取的快慢，会影响身体的机能反应。热量摄取的快，会干扰血液中葡萄糖并提高胰岛素水平，刺激脂肪生产的可能性就越高，体重就越容易增加。\n食物导致血液中葡萄糖水平升高的速度，以“升糖指数(glycemicindex)”来表示。美国健康专家马克·西曼说：“碳水化合物的升糖指数有高有低，有的几乎是即时转化成热量，对身体的影响较大，也使体重增加得比较快。另外，如果碳水化合物搭配脂肪、蛋白质或纤维质食用，可减缓身体吸收的速度。就算卡路里增加了，也不会增胖。”西曼说，“纤维就像海绵，可在胃部吸收脂肪和糖，减缓人体摄取这些热量的速度。”\n因此就算卡路里不能简单地加加减减，食物转化成脂肪的速度以及其他因素都会有关联。我们还要注意到有一种“最危险的卡路里”，这就是糖和糖的代用品，如红糖(黄砂糖)、葡萄糖、果糖、玉米糖浆、高果糖糖浆、蜂蜜和所有精制的碳水化合物。这些食物的升糖指数最高，进入血液循环最快，会让胰岛素水平提升，制造多余的脂肪。\n热量含量表\r#\r\r编辑\n猪肉(血脖)90克 576卡猪肉(肋条肉)96克568卡 猪肉(软五花)85克349卡 猪肉(硬五花)79克339卡\n猪肉(前蹄膀)67克338卡牛肉：100克 106卡10.2g 牛肚100克72卡 牛肉松100克445卡\n牛肉干100克550卡 鸡珍：100克118卡 19.2g 扒鸡66克215卡 烤鸡73克240卡\n鸡肝 100克121卡 16.7g 鸡心100克172卡 沙鸡41克147卡 鸡腿69克181卡\n鸡血100克49卡 鸡翅膀：69克 194卡17.4 g 鸡翅膀一只（200g）422大卡 鸡心：172卡15.9 g\n鳕鱼100克 88卡石斑鱼 57克320卡 蛋白质19.5g 对虾61克 93卡18.6g蛋白质\n每100克水果所含的热量\n番茄 18卡西瓜 20卡/57 7.9mg 柠檬31卡 香瓜35卡 草莓35卡 杏子40卡 7.8mg\n哈密瓜四分之一个48大卡 梨38卡 32/ 无花果二个43卡 橘子 42卡橄榄80克 49卡桃 37卡48/58 12.8mg糖\n红富士苹果85克45卡 苹果44卡 1个(中) 约55 葡萄54卡 提子10粒(大) 约120 猕猴桃54卡 荔枝57卡 8粒(中)约 85\n香蕉 84卡橙1个 (中) 50 芒果1个(中) 100 新鲜菠萝1片(120克) 50\n86克56卡 VC62毫克M 12 钙27毫克\n减肥大敌=零食的热量\n红糖 100克389卡 冰糖100克 397卡爆米花 100g 459卡　虾味仙（大，1包）432卡 虾味仙一包 102公克460卡\n烤玉米条（1包）524卡 巧克力1块100克约550卡左右 巧克力甜甜圈 281卡爆米花 100克459 薯片100克 555\n洋芋片（1盒/一片）1072卡/11卡 洋芋片　130公克700卡 鲜枣每100克可食部的能量是122大卡\n干枣每100克可食部的能量是264大卡 大干枣每100克可食部的能量是298大卡金丝小枣每100克可食部的能量是322大卡\n酒枣每100克可食部的能量是145大卡无核蜜枣每100克可食部的能量是320大卡\n乌枣59克228卡 黑枣98克228卡 椰丝半杯(25克) 150 瓜子100克 564大卡（脂肪含量近50%） 松子仁100克698卡\n松子(炒)31克619卡 葵花子(炒)52克616卡 葵花子仁100克606卡 榛子(炒) 榛子仁100g 542kk 开心果19个约 150卡\n花生仁(炒)100克 581卡花生（18粒） 122卡核桃仁 100克627卡（脂肪含量约58%） 蚕豆（10-13颗）62卡 腰果15粒(30克) 100g 510卡杏仁30粒 (30克) 170 南瓜子100克566卡 西瓜子(炒)100克555卡 杏仁100克514卡 大杏仁约18个150卡 白果100克355卡\n栗子(干)73克345卡 莲子(干)100克344卡 栗子100克 185卡五香豆干 100克380大卡 牛肉干100克 475大卡\n葡萄干 307-350卡苹果脯100克 336卡桃脯100克 310卡西瓜脯100克 305卡杏脯100克 329卡\n海棠脯100克 286卡果丹皮100克 321卡桂圆干37克 273卡桂圆肉100克 313 柿饼97克250卡\n凤梨干50克 120大卡陈皮梅 50公克40卡 话梅每粒25kk 酸乌梅50克 120大卡鱿鱼丝100克 380大卡\n鱈鱼香丝 91.5卡 芒果乾　50公克80卡 小羊羹40公克 65卡红莓馅饼 150公克470卡 沙琪玛 20公克 98卡\n布丁 约150大卡加料仙贝 约430大卡鲜奶油水果蛋 300大卡鲜奶油泡芙约 200大卡消化饼一个 约110大卡、\n饼干 约470-500大卡 vc饼干：100克 572 卡脂肪 39.7g 钙奶饼干：100克 444卡脂肪13.2g 曲奇饼：100克 546卡脂肪31.6g\n钙奶饼干100克446卡 苏打饼干100克408卡 7.7 布丁（小，1个）150卡\n菠萝豆：100克 392 卡脂肪 2.1g 铜锣烧（一个50g）约140大卡\n食物的卡路里表转载\n麻薯（一个50g） 约120大卡绵花糖 35公克 140卡牛奶太妃糖 100克366卡 芝麻花生糖 约3块160卡\n巧克力约2个30克 150卡水果软糖约4块 150卡花生糖约2块 150卡果汁糖约6块 150卡\n果汁冰捧 1支80大卡 冰泡沫红茶(冷饮) 60 卡　冰点(冷饮) 60 卡　冰珍珠奶茶(冷饮) 160\n水果果冻(冷饮) 260 微量2个260克 统一布丁(冷饮) 380 11.0 2个\n统一鲜奶酪(冷饮) 185 13.0 120克咖啡冻(冷饮含奶精) 120 微量130克 统一多多(冷饮) 180 2.0 180克\n香豆奶(冷饮) 150 250cc\n草苺优酪乳(冷饮) 180 230克原味优酪乳(冷饮) 180 230克乳果(冷饮) 65 100克\n藘笋汁(冷饮) 90 250克莎莎亚(冷饮) 200 320克酸梅汤(冷饮) 190 375cc\n冬瓜茶(冷饮) 100 250cc 雪露(冷饮) 350 350克芬达葡萄汽水(冷饮) 190 355cc\n雪碧汽水(冷饮) 135 355cc\n90 150cc 高纤椰果(冷饮) 80 170克\n冰镇红茶(冷饮) 120 375cc 伯朗咖啡(冷饮) 100 250克\n水果凉酒5%(淡酒) 200 355cc 薄荷茶(冷饮) 60 一杯石榴红茶(冷饮) 60 一杯\n珍珠奶茶(冷饮) 160 一杯桔子茶(冰) (冷饮) 90 一杯椰子汁(冷饮) 180 410克\n冰淇淋饼乾(冰点) 180 75克玉米冰淇淋冰棒 155 一个果汁冰棒(冰点) 240 三支\n钻石冰(冰点) 220 一个芋头麻淇冰(冰点) 170 80克/个冰淇淋(冰点) 200 100克\n甜筒(冰点) 290 一个圣代冰淇淋(冰点) 250 一个芋头牛奶冰棒(冰点) 200 一个\n巧克力雪糕(冰点) 280 一个百吉布丁雪糕(冰点) 200 一个香草冰淇淋(冰点) 180 75克\n芋头蕃薯冰(冰点) 140 85克情人果脆冰棒(冰点) 120 90克西瓜棒(冰点) 140 一支\n牛奶花生(冷饮) 600 340克红豆粉粿(冷饮) 300 260克珍珠圆(冷饮) 240 260克\n花生仁汤(热品) 560-580 320克八宝粥(热品) 440 380克地瓜芋丸甜汤(热品) 220 一杯\n烧仙草 (热品) 230 一杯绿豆汤(热品) 220 350克热可可(热品) 180 375ml\n芝麻奶茶(热品) 345 一壶绿豆粉圆(热品) 220 一碗红豆汤圆(热品) 255 一碗\n开胃酒(酒类) 65 一杯红粉佳人(酒类) 105\n蔘茸酒（酒类）575 300ml\n黑啤酒(酒类) 160 360cc 白葡萄酒(酒类) 450 0.6L\n重量级脆皮巧克力+雪糕 250-350 中量级 脆皮巧克力170-200 全脂牛奶雪糕、优酪乳雪糕180-200\n牛奶+豆类冰棒160-190 牛奶+淀粉类冰棒160-190 轻量级果汁+水果粒 90-140\n炼乳冰棒90-120\n调味篇\n酱油（1匙）10卡 沙拉油（1匙）100卡 果酱1汤匙 18g 50卡千岛沙拉酱（1匙）60卡 花生酱1汤匙 16g 95卡 芝麻酱100克 586-620卡辣油豆瓣酱 100克180卡 黄酱100克140卡 甜面酱100克136 卡辣酱(麻)100克 135卡\n奶油（1匙）97卡 豆瓣酱（1匙）10卡 白醋（1匙）93卡 番茄酱（1匙）14卡 100克433-500之间\n减肥概念\r#\r\r编辑\n控制能量摄入并适当锻炼是一种相当有效的减肥方法，也被大多数医师看作是最健康的减肥途径。其机理相当简单，当每日摄入的能量不足于提供身体的能量消耗，人体就会调用其内存储的糖类和脂肪，当脂肪被分解并为身体提供能量时，减肥过程就开始了。但是仍要注意，过度的节食会对肠胃及消化系统造成危害。一些医师指出，对能量摄入的控制应该循序渐进，以保证人体能够慢慢适应，同时每天摄入的能量一般以不少于800大卡为宜，否则人体会通过降低身体机能来弥补能量摄入不足的情况，通常会造成头晕、乏力的状况，而且基础代谢消耗的减小也同时影响到减肥的效率。\n一个正常人一天摄取总热量应为2000大卡，运动的人可以适当增加。下表为各种成分的每日摄取量及所占的热量比例：（其中每克脂肪含热量9大卡；每克碳水化合物含热量4大卡；每克蛋白质含热量4大卡）\n脂肪低于65克585大卡低于30%\n碳水化合物300克1200大卡 60%\n蛋白质47克188大卡9.4%\n其他27大卡2.6%\n控制脂肪摄入量\n脂肪是人体不可缺少的一部分。脂肪分为饱和脂肪与不饱和脂肪，饱和脂肪的问题在于它会刺激身体增加胆固醇的制造量；而不饱和脂肪恰恰可以降低血液中的胆固醇。较肥的牛肉、猪肉、全脂乳制品含有较多的饱和脂肪；玉米油、葵花油、花生油、橄榄油及菜油中含的则是不饱和脂肪。专家建议的每日脂肪摄取量是65克，相当于烟盒大小的一块肉。\n减肥天然植物\n萃取于植物中的、绿茶多酚、瓜拿那、海藻、甲壳素等的天然的，对人体脂肪代谢有着重要作用和健康效果，可以有效消耗卡路里。\n补充适量的维生素\n蔬菜、水果中含有大量的维生素和矿物质，是补充身体能量必不可少的东西。如你每日食用6-11份的碳水化合物（每一份相当于一片面包），那么你至少要食用3-5份蔬菜（每一份当于一盆生菜）和2-4份水果（每一份相当于一只中等大小的苹果）。\n负能食物\r#\r\r编辑\n负卡路里食物就是那些消化它们所需的卡路里，比它们自身实际所带的卡路里还要多\n这些食物所带的卡路里，对于身体来说，比一般食品更难粉碎处理。换句话说，身体需要更多的热量来提取这些食物中的卡路里。这就给了这些食物一个自然消耗脂肪的优势。\n举例来说：一块馅饼含有350卡路里，可能只需要100卡路里来消化，这样，你的身体就会增加净250卡路里的脂肪。\n但是，如果你吃一种只有50卡路里的食物，却需要150卡路里来消化。那么，你单单只是吃那种食物就耗掉100卡路里。\n有很多食物都是低卡路里，并且味美口感好，有着极好的负卡路里性质的。不必为了减肥，而挨饿。取而代之的是，应该吃很多负卡路里的食物来消耗过多的脂肪使自己自然苗条。\n蔬菜：芦笋、西兰花、白菜 、萝卜、芹菜、 黄瓜、洋葱、西红柿\n水果：苹果 、葡萄、柠檬、芒果 橙子、菠萝 草莓、椰子、香蕉、樱桃、红莓、西柚、番石榴、奇异果、荔枝、木瓜、等。\n果仁类：巴西果、栗子、杏仁、夏威夷果、花生、松果、核桃等。\n食物能量\r#\r\r编辑\n主食篇\r#\r\r咖喱饭：640卡（大卡）什锦炒饭 ：阳春面：392卡 牛肉面：540卡鸡肉饭 713卡\n什锦炒面：860卡榨菜肉丝面：400卡 炸酱面一碗：385卡 焗海鲜：357卡火腿饭：690卡 烤白菜：149卡\n炸肉片：302卡 牛肉蔬菜汤362卡 意大利面：470克约500- 700卡什锦蛋包 227卡热狗堡 263卡海鲜汤 192卡\n排骨饭面1碗 480卡混沌面 1碗560卡 肉丝面1碗440卡 方便面 100g 470卡白饭 140g 210 白馒头：280卡\n煎饼100克 333卡馒头100克 233卡花卷100克217卡 小笼包（5个）200卡肉包子 250卡豆沙包 一个215卡\n水饺（10个） 420卡菜包 1个200卡 咖哩饺一个 245卡猪肉水饺 一个40卡 蛋饼一份 255卡鲜肉包 一个225-280卡\n叉烧包 一个160卡 小水煎包2个约220大卡 韭菜盒子1个 260卡春卷100克 463卡烧饼100克 326卡油条 1条230卡\n点心篇\r#\r\r花生豆花 一碗180卡 三鲜豆皮100克240卡 烧麦100克238卡 汤包100克238卡 烙饼100克225卡 白水羊头100克193卡\n艾窝窝100克190卡 爱窝窝100克190卡 白吐司（1片）130卡 米粉汤1碗 185卡粉丝 100克335卡 粉皮100克64卡\n凉粉100克37卡 粉条100克336卡 肉羹米粉一碗 350卡米粉汤 一碗185卡 炒米粉一碗 275卡广东粥 400卡\n皮蛋瘦肉粥1碗 367卡鱼肉饭团1个205卡 凉粉（带调料）1 [[图片上传失败\u0026hellip;(image-94c421-1539496029225)]\n食物的卡路里含量——奶类(5张)](https://baike.baidu.com/pic/%E5%8D%A1%E8%B7%AF%E9%87%8C/284236/20490569/0db52fad24f8194d4b36d6f9?fr=lemma\u0026ct=cover \u0026ldquo;食物的卡路里含量——奶类\u0026rdquo;) 00克50卡 腐竹皮100克489卡 腐竹100克489卡 豆腐皮100克409卡\n桂林腐乳100克204卡 豆腐丝100克201卡 薰干100克153卡 酱豆腐100克151卡 香干100克147卡 豆腐干100克140卡\n上海南乳100克138卡 菜干200克136卡 腐乳（白）100克133卡 臭豆腐100克130卡 北豆腐100克98卡 酸豆乳100克67卡\n南豆腐100克 57卡白薯干100克 612卡土豆粉100克 337卡地瓜粉100克 336卡大麦100克 307卡白薯（白心）100克64卡\n白薯（红心）90克99卡 豆腐脑（带卤）100克47卡 豆汁（生）100克10卡 绿豆凸一个 320卡红豆馅 100克274卡 炒肝100克96卡\n油茶100克94卡 茶汤100克92卡 小豆粥100克61卡 黑轮一串 90卡猪血糕 一串130卡 鱼板一串 60kcal\n玉米棒一串 100kcal 油豆腐一块 80kcal 贡丸串一串 100kcal 香菇丸一串 90kcal 蛋丸一串 90kcal 多拿滋一串 70kcal\n鸡香卷一串 70kcal 龙虾棒一串 95kcal 五味丸一串 80kcal 豆鼓：100克244卡\n肉蛋类\r#\r\r鸡蛋1个（58克，较大）86卡（蛋清16卡，蛋黄59卡）油煎的相比水煮和荷包蛋就增加很多卡\n鸭蛋（大，65克） 114卡（ 大，85克）。 180卡脂肪13克 胆固醇565毫克\n咸鸭蛋 88克190卡 钙118 脂肪12.7 蛋白质12.7\n鹌鹑蛋（10克）16卡 火鸡蛋（80克）135卡松花蛋（鸡）83克 178卡松花蛋(鸭)90克 171卡煎蛋1个136 卡\n瘦火腿2片 (60克) 70卡白切鸡1块(100克) 200卡烧鸭3两(120克) 1份356卡 煎˙猪肉(140克) 440\n火腿100克 320卡香肠 100克508卡 蜡肠2条˙煎310 羊肉前腿100克 111卡19.7g 蛋白质\n羊肉后腿102卡15.5g 蛋白质羊肚：100克 87卡12.2 g 羊舌100克225卡 羊肉串(炸)100克217卡\n羊肉(熟)100克215卡 羊肉胸：100克215卡 羊肝：134克17.9 g 羊血：100克57卡 6.8g 胆固醇92毫克脂肪 0.2g\n猪血100克 55卡猪口条： 100克233卡 猪蹄(熟) 43克260卡 猪耳朵100克 190卡22.5g蛋白质 猪肉(肥)100克816卡\n主食能量\r#\r\r1.大米\n大米是一种谷物，有很多人每天都吃大米。碳水化合物是米饭的主要组成部分，其氨基酸的组成是完全的，容易被人体消化吸收。人们吃更细腻更精致的大米，就会摄入更少的营养物质，摄入更多的热量。米饭热量高，你知道吗？ 1碗100克的米饭热量就含有116千卡路里。而糙米中的矿物质、纤维、B族维生素（特别是维生素B1）等的含量均高于大米，属于低热量食物，更适合减肥时进食。\n2、意粉、面条\n意粉、面条是国外最常见的主食。它们一般都是选择丰富的淀粉粉碎后制成的，经过凝胶、添加香精、挤压、烘干等工序，口感好，是风味独特的食品。100克意粉或面条平均含有35千卡路里的热量，是卡路里非常低的主食选择，能让你饱腹不发胖哦！\n3、土豆\n有些人将土豆制成土豆泥作为主食。一个土豆（约130克，可食部分117克）含有丰富的糖、纤维和多种维生素，比大米，面粉的营养价值要更高，而且还含有丰富的胡萝卜素。不仅能增加饱腹感，还是减少热量摄入的最佳减肥食物之一。\n4、玉米\n玉米是禾本科的玉米植物种子。在全国的部分地区，已经被种植作为主食。玉米是一种保健食品，玉米谷物对人体健康是非常有益的。1根新鲜的玉米（160克，74克可食部分），大概含有78千卡路里的热量。由于玉米含有较多脂肪，所以玉米在储存过程中容易酸败变质。玉米应在新鲜时食用。玉米的纤维素含量高，可以刺激肠蠕动，促进消化，不至于使脂肪积累。\n5、燕麦\n燕麦就是我国的莜麦，俗称油麦、玉麦，是一种低糖、高营养、高能量的食物。经过精细加工的谷物燕麦，食用起来更加方便，口感也得到改善，并慢慢成为一种流行的保健食品。燕麦可以减肥吗？100克地燕麦大概含有367千卡路里的热量。燕麦可以有效地降低人体的胆固醇。虽然它所含的热量并不算低，但由于它低糖，还具有通便的作用，能够改善血液循环，因此是很好的减肥食品。\n6、高粱\n高粱，脱壳后即为高梁米，子粒呈椭圆形、倒卵形或圆形。高粱蛋白质中赖氨酸含量较低，属于半完全蛋白质。高梁的尼克酸含量也不如玉米多，但却容易为人体所吸收。高粱米是容易消化吸收的，不论用于滋补还是应用于制药，功能是非常温和的。100克地高粱米含有351千卡路里的热量。高粱米由于营养价值高，被称为天然健康粮食中的“国王”。它的高蛋白和高纤维是减肥中的人们所需的，因此可多食用高粱米。\n消耗活动\r#\r\r（一）较轻体力活动━━平均每小时消耗约为95大卡，包括坐着时间较多的工作和活动，如阅读、写字、开会、吃饭、看电视或电影、听广播、缝纫、打字、办公室工作等等。\n（二） 轻体力劳动━━平均每小时消耗为120大卡，包括站立时间较多的工作如做饭、切菜、擦桌子、洗小件衣物、烫衣服、缓步慢行、讲课、实验室工作、快速打字、售货等。\n（三） 中等体力劳动━━平均每小时消耗约为170大卡，包括站着工作需要手臂动作较多的（如交通警值勤、乐队指挥）或坐着工作但手臂激烈动作的（如重型机械操作，驾驶拖拉机），擦地、扫地、铺床、刷漆、用洗衣机洗衣、园艺工作、中等速度步行等。\n常见运动\r#\r\r下表为1小时各项运动消耗热量\n散步150大卡 逛街110大卡 慢走255大卡 快走555大卡 慢跑655大卡 快跑700大卡 午睡48大卡 工作76大卡 打扫228大卡\n洗碗136大卡 读书88大卡 购物180大卡 开车82大卡 泡澡168大卡 单车245大卡 插花114大卡 郊游240大卡\n溜狗130大卡 看电视72大卡 看电影66大卡 洗衣服114大卡 烫衣服120大卡 爬楼梯480大卡 买东西188大卡\n推荐进行的减肥运动：\n散步 跳舞打扫家居 有氧操自行车（休闲）\n148 266　207 354 236\n羽毛球 篮球 排球 游泳\n266 177 472 472\n常见食物\r#\r\r高能量\n鲜奶250ml 155 Kcal　脱脂奶 250ml 88 Kcal 低脂鲜乳250ML 120K　原味优酪乳250克 215K 甜豆浆1杯 120 纯味乳酪1杯 160 Kcal\n乳酸菌饮料1杯 140 甜面包1个 (60克) 210 Kcal 咸面包1个 (60克) 170 Kcal 白面包1 片120 白土司:一片40克72K\n蜂蜜蛋糕：158大卡/ 个苏打饼乾：六片　热量135大卡 蛋一只75 Kcal 蛋黄一只 60 Kcal　蛋白一只15 Kcal　煎蛋一只 105 Kcal\n米粉1碗 (135g) 132 面1碗 (135g) 280 凉面：一盘　热量300大卡玉米一根 107 Kcal 小笼包（小的5个）200 Kcal\n水果一览\n水果减肥餐，是不少人会使用的方法，不过要找出最适合自己的水果最重要，而且有些水果在食用的时候，也要特别注意，免得过食造成热量过高。下面就针对常用的减肥水果的热量和特性来比较比较，你可以以自己的需求去选择想要的塑身水果。\n1．苹果100克/50卡路里\n苹果是最多人会选的瘦身水果，因为它有丰富的果胶，可以帮助肠胃蠕动和排除体内毒素，最棒的是还可以降低热量吸收，再加上苹果的钾质很多，可以防止腿部水肿。当然啰，苹果的卡路里也不高，所以才有专吃苹果的苹果减肥餐产生\n2．香蕉100克/125卡路里\n很多水果减肥餐都少不了香蕉，因为香蕉含有丰富纤维质、维他命A、钾质和果胶等，所以可以有效地整肠，这样就能帮助排便。\n香蕉也有排除水分的效果，不但是最佳瘦身水果，也是吃了会让肌肤水当当的美颜圣品，不过香蕉的热量较高，吃多了，会有变胖的疑虑。\n3．葡萄柚100克/28卡路里\n欧美人都爱吃葡萄柚等酸性水果来塑身，因为酸酸的水果可以促进肠道消化功能，葡萄柚含有丰富的维他命C，可以消除疲劳，还能让肌肤美美的呢！加上葡萄柚的热量和含糖量少，是最佳的明星减肥水果。\n4、凤梨100克/32卡路里\n凤梨也是属于酸性水果，可以整肠和助消化，加上凤梨富含酵素能有益毒素分解，促进排水，所以也是想要瘦的人可以适量食用的水果，不过吃凤梨最好不要在餐前吃哦，因为它会伤胃，所以一定要先吃点东西垫垫胃才能食用。所以啰，凤梨虽然好吃，也不能吃过量。\n5．奇异果100克/50卡路里\n奇异果甜美多汁，又含有丰富维生素C的特色，成为最受欢迎的美容和塑身水果。带点酸甜好滋味的奇异果，能防止便秘、帮助消化和美化肌肤，即使拿来当减肥餐，也会让人吃得津津有味，而它也一样是属于低热量高营养成分的优质水果。\n6．柠檬100克/24卡路里\n美白肌肤要吃点柠檬，减肥塑身也不要忘记它。柠檬以柠檬酸为主，能促进热量代谢，加上它维生素C的含量是水果中的第一名，热量又是最低的，所有爱美想瘦的人，都一定要爱上柠檬的酸味儿，记住，少少的吃就好，要不然也会很伤胃，空腹时也不能吃哦!\n7．番茄100克/35卡路里\n拜瘦身风潮之赐，番茄一夕之间身价飙高，成为明星产品。番茄除了含有丰富维生素C、E、K外，还富含茄红素、叶酸、类胡萝卜素、酚酸和纤维质，是比较最热门的保健水果，也被拿来做减肥水果餐的好食材。\n除了上面的水果之外，体积大、水分多的西瓜，低热量的芭乐、杨桃，也都可以用来瘦身。\n小叮咛\n吃葡萄不要吐葡萄皮哦，医学研究发现：将苹果及葡萄的“皮”打成汁或是直接吃下去，这些果皮的汁能有不错的美肤、抗老和抗氧化的效果，所以吃这些水果时，不妨连皮一起吃，那是有益健康的。不过要记得把果皮清洗干净喔。\n低卡路里食物\r#\r\r编辑\n蔬菜：芦笋、西兰花、白菜、萝卜、芹菜、黄瓜、洋葱、西红柿\n水果：苹果、葡萄、柠檬、芒果橙子、菠萝草莓、杏仁、香蕉、樱桃、红莓、西柚、番石榴、奇异果、荔枝、木瓜、等。\n果仁类：巴西果、栗子、椰子、夏威夷果、花生、松果、核桃等。[1]"},{"id":101,"href":"/posts/essay/%E5%AD%A6%E4%B8%8D%E5%8F%AF%E5%B7%A7/","title":"学不可巧","section":"随笔","content":"人更容易学会只有一条路径不能超前探索的技能，比如游泳，溜冰这类的，因为这些技能必须按部就班的练习，不会游泳就不能去深水，浅水反复摸索找到技巧不需要多久，溜冰也是不会就滑不起来，不熟不敢滑快，这些约束了人必须按部就班的练习，弹琴，绘画就不易学好，因为想怎么画都可以，反而很多人不能按部就班的练习。\n在没有基础，不理解的情况下看一些东西，很多是无效的，浪费了时间。 很多学习着急的看了后面的就没有耐心在按部就班的学习，前面的基础没做好，后面的学习就会很困难，困难又使人沮丧一字半途而废。 在学校有老师把握教课的节奏所以一些人还能被灌输，顺势的学到一些东西，如果是自主的去学，能学好的人我感觉很少。\n仁义的人喜欢高大、壮美；温和的人喜欢细微、巧妙；聪明的人喜欢跳跃、起伏；感性的人喜欢好事成双\n"},{"id":102,"href":"/posts/essay/%E7%AC%94%E8%AE%B0%E6%9C%AC%E8%A7%A6%E6%91%B8%E6%9D%BF%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/","title":"笔记本触摸板操作技巧","section":"随笔","content":"最初打游戏一直是鼠标控，不习惯使用笔记本触摸板，最近工作经常外出服务，鼠标有些累赘，刻意学习一下触摸板： 一、用单指触摸触摸板并移动相当于移动鼠标。\n二、单击左键相当于点击鼠标左键；单击右键相当于点击鼠标右键。\n三、单指双击触摸板相当于鼠标左键双击；双指同时单击触摸板相当于单击鼠标右键。\n四、双指在触摸板上上下、左右滑动，可以滚动浏览网页和文档；双指张开、闭合可以实现放大、缩小（看照片、文档时）。\n五、三个手指同时点击可以快速打开搜索界面；三个手指向上滑动可以显示虚拟桌面。\n六、三个手指向下滑动可以隐藏桌面打开的应用程序；三个手指左右滑动可以快速切换任务。\n七、四个手指同时单击可以快速打开操作中心。\n以上操作若无法实现，可以进入触控板的设置界面，勾选对应功能，即可启用。\n"},{"id":103,"href":"/posts/golang/a-global-proxy-for-go-modules/","title":"A Global Proxy for Go Modules","section":"golang","content":"First, you will need to enable the Go Modules feature and configure Go to use the proxy. bash:\nexport GOPROXY=https://goproxy.io Or powershell:\n$env:GOPROXY = \u0026quot;https://goproxy.io\u0026quot; Now, when you build and run your applications, go will fetch dependencies via goproxy.io.\nNote: This proxy can\u0026rsquo;t fetch your private repos of course.\nPrivate proxy\r#\r\rStarted\r#\r\r./goproxy -listen=0.0.0.0:80 -cacheDir=/data Use docker image\r#\r\rdocker run -d -p80:8081 goproxy/goproxy Use the -v flag to persisting the proxy module data (change cacheDir to your own dir):\ndocker run -d -p80:8081 -v cacheDir:/go goproxy/goproxy "},{"id":104,"href":"/posts/golang/cgo-install/","title":"Cgo Install","section":"golang","content":"最近运行一个项目用到了Cgo,下载安装还折腾了一会儿，这里记录一下方便自己和同样的人 我是windows,Linux安装c++很方便，window下安装安装微软的c++编译器很臃肿，和visual studio配套的，安装mingw-w64会比较轻量，我遇到的问题在于安装程序不好下载，我上传到网盘了，下载直接安装。 https://pan.baidu.com/s/14i4td4zRMz4aC1rX_UdfXQ\n"},{"id":105,"href":"/posts/golang/golang-%E5%87%BD%E6%95%B0%E5%92%8C%E9%97%AD%E5%8C%85/","title":"Golang 函数和闭包","section":"golang","content":"接触golang有些时间了，以前磕磕碰碰的勉强写过几个小程序，最近工作又亲近golang，就想着再回头巩固一下，曾经遇到过几次的问题又再次遇到了，golang的函数定义格式是这样的：\nfunc function_name( [parameter list] ) [return_types] { 函数体 } 函数体之上的哪一行总共分为三个部分，依次是声明关键字，函数名和参数，返回值。函数名和参数是一个整体所以归为一组方便识别的，有时会遇到一些异类的形式，今天就遇到这样的：\nfunc fib() func() int { a, b := 0, 1 return func() int { a, b = b, a+b return a } } 比常见的多了一段，让人有点蒙圈了，再回顾到闭包的知识点才解决此困惑，说一下我自己对闭包的总结，闭包就是函数返回一个匿名函数，看一个例子：\npackage main import \u0026quot;fmt\u0026quot; func returnNum() func() (int, int) { return func() (int, int) { return 0, 1 } } func main() { q := returnNum() a, b := q() fmt.Println(a, b) } 在强类型语言里面，函数返回值类型是不可少的，闭包误导人的地方就在于它的返回值定义，返回一个匿名函数，函数得注明返回值，返回值和函数名之间习惯上会加空格，这就造成闭包的形式有别于普通函数，上面这个闭包双返回值也是有些耐人寻味的。少见多怪，主要还是因为我是个业余玩家。 ####还有方法：结构体方法，对象方法也是初学者不易理解的。\n"},{"id":106,"href":"/posts/istio/istio%E4%BF%97%E8%AF%AD%E5%92%8C%E7%BB%84%E4%BB%B6%E6%A6%82%E6%8B%AC/","title":"Istio俗语和组件概括","section":"istio","content":"架构\r#\r\rIstio 服务网格逻辑上分为数据平面和控制平面。 • 数据平面由一组以 sidecar 方式部署的智能代理（Envoy）组成。这些代理可以调节和控制微服务及 Mixer 之间所有的网络通信。 • 控制平面负责管理和配置代理来路由流量。此外控制平面配置 Mixer 以实施策略和收集遥测数据。\nEnvoy\r#\r\rIstio 使用 Envoy 代理的扩展版本，Envoy 是以 C++ 开发的高性能代理，用于调解服务网格中所有服务的所有入站和出站流量。Envoy 的许多内置功能被 istio 发扬光大，例如： • 动态服务发现 • 负载均衡 • TLS 终止 • HTTP/2 \u0026amp; gRPC 代理 • 熔断器 • 健康检查、基于百分比流量拆分的灰度发布 • 故障注入 • 丰富的度量指标 Envoy 被部署为 sidecar，和对应服务在同一个 Kubernetes pod 中。这允许 Istio 将大量关于流量行为的信号作为属性提取出来，而这些属性又可以在 Mixer 中用于执行策略决策，并发送给监控系统，以提供整个网格行为的信息。 Sidecar 代理模型还可以将 Istio 的功能添加到现有部署中，而无需重新构建或重写代码。\nMixer 交际家\r#\r\rMixer 是一个独立于平台的组件，负责在服务网格上执行访问控制和使用策略，并从 Envoy 代理和其他服务收集遥测数据。代理提取请求级属性，发送到 Mixer 进行评估。在 Istio 中能够集成各种生态的基础设施后端系统，它通过即插即用的适配器集，通过标准的配置模型，使 Istio 能够方便地与现有的服务进行集成。适配器对 Mixer 的功能进行了扩展，并将特定的接口暴露给监控、日志、追踪、配额管理及其他功能。适配器是按需加载的，并按照运维人员的配置在运行时发挥作用。\npilot 领航员,飞行员\r#\r\rPilot 为 Envoy sidecar 提供服务发现功能，为智能路由（例如 A/B 测试、金丝雀部署等）和弹性（超时、重试、熔断器等）提供流量管理功能。它将控制流量行为的高级路由规则转换为特定于 Envoy 的配置，并在运行时将它们传播到 sidecar。 Pilot 负责管理代理的配置，并将服务的通信策略分发至 Istio mesh 中所有的 Envoy 实例。它能够接受高级别的规则（例如发布策略），将其解释为低级别的 Envoy 配置，并将配置分发至 sidecar，而且不会导致停机或是重新部署。 Pilot 将平台特定的服务发现机制抽象化并将其合成为符合 Envoy 数据平面 API 的任何 sidecar 都可以使用的标准格式。这种松散耦合使得 Istio 能够在多种环境下运行（例如，Kubernetes、Consul、Nomad），同时保持用于流量管理的相同操作界面。\ncitadel 城堡\r#\r\rCitadel 通过内置身份和凭证管理赋能强大的服务间和最终用户身份验证。可用于升级服务网格中未加密的流量，并为运维人员提供基于服务标识而不是网络控制的强制执行策略的能力。Istio 支持基于角色的访问控制，以控制谁可以访问您的服务，而不是基于不稳定的三层或四层网络标识。 citadel为跨 mesh 的服务与服务之间的通信进行证书签名与轮换，提供双向认证与双向授权功能。Envoy 通过 Citadel 证书，在每个调用中以透明的方式注入双向的TLS，通过自动化的身份与凭证管理，对流量进行安全管理与加密。Citadel 符合 Istio 的整体设计，只需少量的服务代码（甚至完全不需要服务代码）即可配置认证与授权功能，并且能够无缝地支持多个集群与平台。\ngalley 游艇,战舰\r#\r\rGalley 为 Istio 提供配置管理服务, 代表其他的 Istio 控制平面组件，用来验证用户编写的 Istio API 配置。随着时间的推移，Galley 将接管 Istio 获取配置、 处理和分配组件的顶级责任。它将负责将其他的 Istio 组件与从底层平台（例如 Kubernetes）获取用户配置的细节中隔离开来。\nsidecar-injector 边车\r#\r\rEnvoy 作为 sidecar 部署在系统中，对所有流入与流出的网络请求进行拦截，实现各种网络策略，并与 Istio 控制面板集成。Istio 利用了 Envoy 内建的大量特性，例如服务发现与负载均衡、流量拆分、故障注入（fault injection）、熔断器以及分阶段发布等功能。\n"},{"id":107,"href":"/posts/kubernetes/containerd-%E6%9E%B6%E6%9E%84%E5%92%8C%E6%B5%81%E7%A8%8B%E5%9B%BE/","title":"Containerd 架构和流程图","section":"Kubernetes","content":"推荐一个套完善的容器课程： CNCF × Alibaba 云原生技术公开课\n"},{"id":108,"href":"/posts/kubernetes/coredns%E9%85%8D%E7%BD%AE%E7%A7%81%E6%9C%89dns%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%92%8C%E4%B8%8A%E6%B8%B8dns%E6%9C%8D%E5%8A%A1%E5%99%A8/","title":"Core Dns配置私有 Dns服务器和上游 Dns服务器","section":"Kubernetes","content":"从 Kubernetes 1.6 开始，可以通过为 kube-dns 提供 ConfigMap 来实现对存根域以及上游名称服务器的自定义指定。例如，下面的配置插入了一个单独的私有根 DNS 服务器和两个上游 DNS 服务器。\napiVersion: v1 kind: ConfigMap metadata: name: kube-dns namespace: kube-system data: stubDomains: | {“acme.local”: [“1.2.3.4”]} upstreamNameservers: | [“8.8.8.8”, “8.8.4.4”] 使用上述特定配置，查询请求首先会被发送到 kube-dns 的 DNS 缓存层 (Dnsmasq 服务器)。Dnsmasq 服务器会先检查请求的后缀，带有集群后缀（例如：”.cluster.local”）的请求会被发往 kube-dns，拥有存根域后缀的名称（例如：”.acme.local”）将会被发送到配置的私有 DNS 服务器 [“1.2.3.4”]。最后，不满足任何这些后缀的请求将会被发送到上游 DNS [“8.8.8.8”, “8.8.4.4”] 里。\n"},{"id":109,"href":"/posts/kubernetes/docker-%E9%95%9C%E5%83%8F%E5%A4%8D%E5%88%B6%E5%B7%A5%E5%85%B7skopeo/","title":"Docker 镜像复制工具skopeo","section":"Kubernetes","content":"docker run --rm -it registry.cn-shenzhen.aliyuncs.com/windonet/skopeo:1.4 bash # example skopeo --override-os windows --insecure-policy \\ copy --dest-creds Username:Password \\ docker://mcr.microsoft.com/dotnet/framework/runtime:4.8 \\ docker://registry.cn-shenzhen.aliyuncs.com/windonet/donet-framework-runtime:4.8 github: https://github.com/containers/skopeo\nnotice: \u0026ndash;override-os windows #跨平台时使用，指定镜像所在的平台 \u0026ndash;insecure-policy # 不做策略检查 # 更多使用-h看帮助，麻烦的事有cgo不支持静态编译，对操作系统有要求\n"},{"id":110,"href":"/posts/kubernetes/fluented-install/","title":"Fluented Install","section":"Kubernetes","content":"deploy elasticsearch persistent volume\r#\r\rcat pv-master.yaml kind: PersistentVolume apiVersion: v1 metadata: name: efk-master-volume labels: type: localspec: storageClassName: elasticsearch-master capacity: storage: 10Gi accessModes: - ReadWriteOnce hostPath: path: \u0026quot;/mnt/data/efk-master\u0026quot; mkdir -p /mnt/data/efk-master \u0026amp;\u0026amp; kubectl create -f pv-master.yaml data\r#\r\rcat pv-data.yaml kind: PersistentVolume apiVersion: v1 metadata: name: efk-data-volume labels: type: local spec: storageClassName: elasticsearch-data capacity: storage: 5Gi accessModes: - ReadWriteOnce hostPath: path: \u0026quot;/mnt/data/efk-data\u0026quot; mkdir -p /mnt/data/efk-data \u0026amp;\u0026amp; kubectl create -f pv-data.yaml deploy elasticsearch\r#\r\rkubectl create namespace logs helm install elasticsearch stable/elasticsearch \u0026ndash;namespace=logs\n\u0026ndash;set client.replicas=1\n\u0026ndash;set master.replicas=1\n\u0026ndash;set cluster.env.MINIMUM_MASTER_NODES=1\n\u0026ndash;set cluster.env.RECOVER_AFTER_MASTER_NODES=1\n\u0026ndash;set cluster.env.EXPECTED_MASTER_NODES=1\n\u0026ndash;set data.replicas=1\n\u0026ndash;set data.heapSize=300m\n\u0026ndash;set master.persistence.storageClass=elasticsearch-master\n\u0026ndash;set master.persistence.size=5Gi\n\u0026ndash;set data.persistence.storageClass=elasticsearch-data\n\u0026ndash;set data.persistence.size=5Gi\ntemplate\r#\r\r--- # Source: elasticsearch/templates/client-serviceaccount.yaml apiVersion: v1 kind: ServiceAccount metadata: labels: app: elasticsearch chart: elasticsearch-1.32.4 component: \u0026quot;client\u0026quot; heritage: Helm release: elasticsearch name: elasticsearch-client --- # Source: elasticsearch/templates/data-serviceaccount.yaml apiVersion: v1 kind: ServiceAccount metadata: labels: app: elasticsearch chart: elasticsearch-1.32.4 component: \u0026quot;data\u0026quot; heritage: Helm release: elasticsearch name: elasticsearch-data --- # Source: elasticsearch/templates/master-serviceaccount.yaml apiVersion: v1 kind: ServiceAccount metadata: labels: app: elasticsearch chart: elasticsearch-1.32.4 component: \u0026quot;master\u0026quot; heritage: Helm release: elasticsearch name: elasticsearch-master --- # Source: elasticsearch/templates/configmap.yaml apiVersion: v1 kind: ConfigMap metadata: name: elasticsearch labels: app: elasticsearch chart: \u0026quot;elasticsearch-1.32.4\u0026quot; release: \u0026quot;elasticsearch\u0026quot; heritage: \u0026quot;Helm\u0026quot; data: elasticsearch.yml: |- cluster.name: elasticsearch node.data: ${NODE_DATA:true} node.master: ${NODE_MASTER:true} node.ingest: ${NODE_INGEST:true} node.name: ${HOSTNAME} network.host: 0.0.0.0 # see https://github.com/kubernetes/kubernetes/issues/3595 bootstrap.memory_lock: ${BOOTSTRAP_MEMORY_LOCK:false} discovery: zen: ping.unicast.hosts: ${DISCOVERY_SERVICE:} minimum_master_nodes: ${MINIMUM_MASTER_NODES:2} # see https://github.com/elastic/elasticsearch-definitive-guide/pull/679 processors: ${PROCESSORS:} # avoid split-brain w/ a minimum consensus of two masters plus a data node gateway.expected_master_nodes: ${EXPECTED_MASTER_NODES:2} gateway.expected_data_nodes: ${EXPECTED_DATA_NODES:1} gateway.recover_after_time: ${RECOVER_AFTER_TIME:5m} gateway.recover_after_master_nodes: ${RECOVER_AFTER_MASTER_NODES:2} gateway.recover_after_data_nodes: ${RECOVER_AFTER_DATA_NODES:1} log4j2.properties: |- status = error appender.console.type = Console appender.console.name = console appender.console.layout.type = PatternLayout appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] %marker%m%n rootLogger.level = info rootLogger.appenderRef.console.ref = console logger.searchguard.name = com.floragunn logger.searchguard.level = info data-pre-stop-hook.sh: |- #!/bin/bash exec \u0026amp;\u0026gt; \u0026gt;(tee -a \u0026quot;/var/log/elasticsearch-hooks.log\u0026quot;) NODE_NAME=${HOSTNAME} echo \u0026quot;Prepare to migrate data of the node ${NODE_NAME}\u0026quot; echo \u0026quot;Move all data from node ${NODE_NAME}\u0026quot; curl -s -XPUT -H 'Content-Type: application/json' 'elasticsearch-client:9200/_cluster/settings' -d \u0026quot;{ \\\u0026quot;transient\\\u0026quot; :{ \\\u0026quot;cluster.routing.allocation.exclude._name\\\u0026quot; : \\\u0026quot;${NODE_NAME}\\\u0026quot; } }\u0026quot; echo \u0026quot;\u0026quot; while true ; do echo -e \u0026quot;Wait for node ${NODE_NAME} to become empty\u0026quot; SHARDS_ALLOCATION=$(curl -s -XGET 'http://elasticsearch-client:9200/_cat/shards') if ! echo \u0026quot;${SHARDS_ALLOCATION}\u0026quot; | grep -E \u0026quot;${NODE_NAME}\u0026quot;; then break fi sleep 1 done echo \u0026quot;Node ${NODE_NAME} is ready to shutdown\u0026quot; data-post-start-hook.sh: |- #!/bin/bash exec \u0026amp;\u0026gt; \u0026gt;(tee -a \u0026quot;/var/log/elasticsearch-hooks.log\u0026quot;) NODE_NAME=${HOSTNAME} CLUSTER_SETTINGS=$(curl -s -XGET \u0026quot;http://elasticsearch-client:9200/_cluster/settings\u0026quot;) if echo \u0026quot;${CLUSTER_SETTINGS}\u0026quot; | grep -E \u0026quot;${NODE_NAME}\u0026quot;; then echo \u0026quot;Activate node ${NODE_NAME}\u0026quot; curl -s -XPUT -H 'Content-Type: application/json' \u0026quot;http://elasticsearch-client:9200/_cluster/settings\u0026quot; -d \u0026quot;{ \\\u0026quot;transient\\\u0026quot; :{ \\\u0026quot;cluster.routing.allocation.exclude._name\\\u0026quot; : null } }\u0026quot; fi echo \u0026quot;Node ${NODE_NAME} is ready to be used\u0026quot; --- # Source: elasticsearch/templates/tests/test-configmap.yaml apiVersion: v1 kind: ConfigMap metadata: name: elasticsearch-test labels: app: elasticsearch chart: \u0026quot;elasticsearch-1.32.4\u0026quot; heritage: \u0026quot;Helm\u0026quot; release: \u0026quot;elasticsearch\u0026quot; data: run.sh: |- @test \u0026quot;Test Access and Health\u0026quot; { curl -D - http://elasticsearch-client:9200 curl -D - http://elasticsearch-client:9200/_cluster/health?wait_for_status=green } --- # Source: elasticsearch/templates/client-svc.yaml apiVersion: v1 kind: Service metadata: labels: app: elasticsearch chart: elasticsearch-1.32.4 component: \u0026quot;client\u0026quot; heritage: Helm release: elasticsearch name: elasticsearch-client spec: ports: - name: http port: 9200 targetPort: http selector: app: elasticsearch component: \u0026quot;client\u0026quot; release: elasticsearch type: ClusterIP --- # Source: elasticsearch/templates/master-svc.yaml apiVersion: v1 kind: Service metadata: labels: app: elasticsearch chart: elasticsearch-1.32.4 component: \u0026quot;master\u0026quot; heritage: Helm release: elasticsearch name: elasticsearch-discovery spec: clusterIP: None ports: - port: 9300 targetPort: transport selector: app: elasticsearch component: \u0026quot;master\u0026quot; release: elasticsearch --- # Source: elasticsearch/templates/client-deployment.yaml apiVersion: apps/v1 kind: Deployment metadata: labels: app: elasticsearch chart: elasticsearch-1.32.4 component: \u0026quot;client\u0026quot; heritage: Helm release: elasticsearch name: elasticsearch-client spec: selector: matchLabels: app: elasticsearch component: \u0026quot;client\u0026quot; release: elasticsearch replicas: 1 template: metadata: labels: app: elasticsearch component: \u0026quot;client\u0026quot; release: elasticsearch annotations: checksum/config: 9648c9871ce1de6ddcb85de48e3ef7619e585522c065e42dc5795ae9a9e66f95 spec: serviceAccountName: elasticsearch-client securityContext: fsGroup: 1000 affinity: podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 1 podAffinityTerm: topologyKey: kubernetes.io/hostname labelSelector: matchLabels: app: \u0026quot;elasticsearch\u0026quot; release: \u0026quot;elasticsearch\u0026quot; component: \u0026quot;client\u0026quot; initContainers: # see https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html # and https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration-memory.html#mlockall - name: \u0026quot;sysctl\u0026quot; image: \u0026quot;busybox:latest\u0026quot; imagePullPolicy: \u0026quot;Always\u0026quot; resources: {} command: [\u0026quot;sysctl\u0026quot;, \u0026quot;-w\u0026quot;, \u0026quot;vm.max_map_count=262144\u0026quot;] securityContext: privileged: true containers: - name: elasticsearch env: - name: NODE_DATA value: \u0026quot;false\u0026quot; - name: NODE_MASTER value: \u0026quot;false\u0026quot; - name: DISCOVERY_SERVICE value: elasticsearch-discovery - name: PROCESSORS valueFrom: resourceFieldRef: resource: limits.cpu - name: ES_JAVA_OPTS value: \u0026quot;-Djava.net.preferIPv4Stack=true -Xms512m -Xmx512m \u0026quot; - name: EXPECTED_MASTER_NODES value: \u0026quot;1\u0026quot; - name: MINIMUM_MASTER_NODES value: \u0026quot;1\u0026quot; - name: RECOVER_AFTER_MASTER_NODES value: \u0026quot;1\u0026quot; resources: limits: cpu: \u0026quot;1\u0026quot; requests: cpu: 25m memory: 512Mi readinessProbe: httpGet: path: /_cluster/health port: 9200 initialDelaySeconds: 5 livenessProbe: httpGet: path: /_cluster/health?local=true port: 9200 initialDelaySeconds: 90 image: \u0026quot;docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.6\u0026quot; imagePullPolicy: \u0026quot;IfNotPresent\u0026quot; ports: - containerPort: 9200 name: http - containerPort: 9300 name: transport volumeMounts: - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml name: config subPath: elasticsearch.yml volumes: - name: config configMap: name: elasticsearch --- # Source: elasticsearch/templates/data-statefulset.yaml apiVersion: apps/v1 kind: StatefulSet metadata: labels: app: elasticsearch chart: elasticsearch-1.32.4 component: \u0026quot;data\u0026quot; heritage: Helm release: elasticsearch name: elasticsearch-data spec: selector: matchLabels: app: elasticsearch component: \u0026quot;data\u0026quot; release: elasticsearch role: data serviceName: elasticsearch-data replicas: 1 template: metadata: labels: app: elasticsearch component: \u0026quot;data\u0026quot; release: elasticsearch role: data spec: serviceAccountName: elasticsearch-data securityContext: fsGroup: 1000 affinity: podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 1 podAffinityTerm: topologyKey: kubernetes.io/hostname labelSelector: matchLabels: app: \u0026quot;elasticsearch\u0026quot; release: \u0026quot;elasticsearch\u0026quot; component: \u0026quot;data\u0026quot; initContainers: # see https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html # and https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration-memory.html#mlockall - name: \u0026quot;sysctl\u0026quot; image: \u0026quot;busybox:latest\u0026quot; imagePullPolicy: \u0026quot;Always\u0026quot; resources: {} command: [\u0026quot;sysctl\u0026quot;, \u0026quot;-w\u0026quot;, \u0026quot;vm.max_map_count=262144\u0026quot;] securityContext: privileged: true - name: \u0026quot;chown\u0026quot; image: \u0026quot;docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.6\u0026quot; imagePullPolicy: \u0026quot;IfNotPresent\u0026quot; resources: {} command: - /bin/bash - -c - \u0026gt; set -e; set -x; chown elasticsearch:elasticsearch /usr/share/elasticsearch/data; for datadir in $(find /usr/share/elasticsearch/data -mindepth 1 -maxdepth 1 -not -name \u0026quot;.snapshot\u0026quot;); do chown -R elasticsearch:elasticsearch $datadir; done; chown elasticsearch:elasticsearch /usr/share/elasticsearch/logs; for logfile in $(find /usr/share/elasticsearch/logs -mindepth 1 -maxdepth 1 -not -name \u0026quot;.snapshot\u0026quot;); do chown -R elasticsearch:elasticsearch $logfile; done securityContext: runAsUser: 0 volumeMounts: - mountPath: /usr/share/elasticsearch/data name: data containers: - name: elasticsearch env: - name: DISCOVERY_SERVICE value: elasticsearch-discovery - name: NODE_MASTER value: \u0026quot;false\u0026quot; - name: PROCESSORS valueFrom: resourceFieldRef: resource: limits.cpu - name: ES_JAVA_OPTS value: \u0026quot;-Djava.net.preferIPv4Stack=true -Xms300m -Xmx300m \u0026quot; - name: EXPECTED_MASTER_NODES value: \u0026quot;1\u0026quot; - name: MINIMUM_MASTER_NODES value: \u0026quot;1\u0026quot; - name: RECOVER_AFTER_MASTER_NODES value: \u0026quot;1\u0026quot; image: \u0026quot;docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.6\u0026quot; imagePullPolicy: \u0026quot;IfNotPresent\u0026quot; ports: - containerPort: 9300 name: transport resources: limits: cpu: \u0026quot;1\u0026quot; requests: cpu: 25m memory: 1536Mi readinessProbe: httpGet: path: /_cluster/health?local=true port: 9200 initialDelaySeconds: 5 volumeMounts: - mountPath: /usr/share/elasticsearch/data name: data - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml name: config subPath: elasticsearch.yml - name: config mountPath: /data-pre-stop-hook.sh subPath: data-pre-stop-hook.sh - name: config mountPath: /data-post-start-hook.sh subPath: data-post-start-hook.sh lifecycle: preStop: exec: command: [\u0026quot;/bin/bash\u0026quot;,\u0026quot;/data-pre-stop-hook.sh\u0026quot;] postStart: exec: command: [\u0026quot;/bin/bash\u0026quot;,\u0026quot;/data-post-start-hook.sh\u0026quot;] terminationGracePeriodSeconds: 3600 volumes: - name: config configMap: name: elasticsearch podManagementPolicy: OrderedReady updateStrategy: type: OnDelete volumeClaimTemplates: - metadata: name: data spec: accessModes: - \u0026quot;ReadWriteOnce\u0026quot; storageClassName: \u0026quot;elasticsearch-data\u0026quot; resources: requests: storage: \u0026quot;5Gi\u0026quot; --- # Source: elasticsearch/templates/master-statefulset.yaml apiVersion: apps/v1 kind: StatefulSet metadata: labels: app: elasticsearch chart: elasticsearch-1.32.4 component: \u0026quot;master\u0026quot; heritage: Helm release: elasticsearch name: elasticsearch-master spec: selector: matchLabels: app: elasticsearch component: \u0026quot;master\u0026quot; release: elasticsearch role: master serviceName: elasticsearch-master replicas: 1 template: metadata: labels: app: elasticsearch component: \u0026quot;master\u0026quot; release: elasticsearch role: master spec: serviceAccountName: elasticsearch-master securityContext: fsGroup: 1000 affinity: podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 1 podAffinityTerm: topologyKey: kubernetes.io/hostname labelSelector: matchLabels: app: \u0026quot;elasticsearch\u0026quot; release: \u0026quot;elasticsearch\u0026quot; component: \u0026quot;master\u0026quot; initContainers: # see https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html # and https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration-memory.html#mlockall - name: \u0026quot;sysctl\u0026quot; image: \u0026quot;busybox:latest\u0026quot; imagePullPolicy: \u0026quot;Always\u0026quot; resources: {} command: [\u0026quot;sysctl\u0026quot;, \u0026quot;-w\u0026quot;, \u0026quot;vm.max_map_count=262144\u0026quot;] securityContext: privileged: true - name: \u0026quot;chown\u0026quot; image: \u0026quot;docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.6\u0026quot; imagePullPolicy: \u0026quot;IfNotPresent\u0026quot; resources: {} command: - /bin/bash - -c - \u0026gt; set -e; set -x; chown elasticsearch:elasticsearch /usr/share/elasticsearch/data; for datadir in $(find /usr/share/elasticsearch/data -mindepth 1 -maxdepth 1 -not -name \u0026quot;.snapshot\u0026quot;); do chown -R elasticsearch:elasticsearch $datadir; done; chown elasticsearch:elasticsearch /usr/share/elasticsearch/logs; for logfile in $(find /usr/share/elasticsearch/logs -mindepth 1 -maxdepth 1 -not -name \u0026quot;.snapshot\u0026quot;); do chown -R elasticsearch:elasticsearch $logfile; done securityContext: runAsUser: 0 volumeMounts: - mountPath: /usr/share/elasticsearch/data name: data containers: - name: elasticsearch env: - name: NODE_DATA value: \u0026quot;false\u0026quot; - name: DISCOVERY_SERVICE value: elasticsearch-discovery - name: PROCESSORS valueFrom: resourceFieldRef: resource: limits.cpu - name: ES_JAVA_OPTS value: \u0026quot;-Djava.net.preferIPv4Stack=true -Xms512m -Xmx512m \u0026quot; - name: EXPECTED_MASTER_NODES value: \u0026quot;1\u0026quot; - name: MINIMUM_MASTER_NODES value: \u0026quot;1\u0026quot; - name: RECOVER_AFTER_MASTER_NODES value: \u0026quot;1\u0026quot; resources: limits: cpu: \u0026quot;1\u0026quot; requests: cpu: 25m memory: 512Mi readinessProbe: httpGet: path: /_cluster/health?local=true port: 9200 initialDelaySeconds: 5 image: \u0026quot;docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.6\u0026quot; imagePullPolicy: \u0026quot;IfNotPresent\u0026quot; ports: - containerPort: 9300 name: transport volumeMounts: - mountPath: /usr/share/elasticsearch/data name: data - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml name: config subPath: elasticsearch.yml volumes: - name: config configMap: name: elasticsearch podManagementPolicy: OrderedReady updateStrategy: type: OnDelete volumeClaimTemplates: - metadata: name: data spec: accessModes: - \u0026quot;ReadWriteOnce\u0026quot; storageClassName: \u0026quot;elasticsearch-master\u0026quot; resources: requests: storage: \u0026quot;5Gi\u0026quot; --- # Source: elasticsearch/templates/tests/test.yaml apiVersion: v1 kind: Pod metadata: name: elasticsearch-test labels: app: elasticsearch chart: \u0026quot;elasticsearch-1.32.4\u0026quot; heritage: \u0026quot;Helm\u0026quot; release: \u0026quot;elasticsearch\u0026quot; annotations: \u0026quot;helm.sh/hook\u0026quot;: test-success spec: initContainers: - name: test-framework image: \u0026quot;dduportal/bats:0.4.0\u0026quot; command: - \u0026quot;bash\u0026quot; - \u0026quot;-c\u0026quot; - | set -ex # copy bats to tools dir cp -R /usr/local/libexec/ /tools/bats/ volumeMounts: - mountPath: /tools name: tools containers: - name: elasticsearch-test image: \u0026quot;dduportal/bats:0.4.0\u0026quot; command: [\u0026quot;/tools/bats/bats\u0026quot;, \u0026quot;-t\u0026quot;, \u0026quot;/tests/run.sh\u0026quot;] volumeMounts: - mountPath: /tests name: tests readOnly: true - mountPath: /tools name: tools volumes: - name: tests configMap: name: elasticsearch-test - name: tools emptyDir: {} restartPolicy: Never deploy fluent bit\r#\r\rhelm install fluent-bit stable/fluent-bit \u0026ndash;namespace=logs \u0026ndash;set backend.type=es \u0026ndash;set backend.es.host=elasticsearch-client\ntemplate\r#\r\r.es.host=elasticsearch-client --- # Source: fluent-bit/templates/serviceaccount.yaml apiVersion: v1 kind: ServiceAccount metadata: labels: app: fluent-bit chart: fluent-bit-2.8.16 heritage: Helm release: fluent-bit name: fluent-bit --- # Source: fluent-bit/templates/secret.yaml apiVersion: v1 kind: Secret metadata: name: \u0026quot;fluent-bit-es-tls-secret\u0026quot; labels: app: fluent-bit chart: fluent-bit-2.8.16 heritage: Helm release: fluent-bit type: Opaque data: es-tls-ca.crt: \u0026quot;\u0026quot; --- # Source: fluent-bit/templates/config.yaml apiVersion: v1 kind: ConfigMap metadata: name: fluent-bit-config labels: app: fluent-bit chart: fluent-bit-2.8.16 heritage: Helm release: fluent-bit data: fluent-bit-service.conf: | [SERVICE] Flush 1 Daemon Off Log_Level info Parsers_File parsers.conf fluent-bit-input.conf: | [INPUT] Name tail Path /var/log/containers/*.log Parser docker Tag kube.* Refresh_Interval 5 Mem_Buf_Limit 5MB Skip_Long_Lines On fluent-bit-filter.conf: | [FILTER] Name kubernetes Match kube.* Kube_Tag_Prefix kube.var.log.containers. Kube_URL https://kubernetes.default.svc:443 Kube_CA_File /var/run/secrets/kubernetes.io/serviceaccount/ca.crt Kube_Token_File /var/run/secrets/kubernetes.io/serviceaccount/token Merge_Log On K8S-Logging.Parser On K8S-Logging.Exclude On fluent-bit-output.conf: | [OUTPUT] Name es Match * Host elasticsearch-client Port 9200 Logstash_Format On Retry_Limit False Type flb_type Time_Key @timestamp Replace_Dots On Logstash_Prefix kubernetes_cluster fluent-bit.conf: | @INCLUDE fluent-bit-service.conf @INCLUDE fluent-bit-input.conf @INCLUDE fluent-bit-filter.conf @INCLUDE fluent-bit-output.conf parsers.conf: | --- # Source: fluent-bit/templates/tests/test-configmap.yaml apiVersion: v1 kind: ConfigMap metadata: name: fluent-bit-test labels: app: fluent-bit chart: \u0026quot;fluent-bit-2.8.16\u0026quot; heritage: \u0026quot;Helm\u0026quot; release: \u0026quot;fluent-bit\u0026quot; data: run.sh: |- @test \u0026quot;Test Elasticssearch Indices\u0026quot; { url=\u0026quot;http://elasticsearch-client:9200/_cat/indices?format=json\u0026quot; body=$(curl $url) result=$(echo $body | jq -cr '.[] | select(.index | contains(\u0026quot;kubernetes_cluster\u0026quot;))') [ \u0026quot;$result\u0026quot; != \u0026quot;\u0026quot; ] result=$(echo $body | jq -cr '.[] | select((.index | contains(\u0026quot;kubernetes_cluster\u0026quot;)) and (.health != \u0026quot;green\u0026quot;))') [ \u0026quot;$result\u0026quot; == \u0026quot;\u0026quot; ] } fluentd.conf: |- \u0026lt;source\u0026gt; @type forward bind 0.0.0.0 port 24284 shared_key \u0026lt;/source\u0026gt; \u0026lt;match **\u0026gt; @type stdout \u0026lt;/match\u0026gt; --- # Source: fluent-bit/templates/cluster-role.yaml apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: labels: app: fluent-bit chart: fluent-bit-2.8.16 heritage: Helm release: fluent-bit name: fluent-bit rules: - apiGroups: - \u0026quot;\u0026quot; resources: - pods verbs: - get --- # Source: fluent-bit/templates/cluster-rolebinding.yaml apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: labels: app: fluent-bit chart: fluent-bit-2.8.16 heritage: Helm release: fluent-bit name: fluent-bit roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: fluent-bit subjects: - kind: ServiceAccount name: fluent-bit namespace: logs --- # Source: fluent-bit/templates/daemonset.yaml apiVersion: apps/v1 kind: DaemonSet metadata: name: fluent-bit labels: app: fluent-bit chart: fluent-bit-2.8.16 heritage: Helm release: fluent-bit spec: selector: matchLabels: app: fluent-bit release: fluent-bit updateStrategy: type: RollingUpdate template: metadata: labels: app: fluent-bit release: fluent-bit annotations: checksum/config: d101fcf28e011075e57f8582773e26107826ecceb2812b4c2366016b328e368a spec: hostNetwork: false dnsPolicy: ClusterFirst serviceAccountName: fluent-bit containers: - name: fluent-bit image: \u0026quot;fluent/fluent-bit:1.3.7\u0026quot; imagePullPolicy: \u0026quot;Always\u0026quot; env: [] resources: {} volumeMounts: - name: varlog mountPath: /var/log - name: varlibdockercontainers mountPath: /var/lib/docker/containers readOnly: true - name: config mountPath: /fluent-bit/etc/fluent-bit.conf subPath: fluent-bit.conf - name: config mountPath: /fluent-bit/etc/fluent-bit-service.conf subPath: fluent-bit-service.conf - name: config mountPath: /fluent-bit/etc/fluent-bit-input.conf subPath: fluent-bit-input.conf - name: config mountPath: /fluent-bit/etc/fluent-bit-filter.conf subPath: fluent-bit-filter.conf - name: config mountPath: /fluent-bit/etc/fluent-bit-output.conf subPath: fluent-bit-output.conf terminationGracePeriodSeconds: 10 volumes: - name: varlog hostPath: path: /var/log - name: varlibdockercontainers hostPath: path: /var/lib/docker/containers - name: config configMap: name: fluent-bit-config --- # Source: fluent-bit/templates/tests/test.yaml apiVersion: v1 kind: Pod metadata: name: fluent-bit-test labels: app: fluent-bit chart: \u0026quot;fluent-bit-2.8.16\u0026quot; heritage: \u0026quot;Helm\u0026quot; release: \u0026quot;fluent-bit\u0026quot; annotations: \u0026quot;helm.sh/hook\u0026quot;: test-success spec: initContainers: - name: test-framework image: \u0026quot;dduportal/bats:0.4.0\u0026quot; command: - \u0026quot;bash\u0026quot; - \u0026quot;-c\u0026quot; - | set -ex # copy bats to tools dir cp -R /usr/local/libexec/ /tools/bats/ volumeMounts: - mountPath: /tools name: tools containers: - name: fluent-bit-test image: \u0026quot;dwdraju/alpine-curl-jq\u0026quot; command: [\u0026quot;/tools/bats/bats\u0026quot;, \u0026quot;-t\u0026quot;, \u0026quot;/tests/run.sh\u0026quot;] volumeMounts: - mountPath: /tests name: tests readOnly: true - mountPath: /tools name: tools volumes: - name: tests configMap: name: fluent-bit-test - name: tools emptyDir: {} restartPolicy: Never deploy kibana\r#\r\rhelm install kibana stable/kibana \u0026ndash;namespace=logs \u0026ndash;set env.ELASTICSEARCH_HOSTS=http://elasticsearch-client:9200 \u0026ndash;set service.type=NodePort \u0026ndash;set service.nodePort=31000 kubectl \u0026ndash;namespace=logs get pods -l \u0026ldquo;app=kibana\u0026rdquo; export NODE_PORT=$(kubectl get \u0026ndash;namespace logs -o jsonpath=\u0026quot;{.spec.ports[0].nodePort}\u0026quot; services kibana) export NODE_IP=$(kubectl get nodes \u0026ndash;namespace logs -o jsonpath=\u0026quot;{.items[0].status.addresses[0].address}\u0026quot;) echo http://$NODE_IP:$NODE_PORT\ntemplate\r#\r\r--- # Source: kibana/templates/configmap.yaml apiVersion: v1 kind: ConfigMap metadata: name: kibana labels: app: kibana chart: \u0026quot;kibana-3.2.6\u0026quot; release: kibana heritage: Helm data: kibana.yml: | elasticsearch.hosts: http://elasticsearch:9200 server.host: \u0026quot;0\u0026quot; server.name: kibana --- # Source: kibana/templates/tests/test-configmap.yaml apiVersion: v1 kind: ConfigMap metadata: name: kibana-test labels: app: kibana chart: \u0026quot;kibana-3.2.6\u0026quot; heritage: \u0026quot;Helm\u0026quot; release: \u0026quot;kibana\u0026quot; data: run.sh: |- @test \u0026quot;Test Status\u0026quot; { url=\u0026quot;http://kibana:443/api/status\u0026quot; # retry for 1 minute run curl -s -o /dev/null -I -w \u0026quot;%{http_code}\u0026quot; --retry 30 --retry-delay 2 $url code=$(curl -s -o /dev/null -I -w \u0026quot;%{http_code}\u0026quot; $url) body=$(curl $url) if [ \u0026quot;$code\u0026quot; == \u0026quot;503\u0026quot; ] then skip \u0026quot;Kibana Unavailable (503), can't get status - see pod logs: $body\u0026quot; fi result=$(echo $body | jq -cr '.status.statuses[]') [ \u0026quot;$result\u0026quot; != \u0026quot;\u0026quot; ] result=$(echo $body | jq -cr '.status.statuses[] | select(.state != \u0026quot;green\u0026quot;)') [ \u0026quot;$result\u0026quot; == \u0026quot;\u0026quot; ] } --- # Source: kibana/templates/service.yaml apiVersion: v1 kind: Service metadata: labels: app: kibana chart: kibana-3.2.6 release: kibana heritage: Helm name: kibana spec: type: NodePort ports: - port: 443 targetPort: 5601 protocol: TCP nodePort: 31000 selector: app: kibana release: kibana --- # Source: kibana/templates/deployment.yaml apiVersion: apps/v1 kind: Deployment metadata: labels: app: kibana chart: \u0026quot;kibana-3.2.6\u0026quot; heritage: Helm release: kibana name: kibana spec: replicas: 1 selector: matchLabels: app: kibana release: kibana revisionHistoryLimit: 3 template: metadata: annotations: checksum/config: 4f6afe69a2710fe67fee2348ad3aec4692d74d4005449338e5598c00dd54695d labels: app: kibana release: \u0026quot;kibana\u0026quot; spec: serviceAccountName: default containers: - name: kibana image: \u0026quot;docker.elastic.co/kibana/kibana-oss:6.7.0\u0026quot; imagePullPolicy: IfNotPresent env: - name: \u0026quot;ELASTICSEARCH_HOSTS\u0026quot; value: \u0026quot;http://elasticsearch-client:9200\u0026quot; ports: - containerPort: 5601 name: kibana protocol: TCP resources: {} volumeMounts: - name: kibana mountPath: \u0026quot;/usr/share/kibana/config/kibana.yml\u0026quot; subPath: kibana.yml tolerations: [] volumes: - name: kibana configMap: name: kibana --- # Source: kibana/templates/tests/test.yaml apiVersion: v1 kind: Pod metadata: name: kibana-test labels: app: kibana chart: \u0026quot;kibana-3.2.6\u0026quot; heritage: \u0026quot;Helm\u0026quot; release: \u0026quot;kibana\u0026quot; annotations: \u0026quot;helm.sh/hook\u0026quot;: test-success spec: initContainers: - name: test-framework image: \u0026quot;dduportal/bats:0.4.0\u0026quot; command: - \u0026quot;bash\u0026quot; - \u0026quot;-c\u0026quot; - | set -ex # copy bats to tools dir cp -R /usr/local/libexec/ /tools/bats/ volumeMounts: - mountPath: /tools name: tools containers: - name: kibana-test image: \u0026quot;dwdraju/alpine-curl-jq\u0026quot; command: [\u0026quot;/tools/bats/bats\u0026quot;, \u0026quot;-t\u0026quot;, \u0026quot;/tests/run.sh\u0026quot;] volumeMounts: - mountPath: /tests name: tests readOnly: true - mountPath: /tools name: tools volumes: - name: tests configMap: name: kibana-test - name: tools emptyDir: {} restartPolicy: Never "},{"id":111,"href":"/posts/kubernetes/gcr-proxy-cache/","title":"Gcr Proxy Cache","section":"Kubernetes","content":"GCR Proxy Cache 帮助\r#\r\rGCR Proxy Cache服务器相当于一台GCR镜像服务器，国内用户可以经由该服务器从gcr.io下载镜像。\n使用GCR Proxy Cache从gcr.io下载镜像\r#\r\rdocker pull gcr.azk8s.cn/google_containers/\u0026lt;imagename\u0026gt;:\u0026lt;version\u0026gt; 例子\r#\r\rdocker pull gcr.azk8s.cn/google_containers/pause-amd64:3.0 docker pull gcr.azk8s.cn/google_containers/kubedns-amd64:1.7 "},{"id":112,"href":"/posts/kubernetes/get-kubernetes-images-quickly/","title":"Get Kubernetes Images Quickly","section":"Kubernetes","content":"open:\r#\r\rhttps://katacoda.com/courses/kubernetes/playground\ncheck images\r#\r\rkubeadm config images list W0601 03:36:09.535740 16500 configset.go:202] WARNING: kubeadm cannot validate component configs for API groups [kubelet.config.k8s.io kubeproxy.config.k8s.io] k8s.gcr.io/kube-apiserver:v1.18.3 k8s.gcr.io/kube-controller-manager:v1.18.3 k8s.gcr.io/kube-scheduler:v1.18.3 k8s.gcr.io/kube-proxy:v1.18.3 k8s.gcr.io/pause:3.2 k8s.gcr.io/etcd:3.4.3-0 k8s.gcr.io/coredns:1.6.7\nexceute script\r#\r\rdocker login --username=hi30567721@aliyun.com --password=youpass registry.cn-shenzhen.aliyuncs.com for i in `kubeadm config images list | grep k8s.gcr.io` do echo $i; docker pull $i docker tag $i registry.cn-shenzhen.aliyuncs.com/wangyijie/${i##*/} docker push registry.cn-shenzhen.aliyuncs.com/wangyijie/${i##*/} done "},{"id":113,"href":"/posts/kubernetes/heapster-+-influxdb-+-grafana-%E7%9B%91%E6%8E%A7%E6%B2%A1%E6%95%B0%E6%8D%AE%E6%A1%88%E4%BE%8B/","title":"Heapster Influxdb Grafana 监控没数据案例","section":"Kubernetes","content":"现象\r#\r\r通过grafana查看部分容器没有监控数据\n关键信息\r#\r\r通过查看influxdb发现异常日志\n[write] 2019/04/25 09:56:05 write failed for shard 170: max-series-per-database limit exceeded: db=k8s (1000000/1000000) dropped=2111 [httpd] 172.16.3.10 - root [25/Apr/2019:09:56:05 +0000] \u0026quot;POST /write?consistency=\u0026amp;db=k8s\u0026amp;precision=\u0026amp;rp=default HTTP/1.1\u0026quot; 400 115 \u0026quot;-\u0026quot; \u0026quot;heapster/v1.5.1\u0026quot; 579d5b31-6740-11e9-8057-000000000000 156302 日志提示有序列超出了最大数限制： 查看文档有对应的参数： ##解决方法： 添加环境变量覆盖参数：\n - image: registry-vpc.cn-shenzhen.aliyuncs.com/acs/heapster-influxdb-amd64:v1.1.1 imagePullPolicy: IfNotPresent name: influxdb env: - name: INFLUXDB_DATA_MAX_SERIES_PER_DATABASE value: \u0026quot;0\u0026quot; - name: INFLUXDB_DATA_MAX_VALUES_PER_TAG value: \u0026quot;0\u0026quot; 变量值需加引号\n验证方法\r#\r\rinfluxdb没有图形界面了，命令工具也不易安装，curl最方便，不过格式需要注意，我参照了许多才找到合适的，记录个例子：\ncurl http://172.21.11.108:8086/query?pretty=true --data-urlencode \u0026quot;db=k8s\u0026quot; --data-urlencode \u0026quot;q=SELECT * FROM \\\u0026quot;cpu/usage\\\u0026quot; WHERE (\\\u0026quot;type\\\u0026quot; = 'pod' AND \\\u0026quot;namespace_name\\\u0026quot; =~ /^blue$/) AND time \u0026gt;= now() - 30m\u0026quot; "},{"id":114,"href":"/posts/kubernetes/kube-scheduler-%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/","title":"Kube Scheduler 工作原理","section":"Kubernetes","content":"kube-scheduler 调度分为两个阶段，predicate 和 priority:\n predicate：过滤不符合条件的节点 priority：优先级排序，选择优先级最高的节点\n predicates 策略:\n PodFitsPorts：同 PodFitsHostPorts PodFitsHostPorts：检查是否有 Host Ports 冲突 PodFitsResources：检查 Node 的资源是否充足，包括允许的 Pod 数量、CPU、内存、GPU 个数以及其他的 OpaqueIntResources HostName：检查 pod.Spec.NodeName 是否与候选节点一致 MatchNodeSelector：检查候选节点的 pod.Spec.NodeSelector 是否匹配 NoVolumeZoneConflict：检查 volume zone 是否冲突 MaxEBSVolumeCount：检查 AWS EBS Volume 数量是否过多（默认不超过 39） MaxGCEPDVolumeCount：检查 GCE PD Volume 数量是否过多（默认不超过 16） MaxAzureDiskVolumeCount：检查 Azure Disk Volume 数量是否过多（默认不超过 16） MatchInterPodAffinity：检查是否匹配 Pod 的亲和性要求 NoDiskConflict：检查是否存在 Volume 冲突，仅限于 GCE PD、AWS EBS、Ceph RBD 以及 ISCSI GeneralPredicates：分为 noncriticalPredicates 和 EssentialPredicates。noncriticalPredicates 中包含 PodFitsResources，EssentialPredicates 中包含 PodFitsHost，PodFitsHostPorts 和 PodSelectorMatches。 PodToleratesNodeTaints：检查 Pod 是否容忍 Node Taints CheckNodeMemoryPressure：检查 Pod 是否可以调度到 MemoryPressure 的节点上 CheckNodeDiskPressure：检查 Pod 是否可以调度到 DiskPressure 的节点上 NoVolumeNodeConflict：检查节点是否满足 Pod 所引用的 Volume 的条件\n priorities 策略:\n SelectorSpreadPriority：优先减少节点上属于同一个 Service 或 Replication Controller 的 Pod 数量 InterPodAffinityPriority：优先将 Pod 调度到相同的拓扑上（如同一个节点、Rack、Zone 等） LeastRequestedPriority：优先调度到请求资源少的节点上 BalancedResourceAllocation：优先平衡各节点的资源使用 NodePreferAvoidPodsPriority：alpha.kubernetes.io/preferAvoidPods 字段判断, 权重为 10000，避免其他优先级策略的影响 NodeAffinityPriority：优先调度到匹配 NodeAffinity 的节点上 TaintTolerationPriority：优先调度到匹配 TaintToleration 的节点上 ServiceSpreadingPriority：尽量将同一个 service 的 Pod 分布到不同节点上，已经被 SelectorSpreadPriority 替代 [默认未使用] EqualPriority：将所有节点的优先级设置为 1[默认未使用] ImageLocalityPriority：尽量将使用大镜像的容器调度到已经下拉了该镜像的节点上 [默认未使用] MostRequestedPriority：尽量调度到已经使用过的 Node 上，特别适用于 cluster-autoscaler[默认未使用]\n "},{"id":115,"href":"/posts/kubernetes/kubectl-%E5%88%9B%E5%BB%BA%E8%B5%84%E6%BA%90/","title":"Kubectl 创建资源","section":"Kubernetes","content":"最近去参加了CKA考试，在速度上吃亏，以往喜欢复制粘贴修改摸板，在时间紧张的情况下这种方式的效率问题暴露了，导致考试时间紧张，没用时间解决难题，考试会要求创建各种类型的资源，所以这准备练习命令创建资源，提高操作效率： 如果能从命令行直接创建符合目的的资源就直接使用，如果命令参数不满足需求，可以通过**\u0026ndash;dry-run -o yaml** 参数输出摸板不实际创建资源，下面是各种资源的创建示列，多数可以合并使用：\n 创建pod 加**\u0026ndash;restart=Never**参数创建出来的资源就是pod  kubectl run busybox --image=busybox --dry-run -o yaml --restart=Never 创建cronjob 加**\u0026ndash;schedule=**参数创建出来的资源就是cronjob  kubectl run busybox --image=busybox --dry-run -o yaml --schedule=\u0026#34;* * * * *\u0026#34; 创建job 加**\u0026ndash;restart=OnFailure**参数创建出来的资源就是jod  kubectl run busybox --image=busybox --dry-run -o yaml --restart=OnFailure 创建deployment 加**\u0026ndash;restart=Aalways**参数创建出来的资源就是pod,这是默认参数可以不指明  kubectl run busybox --image=busybox --dry-run -o yaml --restart=Aalways 创建使用ENV: 使用 \u0026ndash;env, 多个环境变量重复参数指定  kubectl run nginx --image=nginx --dry-run -o yaml --env=\u0026#34;dir=/mnt\u0026#34; --env=\u0026#34;port=80\u0026#34; 创建资源限制及请求  kubectl run nginx --image=nginx --dry-run -o yaml --limits=\u0026#34;cpu=100m,memory=256m\u0026#34; --requests=\u0026#34;cpu=100m,memory=100M\u0026#34;  创建指定label 留意对象资源和列表资源在命令行参数中的表示规律，重复使用参数，用逗号分隔  kubectl run nginx --image=nginx --dry-run -o yaml --labels=\u0026#34;app=nginx,owner=wangyijie,form=cmft\u0026#34; 指定多个启动参数 在最后以 \u0026ndash; 开头可以以空格分隔指定多个命令参数  kubectl run nginx --image=nginx --dry-run -o yaml --schedule=\u0026#34;* * * * *\u0026#34; --restart=OnFailure --labels=\u0026#34;job=who\u0026#34; -- bash echo 123 9.创建服务 使用\u0026ndash;expose参数会创建一个同名的服务, 更多服务选项可以是kubectl expose deployment\nkubectl run nginx --image=ngin --expose --port=80 遗憾是没用创建DeamonSet和StatefulSet的参数，建议用快速github搜索摸板或者在系统中获取，kube-system下有daemonset的部署   还有更关键的是在pod摸板中默写各种资源的属性配置\n"},{"id":116,"href":"/posts/kubernetes/kubelet%E5%88%9B%E5%BB%BA%E5%AE%B9%E5%99%A8%E7%9A%84%E6%AD%A5%E9%AA%A4/","title":"Kubelet创建容器的步骤","section":"Kubernetes","content":" Kubelet 通过 CRI 接口（gRPC）调用 dockershim，请求创建一个容器，CRI 即容器运行时接口（Container Runtime Interface），这一步中，Kubelet 可以视作一个简单的 CRI Client，而 dockershim 就是接收请求的 Server。目前 dockershim 的代码其实是内嵌在 Kubelet 中的，所以接收调用的凑巧就是 Kubelet 进程； dockershim 收到请求后，转化成 对应 Docker Daemon 的请求，发到 Docker Daemon 上请求创建一个容器。 Docker Daemon 早在 1.12 版本中就已经将针对容器的操作移到另一个守护进程——containerd 中了，因此 Docker Daemon 仍然不直接创建容器，而是要请求 containerd 创建一个容器； containerd 收到请求后，并不会自己直接去操作容器，而是创建一个叫做 containerd-shim 的进程，让 containerd-shim 去操作容器。这是因为容器进程需要一个父进程来做诸如收集状态，维持 stdin 等 fd 打开等工作。而假如这个父进程就是 containerd，那每次 containerd 挂掉或升级，整个宿主机上所有的容器都得退出了。而引入了 containerd-shim 就规避了这个问题（containerd 和 shim 并不是父子进程关系）； 创建容器有设置 namespaces 和 cgroups，挂载 root filesystem 等操作，而这些事该怎么做已经有了公开的规范了，那就是 OCI（Open Container Initiative，开放容器标准）。它的一个参考实现叫做 runC。于是，containerd-shim 在这一步需要调用 runC 这个命令行工具，来启动容器； runC 启动完容器后本身会直接退出，containerd-shim 则会成为容器进程的父进程，负责收集容器进程的状态，上报给 containerd，并在容器中 pid 为 1 的进程退出后接管容器中的子进程进行清理，确保不会出现僵尸进程。  "},{"id":117,"href":"/posts/kubernetes/kubernetes-api-%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/","title":"Kubernetes API 设计原则","section":"Kubernetes","content":"对于云计算系统，系统API实际上处于系统设计的统领地位。Kubernetes集群系统每支持一项新功能，引入一项新技术，一定会新引入对应的API对象，支持对该功能的管理操作。理解掌握的API，就好比抓住了K8s系统的牛鼻子。Kubernetes系统API的设计有以下几条原则：\n 所有API应该是声明式的。声明式的操作，相对于命令式操作，对于重复操作的效果是稳定的，这对于容易出现数据丢失或重复的分布式环境来说是很重要的。另外，声明式操作更容易被用户使用，可以使系统向用户隐藏实现的细节，同时也保留了系统未来持续优化的可能性。此外，声明式的API还隐含了所有的API对象都是名词性质的，例如Service、Volume这些API都是名词，这些名词描述了用户所期望得到的一个目标对象。 API对象是彼此互补而且可组合的。这实际上鼓励API对象尽量实现面向对象设计时的要求，即“高内聚，松耦合”，对业务相关的概念有一个合适的分解，提高分解出来的对象的可重用性。 高层API以操作意图为基础设计。如何能够设计好API，跟如何能用面向对象的方法设计好应用系统有相通的地方，高层设计一定是从业务出发，而不是过早的从技术实现出发。因此，针对Kubernetes的高层API设计，一定是以K8s的业务为基础出发，也就是以系统调度管理容器的操作意图为基础设计。 低层API根据高层API的控制需要设计。设计实现低层API的目的，是为了被高层API使用，考虑减少冗余、提高重用性的目的，低层API的设计也要以需求为基础，要尽量抵抗受技术实现影响的诱惑。 尽量避免简单封装，不要有在外部API无法显式知道的内部隐藏的机制。简单的封装，实际没有提供新的功能，反而增加了对所封装API的依赖性。内部隐藏的机制也是非常不利于系统维护的设计方式，例如StatefulSet和ReplicaSet，本来就是两种Pod集合，那么Kubernetes就用不同API对象来定义它们，而不会说只用同一个ReplicaSet，内部通过特殊的算法再来区分这个ReplicaSet是有状态的还是无状态。 API操作复杂度与对象数量成正比。这一条主要是从系统性能角度考虑，要保证整个系统随着系统规模的扩大，性能不会迅速变慢到无法使用，那么最低的限定就是API的操作复杂度不能超过O(N)，N是对象的数量，否则系统就不具备水平伸缩性了。 API对象状态不能依赖于网络连接状态。由于众所周知，在分布式环境下，网络连接断开是经常发生的事情，因此要保证API对象状态能应对网络的不稳定，API对象的状态就不能依赖于网络连接状态。 尽量避免让操作机制依赖于全局状态，因为在分布式系统中要保证全局状态的同步是非常困难的。  "},{"id":118,"href":"/posts/kubernetes/kubernetes-conformance-tests/","title":"Kubernetes Conformance Tests","section":"Kubernetes","content":"大概步骤\r#\r\r 获取镜像 ./sonobuoy images pull \u0026ndash;e2e-repo-config custom-repos.yaml -dry-run 参考下面的脚本通过gcr.azk8s.cn代理地址下载gcr镜像上传到私有仓库 执行任务会在kubenetes里面创建pod启动任务 ./sonobuoy run \u0026ndash;sonobuoy-image 172.20.8.7/library/sonobuoy:v0.17.2\n\u0026ndash;kube-conformance-image 172.20.8.7/library/conformance:v1.15.10 等运行剩一个pod，大概几个小时的时间，检查结果 ./sonobuoy status 通过之后收集数据 results=$(./sonobuoy retrieve) ./sonobuoy results $results  #get command sonobuoy docker run -d --rm --name=sonobuoy sonobuoy/sonobuoy:v0.16 sleep 120 docker cp sonobuoy:/sonobuoy ./ # 私有仓库 registry=172.20.8.7 getImage(){ image=$1 docker pull $image docker $image tag ${registry}/library/${image##*/} docker push ${registry}/library/${image##*/} } kubeVersion=v1.15.10 getImage gcr.azk8s.cn/heptio-images/sonobuoy-plugin-systemd-logs:latest getImage gcr.azk8s.cn/google-containers/conformance:$kubeVersion ./sonobuoy run --sonobuoy-image 172.20.8.7/library/sonobuoy:v0.16\\ --kube-conformance-image 172.20.8.7/library/conformance:v1.15.10\\ #--systemd-logs-image 172.20.8.7/library/sonobuoy-plugin-systemd-logs:latest # --systemd-logs-image was noticed unknown flag ds=$(kubectl get ds -n sonobuoy | grep sonobuoy-systemd-logs | awk '{print $1}') kubectl set image daemonset $ds systemd-logs=172.20.8.7/library/sonobuoy-plugin-systemd-logs:latest 观察\r#\r\rkubectl get po -n sonobuoy\n参考镜像列表\r#\r\rgcr.azk8s.cn/google-containers/conformance:v1.15.10 gcr.azk8s.cn/kubernetes-e2e-test-images/nonroot:1.0 gcr.azk8s.cn/heptio-images/sonobuoy-plugin-systemd-logs:latest gcr.azk8s.cn/kubernetes-e2e-test-images/no-snat-test:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/inclusterclient:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/agnhost:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/resource-consumer-controller:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/cuda-vector-add:2.0 gcr.azk8s.cn/kubernetes-e2e-test-images/volume/iscsi:2.0 gcr.azk8s.cn/kubernetes-e2e-test-images/webhook:1.15v1 gcr.azk8s.cn/kubernetes-e2e-test-images/liveness:1.1 gcr.azk8s.cn/kubernetes-e2e-test-images/audit-proxy:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/resource-consumer:1.5 gcr.azk8s.cn/kubernetes-e2e-test-images/metadata-concealment:1.2 gcr.azk8s.cn/kubernetes-e2e-test-images/crd-conversion-webhook:1.13rev2 gcr.azk8s.cn/kubernetes-e2e-test-images/netexec:1.1 gcr.azk8s.cn/kubernetes-e2e-test-images/sample-apiserver:1.10 gcr.azk8s.cn/kubernetes-e2e-test-images/echoserver:2.2 gcr.azk8s.cn/kubernetes-e2e-test-images/volume/rbd:1.0.1 gcr.azk8s.cn/kubernetes-e2e-test-images/apparmor-loader:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/volume/nfs:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/volume/gluster:1.0 gcr.azk8s.cn/google-samples/gb-frontend:v6 gcr.azk8s.cn/google-samples/gb-redisslave:v3 gcr.azk8s.cn/kubernetes-e2e-test-images/dnsutils:1.1 gcr.azk8s.cn/kubernetes-e2e-test-images/jessie-dnsutils:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/kitten:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/fakegitserver:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/hostexec:1.1 gcr.azk8s.cn/kubernetes-e2e-test-images/nettest:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/porter:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/iperf:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/nonewprivs:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/entrypoint-tester:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/logs-generator:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/cuda-vector-add:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/serve-hostname:1.1 gcr.azk8s.cn/kubernetes-e2e-test-images/nautilus:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/mounttest:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/no-snat-test-proxy:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/mounttest-user:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/redis:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/test-webserver:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/net:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/ipc-utils:1.0 gcr.azk8s.cn/kubernetes-e2e-test-images/port-forward-tester:1.0 detail https://sonobuoy.io/docs/v0.17.2/airgap/\r#\r\r"},{"id":119,"href":"/posts/kubernetes/kubernetes-etcd%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/","title":"Kubernetes Etcd数据管理","section":"Kubernetes","content":"一次使用helm安装spinnaker这个部署系统，对helm不熟悉，由于卡住超时了，随着又再次执行安装，我是在自己的电脑上弄了个10G内存的虚拟机安装的kubernetes,结果安装了两次spinnaker导致资源不足系统异常缓慢，kube-apiserver响应不过来不停的失败重启，kube-apiserver不能存活我就没办法管理pods了，所以想到去数据源etcd把spinnaker的容器信息先删掉，把集群恢复之后再重新安装，为了操作etcd我翻了些文章才找到方法，相关的资料比较少，所以自己也记录一下。 我是使用kubeadm工具安装的集群，要解除集群的资源占用要先把一些容器停掉，把kube-apiserver的编排文件从/etc/kubernetes/manifests/目录下先移出来，kubelet检查到会停止相应的pods,没有了kube-apiserver集群不会再创建新的pods,这时kubectl不可用了，使用docker命令把spinnaker项目的容器都删掉系统资源就能空闲出来。这时etcd还是正常的，用docker工具直接进入etcd。\n操作etcd有命令行工具etcdctl，有两个api版本互不兼容的，系统默认的v2版本，kubernetes集群使用的是v3版本，v2版本下是看不到v3版本的数据的，我也是找了些资料才了解这个情况。 使用环境变量定义api版本 export ETCDCTL_API=3 etcd有目录结构类似linux文件系统，获取所有key看一看： etcdctl get / --prefix --keys-only 一看就可以大概理解kubenetes的数据结构了，查询命名空间下所有部署的数据： etcdctl get /registry/deployments/default --prefix --keys-only 把想删除的删掉，列如： etcdctl del /registry/deployments/default/elevated-dragonfly-spinn-front50 删除deployments，pods这可以了，稍微减少一些资源，让kube-apiserver可以正常工作即可，其它资源还可以使用kubectl工具删除 删掉些资源后退出etcd把kube-apiserver的编排文件放回/etc/kubernetes/manifests目录，服务会再次启动，然后再清理重新部署。 ##总结： etcd组织的数据结构清晰，查找操作简便，从数据层面去维护集群也很容易，保护好数据就有一切\n"},{"id":120,"href":"/posts/kubernetes/kubernetes-pause-role/","title":"Kubernetes Pause Role","section":"Kubernetes","content":"相信熟悉kubernetes的朋友都知道，kubernetes启动 Pod 里定义的容器之前，kubelet 会先启动一个 infra 容器，并执行 /pause 让 infra 容器的主进程永远挂起。 这个容器存在的目的其实是维持住整个 Pod 的各种 namespace，真正的业务容器只要加入 infra 容器的 network 等 namespace 就能实现对应 namespace 的共享。而 infra 容器创造的这个共享环境则被抽象为 PodSandbox。每次 kubelet 在创建 Pod 时，就会先调用 CRI 的 RunPodSandbox 接口启动一个沙箱环境，再调用 CreateContainer 在沙箱中创建容器。 pause很小，这有时可以加快pod的启动速度\n"},{"id":121,"href":"/posts/kubernetes/kubernetes-%E7%BD%91%E7%BB%9C%E6%96%B9%E6%A1%88%E5%8F%8A-lvs%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/","title":"Kubernetes 网络方案及 Lvs实现原理","section":"Kubernetes","content":""},{"id":122,"href":"/posts/kubernetes/kubernetes-%E8%B5%84%E6%BA%90%E7%BC%96%E6%8E%92%E5%B8%AE%E5%8A%A9/","title":"Kubernetes 资源编排帮助","section":"Kubernetes","content":"我们在编写kubernetes资源清单的时候有很多细节不易记住，特别对于还不熟练的同学，寻找参考摸板是一件麻烦的事，下面介绍两种获取参考帮助的手段，足够大家无往不利\n kubectl get \u0026ndash;export kubectl get -o yaml \u0026ndash;export 我们编写清单可以在集群找一个现成的资源摸板,然后修改我们想要的信息在以此创建新的资源，这能解决大部分需要了， kubectl get -o yaml \u0026ndash;export 命令获得的资源内容就一个完美的摸板，-o yaml 用的比较多，\u0026ndash;export 关注的可能就比较少，它的作用是把资源在当前集群的一些个性化数据过滤掉，给你一个清爽的摸板，去感受一下吧！ kubectl explain 有时我们通过上面的方法能找到的摸板可能没有我们要的配置，这时需要去别处寻找参考，或者去查看api文档，其实都可以不用，kubectl explain 可以根据资源路径给对应资源的子对象，就是其可以包含的字段或对象，比如看一个我不知道configMap卷怎么写的栗子：  [root@Registry ~]# kubectl explain deployments.spec.template.spec.volumes.configMap RESOURCE: configMap \u0026lt;Object\u0026gt; DESCRIPTION: ConfigMap represents a configMap that should populate this volume Adapts a ConfigMap into a volume. FIELDS: defaultMode\t\u0026lt;integer\u0026gt; Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. items\t\u0026lt;[]Object\u0026gt; If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. name\t\u0026lt;string\u0026gt; Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names optional\t\u0026lt;boolean\u0026gt; Specify whether the ConfigMap or it's keys must be defined 这样我们就可以了解到configMap下有三个子对象，分别是name, items, defaultMode, 并且items, defaultMode不是必须的。在进一步看items这个对象，我们就可以写出配置了，类型是Object或Object列表说名还有子对象。\n volumes: - configMap: defaultMode: 420 name: NAME items: key: keyname path: group/my-username 挂载之后是什么形态可以亲自进入容器观摩一下，常用的做法是细写items, 默认是已key名做为文件名，里面存放值。 还有一点需要补充，学好英文，推荐一个学习网站：https://www.duolingo.com/\n"},{"id":123,"href":"/posts/kubernetes/kubernetes%E4%BC%98%E5%85%88%E7%BA%A7%E8%B0%83%E5%BA%A6/","title":"Kubernetes优先级调度","section":"Kubernetes","content":"从 v1.8 开始，kube-scheduler 支持定义 Pod 的优先级，从而保证高优先级的 Pod 优先调度。并从 v1.11 开始默认开启。 注：在 v1.8-v1.10 版本中的开启方法为\napiserver 配置: --feature-gates=PodPriority=true --runtime-config=scheduling.k8s.io/v1alpha1=true kube-scheduler 配置: --feature-gates=PodPriority=true 在指定 Pod 的优先级之前需要先定义一个 PriorityClass（非 namespace 资源），如\napiVersion: v1 kind: PriorityClass metadata: name: high-priority value: 1000000 globalDefault: false description: \u0026quot;This priority class should be used for XYZ service pods only.\u0026quot; 其中value 为 32 位整数的优先级，该值越大，优先级越高 globalDefault 用于未配置 PriorityClassName 的 Pod，整个集群中应该只有一个 PriorityClass 将其设置为 true 然后，在 PodSpec 中通过 PriorityClassName 设置 Pod 的优先级：\napiVersion: v1 kind: Pod metadata: name: nginx labels: env: test spec: containers: - name: nginx image: nginx imagePullPolicy: IfNotPresent priorityClassName: high-priority "},{"id":124,"href":"/posts/kubernetes/kubernetes%E7%9F%A5%E8%AF%86%E7%82%B9/","title":"Kubernetes知识点","section":"Kubernetes","content":"考cka需要整理kubernetes的知识，看了linux基金会的课程，感觉有点贵，赚钱不容易得到刀刃上，所以看下目录帮助熟悉学习目标即可\nKubernetes 基础课程 （LFS258)\nChapter 1. Course Introduction\r#\r\r Welcome 1.1. Before You Begin 1.2. Course Introduction 1.3. Course Objectives 1.4. Course Formatting 安排 1.5. Course Completion 1.6. Course Timing 1.7.a. Exercises-Lab Environment 1.7.b. Exercises-Labs 1.7.c. Exercises - Knowledge Check 1.8. Course Resources 1.9. Class Forum Guidelines 1.10. Course Support 1.11. Course Audience and Requirements 1.12. Software Environment 1.13. Which Distribution to Choose? 1.14. Red Hat Family 1.15. SUSE Family 1.16. Debian Family 1.17. New Distribution Similarities 1.18. AWS Free Tier 1.19. Meet Your Instructor: Tim Serewicz \u0026hellip; 1.20. A Word from Tim Serewicz 1.21. The Linux Foundation 1.22. The Linux Foundation Events 1.23. Training Venues 1.24. The Linux Foundation Training Offer\u0026hellip; 1.25. The Linux Foundation Certifications\u0026hellip; 1.26. Training/Certification Firewall 1.27. Open Source Guides for the Enterpri\u0026hellip; 1.28. Lab 1.1 - Configuring the System fo\u0026hellip; 1.29. Copyright\n Chapter 2. Basics of Kubernetes\r#\r\r 2.1. Basics of Kubernetes 2.2. Introduction 2.3. Learning Objectives 2.4. What Is Kubernetes? 2.5. Components of Kubernetes 2.6. Challenges 2.7. Other Solutions 2.8.a. The Borg Heritage 遗产 2.8.b. The Borg Heritage (Cont.) 2.9.a. Kubernetes Architecture 2.9.b. Kubernetes Architecture (Cont.) 2.10. Terminology 术语 2.11. Innovation 创新 2.12. User Community 2.13. Tools 2.14. The Cloud Native Computing Foundati\u0026hellip; 2.15. Resource Recommendations 2.16. Lab 2.1 - View Online Resources 2.17.a. Knowledge Check 2.1 2.17.b. Knowledge Check 2.2 2.17.c. Knowledge Check 2.3 2.17.d. Knowledge Check 2.4\n Chapter 3. Installation and Configuration\r#\r\r 3.1. Installation and Configuration 3.2. Introduction 3.3. Learning Objectives 3.4. Installation Tools 3.5. Installing kubectl 3.6. Using Google Kubernetes Engine (GKE)\u0026hellip; 3.7. Using Minikube 3.8. Installing with kubeadm 3.9. Installing a Pod Network 3.10. More Installation Tools 3.11. Installation Considerations 3.12. Main Deployment Configurations 3.13.a. Systemd Unit File for Kubernetes \u0026hellip; 3.13.b. Systemd Unit Files for Kubernetes\u0026hellip; 3.14. Using Hyperkube 3.15. Compiling from Source 3.16. Lab 3.1 - Install Kubernetes 3.17. Lab 3.2 - Grow the Cluster 3.18. Lab 3.3 - Finish Cluster Setup 3.19. Lab 3.4 - Deploy a Simple Applicati\u0026hellip; 3.20. Lab 3.5 - Access from Outside the C\u0026hellip; 3.21.a. Knowledge Check 3.1 3.21.b. Knowledge Check 3.2 3.21.c. Knowledge Check 3.3 3.21.d. Knowledge Check 3.4\n Chapter 4. Kubernetes Architecture\r#\r\r 4.1. Kubernetes Architecture 4.2. Introduction 4.3. Learning Objectives 4.4.a. Main Components 4.4.b. Main Components (Cont.) 4.5. Master Node 4.6. kube-apiserver 4.7. kube-scheduler 4.8. etcd Database 4.9. Other Agents 4.10. Worker Nodes 4.11. kubelet 4.12. Services 4.13. Controllers 4.14. Pods 4.15. Containers 4.16.a. Component Review 4.16.b. Component Review 4.17. Node 4.18. Single IP per Pod 4.19. Container to Outside Path 4.20. Networking Setup 4.21.a. CNI Network Configuration File 4.21.b. CNI Network Configuration File (C\u0026hellip; 4.22. Pod-to-Pod Communication 4.23. Mesos 4.24. Lab 4.1 - Working with CPU and Memo\u0026hellip; 4.25. Lab 4.2 - Resource Limits for a Nam\u0026hellip; 4.26. Lab 4.3 - More Complex Deployment 4.27.a. Knowledge Check 4.1 4.27.b. Knowledge Check 4.2 4.27.c. Knowledge Check 4.3 4.27.d. Knowledge Check 4.4 4.27.e. Knowledge Check 4.5\n Chapter 5. APIs and Access\r#\r\r 5.1. APIs and Access 5.2. Introduction 5.3. Learning Objectives 5.4. API Access 5.5. RESTful 5.6. Checking Access 5.7. Optimistic Concurrency 乐观并发 5.8. Using Annotations 5.9. Simple Pod 5.10. Manage API Resources with kubectl 5.11. Access from Outside the Cluster 5.12.a. ~/.kube/config 5.12.b. ~/.kube/config (Cont.) 5.13. Namespaces 5.14. Working with Namespaces 5.15. API Resources with kubectl 5.16. Additional Resource Methods 5.17. Swagger 5.18. API Maturity 5.19. Lab 5.1 - Configuring TLS Access 5.20. Lab 5.2 - Explore API Calls 5.21.a. Knowledge Check 5.1 5.21.b. Knowledge Check 5.2 5.21.c. Knowledge Check 5.3 5.21.d. Knowledge Check 5.4 5.21.e. Knowledge Check 5.5\n Chapter 6. API Objects\r#\r\r 6.1. API Objects 6.2. Introduction 6.3. Learning Objectives 6.4. Overview 6.5. v1 API Group 6.6. Discovering API Groups 6.7. Deploying an Application 6.8. DaemonSets 6.9. StatefulSet 6.10. Autoscaling 6.11. Jobs 6.12. RBAC 6.13. Lab 6.1 - RESTful API Access 6.14. Lab 6.2 - Using the Proxy 6.15. Lab 6.3 - Working with Jobs 6.16.a. Knowledge Check 6.1 6.16.b. Knowledge Check 6.2 6.16.c. Knowledge Check 6.3 6.16.d. Knowledge Check 6.4 6.16.e. Knowledge Check 6.5 6.16.f. Knowledge Check 6.6\n Chapter 7. Managing State with Deployments\r#\r\r 7.1. Managing State with Deployments 7.2. Introduction 7.3. Learning Objectives 7.4. Overview 7.5. Deployments 7.6.a. Object Relationship 7.6.b. Object Relationship 7.7. Deployment Details 7.8.a. Deployment Configuration Metadata 7.8.b. Deployment Configuration Metadata \u0026hellip; 7.9.a. Deployment Configuration Spec 7.9.b. Deployment Configuration Spec (Con\u0026hellip; 7.10.a. Deployment Configuration Pod Temp\u0026hellip; 7.10.b. Deployment Configuration Pod Temp\u0026hellip; 7.10.c. Deployment Configuration Pod Temp\u0026hellip; 7.11. Deployment Configuration Status 7.12. Scaling and Rolling Updates 7.13.a. Deployment Rollbacks 7.13.b. Deployment Rollbacks (Cont.) 7.14. Using DaemonSets 7.15.a. Labels 7.15.b. Labels (Cont.) 7.16. Lab 7.1 - Working with ReplicaSets 7.17. Lab 7.2 - Working with DaemonSets 7.18. Lab 7.3 - Rolling Updates and Rollb\u0026hellip; 7.19.a. Knowledge Check 7.1 7.19.b. Knowledge Check 7.2 7.19.c. Knowledge Check 7.3 7.19.d. Knowledge Check 7.4 7.19.e. Knowledge Check 7.5\n Chapter 8. Services\r#\r\r 8.1. Services 8.2. Introduction 8.3. Learning Objectives 8.4. Services Overview 8.5. Service Update Pattern 8.6.a. Accessing an Application with a Se\u0026hellip; 8.6.b. Accessing an Application with a Se\u0026hellip; 8.7. Service Types 8.8. Services Diagram 8.9. Local Proxy for Development 8.10. DNS 8.11.a. Verifying DNS Registration 8.11.b. Verifying DNS Registration (Cont\u0026hellip;. 8.12. Lab 8.1 - Deploy a New Service 8.13. Lab 8.2 - Configure a NodePort 8.14. Lab 8.3 - Use Labels to Manage Reso\u0026hellip; 8.15.a. Knowledge Check 8.1 8.15.b. Knowledge Check 8.2 8.15.c. Knowledge Check 8.3 8.15.d. Knowledge Check 8.4\n Chapter 9. Volumes and Data\r#\r\r 9.1. Volumes and Data 9.2. Introduction 9.3. Learning Objectives 9.4. Volumes Overview 9.5.a. Introducing Volumes 9.5.b. Introducing Volumes (Cont.) 9.6. Volume Spec 9.7. Volume Types 9.8. Shared Volume Example 9.9. Persistent Volumes and Claims 9.10. Persistent Volume 9.11.a. Persistent Volume Claim 9.11.b. Persistent Volume Claim (Cont.) 9.12. Dynamic Provisioning 9.13.a. Secrets 9.13.b. Secrets (Cont.) 9.14. Using Secrets via Environment Varia\u0026hellip; 9.15. Mounting Secrets as Volumes 9.16.a. Portable Data with ConfigMaps 9.16.b. Portable Data with ConfigMaps (Co\u0026hellip; 9.17. Using ConfigMaps 9.18. Lab 9.1 - Create a ConfigMap 9.19. Lab 9.2 - Creating a Persistent NFS\u0026hellip; 9.20. Lab 9.3 - Creating a Persistent Vol\u0026hellip; 9.21. Lab 9.4 - Use a ResourceQuota to Li\u0026hellip; 9.22.a. Knowledge Check 9.1 9.22.b. Knowledge Check 9.2 9.22.c. Knowledge Check 9.3 9.22.d. Knowledge Check 9.4 9.22.e. Knowledge Check 9.5\n Chapter 10. Ingress\r#\r\r 10.1. Ingress 10.2. Introduction 10.3. Learning Objectives 10.4. Ingress Overview 10.5. Ingress Controller 10.6. nginx 10.7. Google Load Balancer Controller (GL\u0026hellip; 10.8. Ingress API Resources 10.9. Deploying the Ingress Controller 10.10. Creating an Ingress Rule 10.11. Multiple Rules 10.12. Lab 10.1 - Advanced Service Exposu\u0026hellip; 10.13.a. Knowledge Check 10.1 10.13.b. Knowledge Check 10.2 10.13.c. Knowledge Check 10.3\n Chapter 11. Scheduling\r#\r\r 11.1. Scheduling 11.2. Introduction 11.3. Learning Objectives 11.4. kube-scheduler 11.5. Predicates 11.6. Priorities 11.7.a. Scheduling Policies 11.7.b. Scheduling Policies (Cont.) 11.8. Pod Specification 11.9. Specifying the Node Label 11.10. Pod Affinity Rules 11.11. podAffinity Example 11.12. podAntiAffinity Example 11.13. Node Affinity Rules 11.14. Node Affinity Example 11.15. Taints 11.16. Tolerations 11.17. Custom Scheduler 11.18. Lab 11.1 - Assign Pods Using Label\u0026hellip; 11.19. Lab 11.2 - Using Taints to Control\u0026hellip; 11.20.a. Knowledge Check 11.1 11.20.b. Knowledge Check 11.2 11.20.c. Knowledge Check 11.3 11.20.d. Knowledge Check 11.4\n Chapter 12. Logging and Troubleshooting\r#\r\r 12.1. Logging and Troubleshooting 12.2. Introduction 12.3. Learning Objectives 12.4. Overview 12.5. Basic Troubleshooting Steps 12.6. Cluster Start Sequence 12.7. Monitoring 12.8. Logging Tools 12.9. More Resources 12.10. Lab 12.1 - Review Log File Locatio\u0026hellip; 12.11. Lab 12.2 - Viewing Logs Output 12.12. Lab 12.3 - Adding Tools for Monito\u0026hellip; 12.13.a. Knowledge Check 12.1 12.13.b. Knowledge Check 12.2\n Chapter 13. Custom Resource Definitions\r#\r\r 13.1. Custom Resource Definitions 13.2. Introduction 13.3. Learning Objectives 13.4. Custom Resources 13.5. Custom Resource Definitions 13.6. Configuration Example 13.7. New Object Configuration 13.8. Optional Hooks 13.9. Understanding Aggregated APIs (AA) 13.10. Lab 13.1 - Create a Custom Resourc\u0026hellip; 13.11.a. Knowledge Check 13.1 13.11.b. Knowledge Check 13.2 13.11.c. Knowledge Check 13.3\n Chapter 14. Kubernetes Federations\r#\r\r 14.1. Kubernetes Federations 14.2. Introduction 14.3. Learning Objectives 14.4. Cluster Federation 14.5. Version 1 Federated Control Plane 14.6.a. Version 2 Federated Control Plane\u0026hellip; 14.6.b. Version 2 Federated Control Plane\u0026hellip; 14.7. Switching between Clusters 14.8.a. Building a Federation with kubefe\u0026hellip; 14.8.b. Building a Federation with kubefe\u0026hellip; 14.9. Using Federated Resources 14.10. Federation API Resources 14.11. Balancing ReplicaSets 14.12.a. Knowledge Check 14.1 14.12.b. Knowledge Check 14.2 14.12.c. Knowledge Check 14.3\n Chapter 15. Helm\r#\r\r 15.1. Helm 15.2. Introduction 15.3. Learning Objectives 15.4. Deploying Complex Applications 15.5. Tiller and Helm Client 15.6. Chart Contents 15.7. Templates 15.8. Initializing Helm 15.9. Chart Repositories 15.10.a. Deploying a Chart 15.10.b. Deploying a Chart (Cont.) 15.11. Lab 15.1 - Working with Helm and C\u0026hellip; 15.12.a. Knowledge Check 15.1 15.12.b. Knowledge Check 15.2 15.12.c. Knowledge Check 15.3 15.12.d. Knowledge Check 15.4\n ##Chapter 16. Security\n 16.1. Security 16.2. Introduction 16.3. Learning Objectives 16.4. Overview 16.5.a. Accessing the API 16.5.b. Accessing the API (Cont.) 16.6. Authentication 16.7. Authorization 16.8. ABAC 16.9. RBAC 16.10. RBAC Process Overview 16.11. Admission Controller 16.12. Security Contexts 16.13.a. Pod Security Policies 16.13.b. Pod Security Policies (Cont.) 16.14. Network Security Policies 16.15.a. Network Security Policy Example 16.15.b. Network Security Policy Example \u0026hellip; 16.16.a. Default Policy Example 16.16.b. Default Policy Example (Cont.) 16.17. Lab 16.1 - Working with TLS 16.18. Lab 16.2 - Authentication and Auth\u0026hellip; 16.19. Lab 16.3 - Admission Controllers 16.20.a. Knowledge Check 16.1 16.20.b. Knowledge Check 16.2 16.20.c. Knowledge Check 16.3 Course Completion\n "},{"id":125,"href":"/posts/kubernetes/kubernetes%E8%AF%81%E4%B9%A6%E7%BB%AD%E6%9C%9F/","title":"Kubernetes证书续期","section":"Kubernetes","content":"kubeadm 默认证书为一年，一年过期后，会导致api service不可用，使用过程中会出现：x509: certificate has expired or is not yet valid.\n方案一 通过修改kubeadm 调整证书过期时间\n一、使用kubadm 更新证书\r#\r\r1. 查看证书有效期\r#\r\rkubeadm alpha certs check-expiration 2. 重新签发证书\r#\r\rkubeadm alpha certs renew admin.conf kubeadm alpha certs renew scheduler.conf kubeadm alpha certs renew controller-manager.conf 3. 重启控制平面使生效\r#\r\r重启kubelet会自动重新创建核心组件\nsystemctl restart kubelet 4. 验证\r#\r\rkubeadm alpha certs check-expiration\n二、创建长期有效期证书\r#\r\r自己创建这四个文件需要的证书，替换四个文件使用的内嵌证书。我们自己创建的证书的有效期为50年，不再有过期的风险。步骤如下：\n生成证书：\r#\r\rcd /etc/kubernetes mkdir cert cd cert/ cat \u0026gt; ca-config.json \u0026lt;\u0026lt; EOF { \u0026quot;signing\u0026quot;: { \u0026quot;default\u0026quot;: { \u0026quot;expiry\u0026quot;: \u0026quot;438000h\u0026quot; }, \u0026quot;profiles\u0026quot;: { \u0026quot;kubernetes\u0026quot;: { \u0026quot;usages\u0026quot;: [ \u0026quot;signing\u0026quot;, \u0026quot;key encipherment\u0026quot;, \u0026quot;server auth\u0026quot;, \u0026quot;client auth\u0026quot; ], \u0026quot;expiry\u0026quot;: \u0026quot;438000h\u0026quot; } } } } EOF cat \u0026gt; admin-csr.json \u0026lt;\u0026lt; EOF { \u0026quot;CN\u0026quot;: \u0026quot;kubernetes-admin\u0026quot;, \u0026quot;key\u0026quot;: { \u0026quot;algo\u0026quot;: \u0026quot;rsa\u0026quot;, \u0026quot;size\u0026quot;: 2048 }, \u0026quot;names\u0026quot;: [ { \u0026quot;C\u0026quot;: \u0026quot;CN\u0026quot;, \u0026quot;ST\u0026quot;: \u0026quot;Guangdong\u0026quot;, \u0026quot;L\u0026quot;: \u0026quot;Shenzhen\u0026quot;, \u0026quot;O\u0026quot;: \u0026quot;system:masters\u0026quot;, \u0026quot;OU\u0026quot;: \u0026quot;Wise2C\u0026quot; } ] } EOF cat \u0026gt; controller-manager-csr.json \u0026lt;\u0026lt; EOF { \u0026quot;CN\u0026quot;: \u0026quot;system:kube-controller-manager\u0026quot;, \u0026quot;key\u0026quot;: { \u0026quot;algo\u0026quot;: \u0026quot;rsa\u0026quot;, \u0026quot;size\u0026quot;: 2048 } } EOF cat \u0026gt; scheduler-csr.json \u0026lt;\u0026lt; EOF { \u0026quot;CN\u0026quot;: \u0026quot;system:scheduler\u0026quot;, \u0026quot;key\u0026quot;: { \u0026quot;algo\u0026quot;: \u0026quot;rsa\u0026quot;, \u0026quot;size\u0026quot;: 2048 } } EOF 生成admin证书\r#\r\rcfssl gencert -ca=/etc/kubernetes/pki/ca.crt -ca-key=/etc/kubernetes/pki/ca.key -config=ca-config.json -profile=kubernetes admin-csr.json | cfssljson -bare admin 生成controller-manager证书\r#\r\rcfssl gencert -ca=/etc/kubernetes/pki/ca.crt -ca-key=/etc/kubernetes/pki/ca.key -config=ca-config.json -profile=kubernetes controller-manager-csr.json | cfssljson -bare controller-manager 生成scheduler证书\r#\r\rcfssl gencert -ca=/etc/kubernetes/pki/ca.crt -ca-key=/etc/kubernetes/pki/ca.key -config=ca-config.json -profile=kubernetes scheduler-csr.json | cfssljson -bare scheduler 放置到正确的位置\r#\r\rcp *.pem /etc/kubernetes/pki/ 替换内嵌证书为刚刚生成的证书，可以用如下脚本：\r#\r\r#!/bin/bash cd /etc/kubernetes/ sed -i.bak 's#client-certificate-data:.*$#client-certificate: /etc/kubernetes/pki/admin.pem#g' admin.conf sed -i 's#client-key-data:.*$#client-key: /etc/kubernetes/pki/admin-key.pem#g' admin.conf sed -i.bak 's#client-certificate-data:.*$#client-certificate: /etc/kubernetes/pki/controller-manager.pem#g' controller-manager.conf sed -i 's#client-key-data:.*$#client-key: /etc/kubernetes/pki/controller-manager-key.pem#g' controller-manager.conf 由于schedule的证书文件没有挂载到pod内，所以我们还需要手动修改#/etc/kubernetes/manifests文件夹内kube-scheduler.yaml文件，添加挂载主机目录的#volume\r#\r\rsed -i.bak 's#client-certificate-data:.*$#client-certificate: /etc/kubernetes/pki/scheduler.pem#g' scheduler.conf sed -i 's#client-key-data:.*$#client-key: /etc/kubernetes/pki/scheduler-key.pem#g' scheduler.conf "},{"id":126,"href":"/posts/kubernetes/metrics-server-%E9%83%A8%E7%BD%B2/","title":"Metrics Server 部署","section":"Kubernetes","content":"heapster已经不在维护，转由metrics-server 替代，没安装metrics-server pod命令和自动调度不能正常工作 项目地址：https://github.com/kubernetes-incubator/metrics-server 部署后可能不能正常收集数据，尝试添加下面的启动参数，kubelet-insecure-tls用于kubelet使用证书不满足认证添加，kubelet-preferred-address-types指名访问kubelet的地址类型，分别有：InternalIP,ExternalIP,Hostname\n- /metrics-server - --v=2 - --kubelet-insecure-tls - --kubelet-preferred-address-types=InternalIP "},{"id":127,"href":"/posts/kubernetes/skiffold/","title":"Skiffold","section":"Kubernetes","content":"调试可用的配置，花了不少时间踩坑，拿走不谢！\r#\r\rapiVersion: skaffold/v1beta8 kind: Config - name: profile-prod # a unique profile name. patches: activation: - env: ENV=production kubeContext: minikube command: deploy - env: ENV=develop kubeContext: minikube command: dev build: artifacts: - image: axd-register jibMaven: module: axd-register args: - -DskipTests - image: axd-gateway jibMaven: module: axd-gateway args: - -DskipTests - image: axd-activity-provider jibMaven: module: axd-gateway args: - -DskipTests - image: axd-auth-provider jibMaven: module: axd-auth-provider args: - -DskipTests - image: axd-basic-provider jibMaven: module: axd-basic-provider args: - -DskipTests - image: axd-book-provider jibMaven: module: axd-book-provider args: - -DskipTests - image: axd-manager-provider jibMaven: module: axd-manager-provider args: - -DskipTests - image: axd-merchant-provider jibMaven: module: axd-merchant-provider args: - -DskipTests - image: axd-mq-provider jibMaven: module: axd-mq-provider args: - -DskipTests - image: axd-order-provider jibMaven: module: axd-order-provider args: - -DskipTests - image: axd-push-provider jibMaven: module: axd-push-provider args: - -DskipTests - image: axd-user-provider jibMaven: module: axd-user-provider args: - -DskipTests # optional profile to run the jib build on Google Cloud Build deploy: kubectl: manifests: - axd-register/k8s.yml - axd-gateway/k8s.yml - axd-gateway-rms/k8s.yml - axd-activity-provider/k8s.yml - axd-auth-provider/k8s.yml - axd-basic-provider/k8s.yml - axd-book-provider/k8s.yml - axd-manager-provider/k8s.yml - axd-merchant-provider/k8s.yml - axd-mq-provider/k8s.yml - axd-order-provider/k8s.yml - axd-push-provider/k8s.yml - axd-user-provider/k8s.yml "},{"id":128,"href":"/posts/kubernetes/ubuntu18-04%E5%AE%89%E8%A3%85minikube/","title":"Ubuntu18 04安装minikube","section":"Kubernetes","content":" 使用kvm2 ,检查命令看到关键字即可： egrep --color 'vmx|svm' /proc/cpuinfo 安装kvm依赖：  apt install libvirt-clients libvirt-daemon-system qemu-kvm systemctl enable libvirtd.service systemctl start libvirtd.service curl -LO https://storage.googleapis.com/minikube/releases/latest/docker-machine-driver-kvm2 install docker-machine-driver-kvm2 /usr/local/bin/ 下载minikube, google的存储，下载失败多尝试几下成功后速度很快：  curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 \u0026amp;\u0026amp; chmod +x minikube cp minikube /usr/local/bin \u0026amp;\u0026amp; rm minikub 设置minikube使用的虚拟化环境， 启动miniKube环境：  minikube start --vm-driver kvm2 "},{"id":129,"href":"/posts/kubernetes/upgrade-kubernetes-to-1-19-4/","title":"Upgrade Kubernetes to 1 19 4","section":"Kubernetes","content":"install upgrade tool kubeadm\r#\r\rapt install -y kubeadm kubeadm config images list k8s.gcr.io/kube-apiserver:v1.19.4 k8s.gcr.io/kube-controller-manager:v1.19.4 k8s.gcr.io/kube-scheduler:v1.19.4 k8s.gcr.io/kube-proxy:v1.19.4 k8s.gcr.io/pause:3.2 k8s.gcr.io/etcd:3.4.13-0 k8s.gcr.io/coredns:1.7.0 transfer gcr images to docker hub\r#\r\ropen https://katacoda.com/courses/ubuntu/playground\ngo get github.com/xilu0/transfer for im in `kubeadm config images list`;do transfer --user=heishui --password=\u0026quot;$repopass\u0026quot; --image=$im;done upgrade kubernetes cluster\r#\r\rkubeadm upgrade plan kubeadm upgrade apply v1.19.4 upgrade components\r#\r\rapt install -y kubectl kubelet "},{"id":130,"href":"/posts/kubernetes/yaml%E8%AF%AD%E6%B3%95/","title":"Yaml语法","section":"Kubernetes","content":"语法\r#\r\r除某些控制字符外，YAML语言接受整个Unicode字符集。所有可接受的字符都可以在YAML文档中使用。YAML文档可以用UTF-8，UTF-16和UTF-32编码。（虽然UTF-32不是强制性的，但如果解析器具有JSON兼容性，则必须使用它。）\n 空格 缩进用于表示结构; 但是，绝不允许制表符作为缩进。 注释以井号（#）开头，可以从一行开始，一直持续到行尾。必须通过空格字符将注释与其他标记分开。[13]如果＃字符出现在字符串中，则它们是数字符号（#）文字。 列表成员由前导连字符（-）表示，每行一个成员，或用方括号（[ ]）括起，并用逗号 空格（, ）分隔。 关联数组使用冒号 空格（: ）以表格key：value表示，每行一个或用花括号（{ }）括起来并用逗号 空格（, ）分隔。  关联数组键可以以问号（?）为前缀，以允许明确地表示自由多字键。   字符串（标量）通常不加引号，但可以用双引号（\u0026quot;）或单引号（'）括起来。  在双引号内，特殊字符可以用反斜杠（）开头的C风格转义序列表示。根据文档，支持的唯一八进制转义是。\\``\\0   块标量用缩进分隔，并带有可选修饰符以保留（|）或fold（\u0026gt;）换行符。 单个流中的多个文档由三个连字符（---）分隔。  三个句点（...）可选地结束流中的文档。   重复节点最初用＆符号（\u0026amp;）表示，然后用星号（*）引用。 节点可以使用感叹号（!!）后跟一个字符串来标记类型或标记，该字符串可以扩展为URI。 流中的YAML文档可以在“指令”之后，该指令由百分号（%）后跟名称和空格分隔的参数组成。YAML 1.1中定义了两个指令：  ％YAML指令用于标识给定文档中的YAML版本。 ％TAG指令用作URI前缀的快捷方式。然后可以在节点类型标签中使用这些快捷方式。    YAML要求用作列表分隔符的冒号和逗号后跟空格，以便通常可以表示包含嵌入标点符号（例如5,280或http://www.jianshu.com）的标量值，而无需用引号括起来。\nYAML中保留了两个额外的sigil字符，以便将来标准化：at符号（@）和重音符号（```）。\n"},{"id":131,"href":"/posts/kubernetes/%E5%9B%BD%E5%86%85cka%E8%80%83%E8%AF%95%E6%80%BB%E7%BB%93/","title":"国内 Cka考试总结","section":"Kubernetes","content":"这里没用透露考题，签有保密协议的，君子慎独，不欺暗室 深圳的考点在八卦岭地铁站附近的八卦二路616号四楼，试题是中文，使用考试中心的电脑考试，那边的电脑不能上google,我用google登录linux基金会的网站还遇到了麻烦，考官很开明，只要不违背考试原则都可以 在一个web终端考试，只有一个终端，复制进出没用影响，最好熟悉下tmux这个终端管理工具，我就得益于它快速切换终端使用explain查看接口文档 感觉试题难度一般，但时间有点紧，有文档有不敢去翻，翻翻时间过去了，所以要熟悉命令，命令是最快的，可以帮助节省时间解决难题，多数时候个把难题就决定着过不过，还有就是要熟悉常见资源熟悉的默写，我在这里吃了大亏，平时惯于复制粘贴，关键石刻心里没底默写不出现，找参考复制浪费了时间，要查文档最好用搜索，我试过记住文档的知识布局，结果还是不易快速找到，一些资源参考github仓库搜索效率比官方文档还高，主要是快 我还不知道这次又没用通过，三小时做下来还有点累，心累，做的我都怕了，考完后再来一遍也没用把握通过\n"},{"id":132,"href":"/posts/kubernetes/%E5%9F%BA%E4%BA%8Ekubernetes-ingress-%E8%93%9D%E7%BB%BF%E5%92%8C%E9%87%91%E4%B8%9D%E9%9B%80%E9%83%A8%E7%BD%B2/","title":"基于kubernetes Ingress 蓝绿和金丝雀部署","section":"Kubernetes","content":"一个ingress host可以配置多个后端服务,通过添加删除服务实现蓝绿部署，将不同版本的服务入口一起配上，通过使用权重注解可以实现流量分配，权重50的含义是将流量的百分之 50 引入到新服务的 pod 里面\ningress.aliyun.weight/new-nginx: \u0026quot;50\u0026quot;  "},{"id":133,"href":"/posts/kubernetes/%E5%9F%BA%E4%BA%8Ekubernetes-service%E5%AE%9E%E7%8E%B0%E9%87%91%E4%B8%9D%E9%9B%80%E8%93%9D%E7%BB%BF%E5%8F%91%E5%B8%83/","title":"基于kubernetes Service实现金丝雀，蓝绿发布","section":"Kubernetes","content":"服务匹配部署是在template下的labels,选择一个labels即可，一个服务可以对应多个部署，部署的副本越多分的流量比例越大哦，以此来实现金丝雀发布，同理也可以做蓝绿部署，就是在部署的template labels上交换添加移除标签的事\napiVersion: extensions/v1beta1 kind: Deployment metadata: labels: run: old-nginx name: old-nginx spec: replicas: 1 selector: matchLabels: run: old-nginx template: metadata: labels: run: old-nginx app: nginx spec: containers: - image: registry.cn-hangzhou.aliyuncs.com/xianlu/old-nginx imagePullPolicy: Always name: old-nginx ports: - containerPort: 80 protocol: TCP restartPolicy: Always\r#\r\rapiVersion: extensions/v1beta1 kind: Deployment metadata: labels: run: new-nginx name: new-nginx spec: replicas: 1 selector: matchLabels: run: new-nginx template: metadata: labels: run: new-nginx app: nginx spec: containers: - image: registry.cn-hangzhou.aliyuncs.com/xianlu/new-nginx imagePullPolicy: Always name: new-nginx ports: - containerPort: 80 protocol: TCP restartPolicy: Always\r#\r\rapiVersion: v1 kind: Service metadata: labels: run: nginx name: nginx spec: ports:\n port: 80 protocol: TCP targetPort: 80 selector: app: nginx sessionAffinity: None  "},{"id":134,"href":"/posts/kubernetes/%E5%AE%B9%E5%99%A8%E7%9A%84%E5%8E%9F%E7%90%86/","title":"容器的原理","section":"Kubernetes","content":"现在容器运行时已经很多，有些原理差别大了，以最熟悉的dcoker为列，特殊的特别了解\n容器的组成\r#\r\rcontrol-group + namespace + image\nnamespace 的种类\r#\r\r mount, 2. uts, 3. pid, 4. network, 5. user, 6. ipc, 7. cgroup\n  cgroup类型:\r#\r\r两种驱动：systemd cgroup driver, cgroupfs cgroup driver cgroup类型: cpu cpuset cpuacct, memory, device, freezer, blkio, pid, net_cls, net_ prio, hugetlb, perf-event, rdma\nimage 原理\r#\r\r分层文件系统或联合文件系统，有mergedir, workdir, upper层，lower层的概念， mergedir：整合lower层和upper层显示一个完整的文件系统视图 upper: 容器读写层 workdir: 写入会保存到upper层 lower：镜像层，不会改变\n知名的运行时\r#\r\rdocker, RTK, firecracker, kata-containers / runtime, google / gvisor, podman\n"},{"id":135,"href":"/posts/kubernetes/%E9%80%9A%E8%BF%87hub-docker%E5%8A%A0git%E8%8E%B7%E5%8F%96kubernetes%E9%95%9C%E5%83%8F/","title":"通过hub Docker加git获取kubernetes镜像","section":"Kubernetes","content":"使用工具kubeadm安装kubernetes集群是需要的镜像默认放在google容器仓库中，国内不便直接下载，这里记录通过hub.docker加git获取kubernetes镜像： 1.登陆注册dockerID和github账户 2.dockerhub和github上的公开仓库创建都是没有限制的，在github创建一个仓库，里面放放入自己Dockerfile，列入：\nfrom gcr.io/google_containers/kube-scheduler-amd64:v1.9.2 label maintainer=\u0026quot;785471184@qq.com\u0026quot;  这次我是使用应该仓库构建多个镜像，github上用目录分开存放，dockerhub上用tag来区分不同的仓库，如果不闲玛法可以一个镜像创建一个仓库。 dockerhub有普通仓库和自带构建仓库，普仓库我们可以登录后把本地镜像push上去，自动构建仓库支持对接github和bitbucket版本控制系统自动化构建，我要用github仓库自动构建，那就创建自动构建仓库，跟图： 不要点下面那个很大的创建仓库图标，那里只是创建普通仓库的入口，从那里开始不能配置自动构建的，我也被坑一阵，留意！ 这里有一点值得提醒，如果你的仓库是在组织下而不是在个人名下，那dockerhub默认是不能访问组织仓库，这时候需要去到github上删除组织仓库的第三方访问限制： 选择仓库创建： 默认是在仓库的根目录检查Dockerfile文件，我这里是要用一个仓库构建多个镜像，所有创建了子目录，把Dockerfile放在子目录里面，指定Dockerfile位置，中间有个激活自动构建的单选框，可以选择也可以不选需要的时候自己来点一下触发按钮，记得保存： 触发构建之后可以去构建详细那里查看构建结果，如果失败了点击错误可以看到日志。 构建成功的可以就可以在tags那里看到标签，不想保留的镜像可以删除。 最后一次构建成功的Dockerfile内容还会被提取到Dockerfile栏目。 在仓库信息里面给些备注可以方便其他寻找镜像的人使用。 ok！\n"},{"id":136,"href":"/posts/literature/dwight-d-eisenhowerfarewell-address/","title":"Dwight D Eisenhower： Farewell Address","section":"文学","content":"Good evening, my fellow Americans.\nFirst, I should like to express my gratitude to the radio and television networks for the opportunities they have given me over the years to bring reports and messages to our nation. My special thanks go to them for the opportunity of addressing you this evening.\nThree days from now, after half century in the service of our country, I shall lay down the responsibilities of office as, in traditional and solemn ceremony, the authority of the Presidency is vested in my successor. This evening, I come to you with a message of leave-taking and farewell, and to share a few final thoughts with you, my countrymen.\nLike every other \u0026ndash; Like every other citizen, I wish the new President, and all who will labor with him, Godspeed. I pray that the coming years will be blessed with peace and prosperity for all.\nOur people expect their President and the Congress to find essential agreement on issues of great moment, the wise resolution of which will better shape the future of the nation. My own relations with the Congress, which began on a remote and tenuous basis when, long ago, a member of the Senate appointed me to West Point, have since ranged to the intimate during the war and immediate post-war period, and finally to the mutually interdependent during these past eight years. In this final relationship, the Congress and the Administration have, on most vital issues, cooperated well, to serve the nation good, rather than mere partisanship, and so have assured that the business of the nation should go forward. So, my official relationship with the Congress ends in a feeling \u0026ndash; on my part \u0026ndash; of gratitude that we have been able to do so much together.\nWe now stand ten years past the midpoint of a century that has witnessed four major wars among great nations. Three of these involved our own country. Despite these holocausts, America is today the strongest, the most influential, and most productive nation in the world. Understandably proud of this pre-eminence, we yet realize that America\u0026rsquo;s leadership and prestige depend, not merely upon our unmatched material progress, riches, and military strength, but on how we use our power in the interests of world peace and human betterment.\nThroughout America\u0026rsquo;s adventure in free government, our basic purposes have been to keep the peace, to foster progress in human achievement, and to enhance liberty, dignity, and integrity among peoples and among nations. To strive for less would be unworthy of a free and religious people. Any failure traceable to arrogance, or our lack of comprehension, or readiness to sacrifice would inflict upon us grievous hurt, both at home and abroad.\nProgress toward these noble goals is persistently threatened by the conflict now engulfing the world. It commands our whole attention, absorbs our very beings. We face a hostile ideology global in scope, atheistic in character, ruthless in purpose, and insiduous [insidious] in method. Unhappily, the danger it poses promises to be of indefinite duration. To meet it successfully, there is called for, not so much the emotional and transitory sacrifices of crisis, but rather those which enable us to carry forward steadily, surely, and without complaint the burdens of a prolonged and complex struggle with liberty the stake. Only thus shall we remain, despite every provocation, on our charted course toward permanent peace and human betterment.\nCrises there will continue to be. In meeting them, whether foreign or domestic, great or small, there is a recurring temptation to feel that some spectacular and costly action could become the miraculous solution to all current difficulties. A huge increase in newer elements of our defenses; development of unrealistic programs to cure every ill in agriculture; a dramatic expansion in basic and applied research \u0026ndash; these and many other possibilities, each possibly promising in itself, may be suggested as the only way to the road we wish to travel.\nBut each proposal must be weighed in the light of a broader consideration: the need to maintain balance in and among national programs, balance between the private and the public economy, balance between the cost and hoped for advantages, balance between the clearly necessary and the comfortably desirable, balance between our essential requirements as a nation and the duties imposed by the nation upon the individual, balance between actions of the moment and the national welfare of the future. Good judgment seeks balance and progress. Lack of it eventually finds imbalance and frustration. The record of many decades stands as proof that our people and their Government have, in the main, understood these truths and have responded to them well, in the face of threat and stress.\nBut threats, new in kind or degree, constantly arise. Of these, I mention two only.\nA vital element in keeping the peace is our military establishment. Our arms must be mighty, ready for instant action, so that no potential aggressor may be tempted to risk his own destruction. Our military organization today bears little relation to that known of any of my predecessors in peacetime, or, indeed, by the fighting men of World War II or Korea.\nUntil the latest of our world conflicts, the United States had no armaments industry. American makers of plowshares could, with time and as required, make swords as well. But we can no longer risk emergency improvisation of national defense. We have been compelled to create a permanent armaments industry of vast proportions. Added to this, three and a half million men and women are directly engaged in the defense establishment. We annually spend on military security alone more than the net income of all United States cooperations \u0026ndash; corporations.\nNow this conjunction of an immense military establishment and a large arms industry is new in the American experience. The total influence \u0026ndash; economic, political, even spiritual \u0026ndash; is felt in every city, every Statehouse, every office of the Federal government. We recognize the imperative need for this development. Yet, we must not fail to comprehend its grave implications. Our toil, resources, and livelihood are all involved. So is the very structure of our society.\nIn the councils of government, we must guard against the acquisition of unwarranted influence, whether sought or unsought, by the military-industrial complex. The potential for the disastrous rise of misplaced power exists and will persist. We must never let the weight of this combination endanger our liberties or democratic processes. We should take nothing for granted. Only an alert and knowledgeable citizenry can compel the proper meshing of the huge industrial and military machinery of defense with our peaceful methods and goals, so that security and liberty may prosper together.\nAkin to, and largely responsible for the sweeping changes in our industrial-military posture, has been the technological revolution during recent decades. In this revolution, research has become central; it also becomes more formalized, complex, and costly. A steadily increasing share is conducted for, by, or at the direction of, the Federal government.\nToday, the solitary inventor, tinkering in his shop, has been overshadowed by task forces of scientists in laboratories and testing fields. In the same fashion, the free university, historically the fountainhead of free ideas and scientific discovery, has experienced a revolution in the conduct of research. Partly because of the huge costs involved, a government contract becomes virtually a substitute for intellectual curiosity. For every old blackboard there are now hundreds of new electronic computers. The prospect of domination of the nation\u0026rsquo;s scholars by Federal employment, project allocations, and the power of money is ever present \u0026ndash; and is gravely to be regarded.\nYet, in holding scientific research and discovery in respect, as we should, we must also be alert to the equal and opposite danger that public policy could itself become the captive of a scientific-technological elite.\nIt is the task of statesmanship to mold, to balance, and to integrate these and other forces, new and old, within the principles of our democratic system \u0026ndash; ever aiming toward the supreme goals of our free society.\nAnother factor in maintaining balance involves the element of time. As we peer into society\u0026rsquo;s future, we \u0026ndash; you and I, and our government \u0026ndash; must avoid the impulse to live only for today, plundering for our own ease and convenience the precious resources of tomorrow. We cannot mortgage the material assets of our grandchildren without risking the loss also of their political and spiritual heritage. We want democracy to survive for all generations to come, not to become the insolvent phantom of tomorrow.\nDuring the long lane of the history yet to be written, America knows that this world of ours, ever growing smaller, must avoid becoming a community of dreadful fear and hate, and be, instead, a proud confederation of mutual trust and respect. Such a confederation must be one of equals. The weakest must come to the conference table with the same confidence as do we, protected as we are by our moral, economic, and military strength. That table, though scarred by many fast frustrations \u0026ndash; past frustrations, cannot be abandoned for the certain agony of disarmament \u0026ndash; of the battlefield.\nDisarmament, with mutual honor and confidence, is a continuing imperative. Together we must learn how to compose differences, not with arms, but with intellect and decent purpose. Because this need is so sharp and apparent, I confess that I lay down my official responsibilities in this field with a definite sense of disappointment. As one who has witnessed the horror and the lingering sadness of war, as one who knows that another war could utterly destroy this civilization which has been so slowly and painfully built over thousands of years, I wish I could say tonight that a lasting peace is in sight.\nHappily, I can say that war has been avoided. Steady progress toward our ultimate goal has been made. But so much remains to be done. As a private citizen, I shall never cease to do what little I can to help the world advance along that road.\nSo, in this, my last good night to you as your President, I thank you for the many opportunities you have given me for public service in war and in peace. I trust in that \u0026ndash; in that \u0026ndash; in that service you find some things worthy. As for the rest of it, I know you will find ways to improve performance in the future.\nYou and I, my fellow citizens, need to be strong in our faith that all nations, under God, will reach the goal of peace with justice. May we be ever unswerving in devotion to principle, confident but humble with power, diligent in pursuit of the Nations' great goals.\nTo all the peoples of the world, I once more give expression to America\u0026rsquo;s prayerful and continuing aspiration: We pray that peoples of all faiths, all races, all nations, may have their great human needs satisfied; that those now denied opportunity shall come to enjoy it to the full; that all who yearn for freedom may experience its few spiritual blessings. Those who have freedom will understand, also, its heavy responsibility; that all who are insensitive to the needs of others will learn charity; and that the sources \u0026ndash; scourges of poverty, disease, and ignorance will be made [to] disappear from the earth; and that in the goodness of time, all peoples will come to live together in a peace guaranteed by the binding force of mutual respect and love.\nNow, on Friday noon, I am to become a private citizen. I am proud to do so. I look forward to it.\nThank you, and good night.\n"},{"id":137,"href":"/posts/literature/%E4%B8%8E%E5%B1%B1%E5%B7%A8%E6%BA%90%E7%BB%9D%E4%BA%A4%E4%B9%A6/","title":"与山巨源绝交书","section":"文学","content":"康白：足下昔称吾于颍川，吾常谓之知言。然经怪此意尚未熟悉于足下，何从便得之也？前年从河东还，显宗、阿都说足下议以吾自代，事虽不行，知足下故不知之。足下傍通，多可而少怪；吾直性狭中，多所不堪，偶与足下相知耳。闲闻足下迁，惕然不喜，恐足下羞庖人之独割，引尸祝以自助，手荐鸾刀，漫之膻腥，故具为足下陈其可否。 吾昔读书，得并介之人，或谓无之，今乃信其真有耳。性有所不堪，真不可强。今空语同知有达人无所不堪，外不殊俗，而内不失正，与一世同其波流，而悔吝不生耳。老子、庄周，吾之师也，亲居贱职；柳下惠、东方朔，达人也，安乎卑位，吾岂敢短之哉！又仲尼兼爱，不羞执鞭；子文无欲卿相，而三登令尹，是乃君子思济物之意也。所谓达能兼善而不渝，穷则自得而无闷。以此观之，故尧、舜之君世，许由之岩栖，子房之佐汉，接舆之行歌，其揆一也。仰瞻数君，可谓能遂其志者也。故君子百行，殊途而同致，循性而动，各附所安。故有处朝廷而不出，入山林而不返之论。且延陵高子臧之风，长卿慕相如之节，志气所托，不可夺也。吾每读尚子平、台孝威传，慨然慕之，想其为人。少加孤露，母兄见骄，不涉经学。性复疏懒，筋驽肉缓，头面常一月十五日不洗，不大闷痒，不能沐也。每常小便而忍不起，令胞中略转乃起耳。又纵逸来久，情意傲散，简与礼相背，懒与慢相成，而为侪类见宽，不攻其过。又读《庄》、《老》，重增其放，故使荣进之心日颓，任实之情转笃。此犹禽鹿，少见驯育，则服从教制；长而见羁，则狂顾顿缨，赴蹈汤火；虽饰以金镳，飨以嘉肴，愈思长林而志在丰草也。 阮嗣宗口不论人过，吾每师之而未能及；至性过人，与物无伤，唯饮酒过差耳。至为礼法之士所绳，疾之如仇，幸赖大将军保持之耳。吾不如嗣宗之资，而有慢弛之阙；又不识人情，暗于机宜；无万石之慎，而有好尽之累。久与事接，疵衅日兴，虽欲无患，其可得乎？又人伦有礼，朝廷有法，自惟至熟，有必不堪者七，甚不可者二：卧喜晚起，而当关呼之不置，一不堪也。抱琴行吟，弋钓草野，而吏卒守之，不得妄动，二不堪也。危坐一时，痹不得摇，性复多虱，把搔无已，而当裹以章服，揖拜上官，三不堪也。素不便书，又不喜作书，而人间多事，堆案盈机，不相酬答，则犯教伤义，欲自勉强，则不能久，四不堪也。不喜吊丧，而人道以此为重，已为未见恕者所怨，至欲见中伤者；虽瞿然自责，然性不可化，欲降心顺俗，则诡故不情，亦终不能获无咎无誉如此，五不堪也。不喜俗人，而当与之共事，或宾客盈坐，鸣声聒耳，嚣尘臭处，千变百伎，在人目前，六不堪也。心不耐烦，而官事鞅掌，机务缠其心，世故烦其虑，七不堪也。又每非汤、武而薄周、孔，在人间不止，此事会显，世教所不容，此甚不可一也。刚肠疾恶，轻肆直言，遇事便发，此甚不可二也。以促中小心之性，统此九患，不有外难，当有内病，宁可久处人间邪？又闻道士遗言，饵术黄精，令人久寿，意甚信之；游山泽，观鱼鸟，心甚乐之；一行作吏，此事便废，安能舍其所乐而从其所惧哉！ 夫人之相知，贵识其天性，因而济之。禹不逼伯成子高，全其节也；仲尼不假盖于子夏，护其短也；近诸葛孔明不逼元直以入蜀，华子鱼不强幼安以卿相，此可谓能相终始，真相知者也。足下见直木不可以为轮，曲木不可以为桷，盖不欲枉其天才，令得其所也。故四民有业，各以得志为乐，唯达者为能通之，此足下度内耳。不可自见好章甫，强越人以文冕也；己嗜臭腐，养鸳雏以死鼠也。吾顷学养生之术，方外荣华，去滋味，游心于寂寞，以无为为贵。纵无九患，尚不顾足下所好者。又有心闷疾，顷转增笃，私意自试，不能堪其所不乐。自卜已审，若道尽途穷则已耳。足下无事冤之，令转于沟壑也。 吾新失母兄之欢，意常凄切。女年十三，男年八岁，未及成人，况复多病。顾此悢悢，如何可言！今但愿守陋巷，教养子孙，时与亲旧叙离阔，陈说平生，浊酒一杯，弹琴一曲，志愿毕矣。足下若嬲之不置，不过欲为官得人，以益时用耳。足下旧知吾潦倒粗疏，不切事情，自惟亦皆不如今日之贤能也。若以俗人皆喜荣华，独能离之，以此为快；此最近之，可得言耳。然使长才广度，无所不淹，而能不营，乃可贵耳。若吾多病困，欲离事自全，以保余年，此真所乏耳，岂可见黄门而称贞哉！若趣欲共登王途，期于相致，时为欢益，一旦迫之，必发狂疾。自非重怨，不至于此也。野人有快炙背而美芹子者，欲献之至尊，虽有区区之意，亦已疏矣。愿足下勿似之。其意如此，既以解足下，并以为别。嵇康白。\n译文：\r#\r\r嵇康谨启：过去您曾在山嵚面前称说我不愿出仕的意志，我常说这是知己的话。但我感到奇怪的是您对我还不是非常熟悉，不知是从哪里得知我的志趣的？前年我从河东回来，显宗和阿都对我说，您曾经打算要我来接替您的职务，这件事情虽然没有实现，但由此知道您以往并不了解我。您遇事善于应变，对人称赞多而批评少；我性格直爽，心胸狭窄，对很多事情不能忍受，只是偶然跟您交上朋友罢了。近来听说您升官了，我感到十分忧虑，恐怕您不好意思独自做官，要拉我充当助手，正像厨师羞于一个人做菜，要拉祭师来帮忙一样，这等于使我手执屠刀，也沾上一身腥臊气味，所以向您陈说一下可不可以这样做的道理。 我从前读书的时候，听说有一种既能兼济天下又是耿介孤直的人，总认为是不可能的，现在才真正相信了。性格决定有的人对某些事情不能忍受，真不必勉强。现在大家都说有一种对任何事情都能忍受的通达的人，他们外表上跟一般世俗的人没有两样，而内心却仍能保持正道，能够与世俗同流合污而没有悔恨的心情，但这只是一种空话罢了。老子和庄周都是我要向他们学习的人，他们的职位都很低下；柳下惠和东方朔都是通达的人，他们都安于贱职，我哪里敢轻视议论他们呢！又如孔子主张博爱无私，为了追求道义，即使去执鞭赶车他也不会感到羞愧。子文没有当卿相的愿望，而三次登上令尹的高位，这就是君子想救世济民的心意。这也是前人所说的在显达的时候能够兼善天下而始终不改变自己的意志，在失意的时候能够独善其身而内心不觉得苦闷。从以上所讲的道理来看，尧、舜做皇帝，许由隐居山林，张良辅助汉王朝，接舆唱着歌劝孔子归隐，彼此的处世之道是一致的。看看上面这些人，可以说都是能够实现他们自己志向的了。所以君子表现的行为、所走的道路虽然各不相同，但同样可以达到相同的目的，顺着各自的本性去做，都可以得到心灵的归宿。所以就有朝廷做官的人为了禄位，因此入而不出，隐居山林的人为了名声，因此往而不返的说法。季札推崇子臧的高尚情操，司马相如爱慕蔺相如的气节，以寄托自己的志向，这是没有办法可以勉强改变的。每当我读尚子平和台孝威传的时候，对他们十分赞叹和钦慕，经常想到他们这种高尚的情操。再加上我年轻时就失去了父亲，身体也比较瘦弱，母亲和哥哥对我很娇宠，不去读那些修身致仕的经书。我的性情又比较懒惰散漫，筋骨迟钝，肌肉松弛，头发和脸经常一月或半月不洗，如不感到特别发闷发痒，我是不愿意洗的。小便常常忍到使膀胱发胀得几乎要转动，才起身去便。又因为放纵过久，性情变得孤傲散漫，行为简慢，与礼法相违背，懒散与傲慢却相辅相成，而这些都受到朋辈的宽容，从不加以责备。又读了《庄子》和《老子》之后，我的行为更加放任。因此，追求仕进荣华的热情日益减弱，而放任率真的本性则日益加强。这像麋鹿一样，如果从小就捕捉来加以驯服养育，那就会服从主人的管教约束；如果长大以后再加以束缚，那就一定会疯狂地乱蹦乱跳，企图挣脱羁绊它的绳索，即使赴汤蹈火也在所不顾；虽然给它带上金的笼头，喂它最精美的饲料，但它还是强烈思念着生活惯了的茂密树林和丰美的百草。 阮籍嘴里不议论别人的过失，我常想学习他但没有能够做到；他天性淳厚超过一般人，待人接物毫无伤害之心，只有饮酒过度是他的缺点。以致因此受到那些维护礼法的人们的攻击，像仇人一样的憎恨他，幸亏得到了大将军的保护。我没有阮籍那种天赋，却有傲慢懒散的缺点；又不懂得人情世故，不能随机应变；缺少万石君那样的谨慎，而有直言不知忌讳的毛病。倘若长久与人事接触，得罪人的事情就会每天发生，虽然想避掉灾祸，又怎么能够做得到呢？还有君臣、父子、夫妻、兄弟、朋友之间都有一定的礼法，国家也有一定的法度，我已经考虑得很周到了，但有七件事情我是一定不能忍受的，有两件事情是无论如何不可以这样做的：我喜欢睡懒觉，但做官以后，差役就要叫我起来，这是第一件我不能忍受的事情。我喜欢抱着琴随意边走边吟，或者到郊外去射鸟钓鱼，做官以后，吏卒就要经常守在我身边，我就不能随意行动，这是第二件我不能忍受的事情。做官以后，就要端端正正地坐着办公，腿脚麻木也不能自由活动，我身上又多虱子，一直要去搔痒，而要穿好官服，迎拜上级官长，这是第三件我不能忍受的事情。我向来不善于写信，也不喜欢写信，但做官以后，要处理很多人间世俗的事情，公文信札堆满案桌，如果不去应酬，就触犯礼教失去礼仪，倘使勉强应酬，又不能持久，这是第四件我不能忍受的事情。我不喜欢出去吊丧，但世俗对这件事情却非常重视，我的这种行为已经被不肯谅解我的人所怨恨，甚至还有人想借此对我进行中伤；虽然我自己也警惕到这一点而责备自己，但是本性还是不能改变，也想抑制住自己的本性而随顺世俗，但违背本性又是我所不愿意的，而且最后也无法做到像现在这样的既不遭到罪责也得不到称赞，这是第五件我不能忍受的事情。我不喜欢俗人，但做官以后，就要跟他们在一起办事，或者宾客满坐，满耳嘈杂喧闹的声音，处在吵吵闹闹的污浊环境中，各种千奇百怪的花招伎俩，整天可以看到，这是第六件我不能忍受的事情。我生就不耐烦的性格，但做官以后，公事繁忙，政务整天萦绕在心上，世俗的交往也要化费很多精力，这是第七件我所不能忍受的事情。还有我常常要说一些非难成汤、周武王和轻视周公、孔子的话，如果做官以后不停止这种议论，这件事情总有一天会张扬出去，为众人所知，必为世俗礼教所不容，这是第一件无论如何不可以这样做的事情。我的性格倔强，憎恨坏人坏事，说话轻率放肆，直言不讳，碰到看不惯的事情脾气就要发作，这是第二件无论如何不可以这样做的事情。以我这种心胸狭隘的性格，再加上上面所说的九种毛病，即使没有外来的灾祸，自身也一定会产生病痛，哪里还能长久地活在人世间呢？又听道士说，服食术和黄精，可以使人长寿，心里非常相信；又喜欢游山玩水，观赏大自然的鱼鸟，对这种生活心里感到很高兴；一旦做官以后，就失去了这种生活乐趣，怎么能够丢掉自己乐意做的事情而去做那种自己害怕做的事情呢？ 人与人之间相互成为好朋友，重要的是要了解彼此天生的本性，然后成全他。夏禹不强迫伯成子高出来做官，是为了成全他的节操；孔子不向子夏借伞，是为了掩饰子夏的缺点；近时诸葛亮不逼迫徐庶投奔蜀汉，华歆不硬要管宁接受卿相的位子，以上这些人才可以说始终如一，是真正相互了解的好朋友。您看直木不可以做车轮，曲木不能够当椽子，这是因为人们不想委屈它们原来的本性，而让它们各得其所。所以士、农、工、商都各有自己的专业，都能以达到自己的志向为快乐，这一点只有通达的人才能理解，它应该是在您意料之中的。不能够因为自己喜爱华丽的帽子，而勉强越地的人也要去戴它；自己嗜好腐烂发臭的食物，而把死了的老鼠来喂养鸳雏。我近来正在学习养生的方法，正疏远荣华，摒弃美味，心情安静恬淡，追求“无为”的最高境界。即使没有上面所说的“九患”，我尚且不屑一顾您所爱好的那些东西。我有心闷的毛病，近来又加重了，自己设想，是不能忍受所不乐意的事的。我已经考虑明确，如果无路可走也就算了。您不要来委屈我，使我陷于走投无路的绝境。 我刚失去母亲和哥哥的欢爱，时常感到悲伤。女儿才十三岁，男孩才八岁，还没有成人，而且经常生病。想到这些就十分悲恨，真不知从何说起！我现在但愿能过平淡清贫的生活，教育好自己的孩子，随时与亲朋友好叙说离别之情，谈谈家常，喝一杯淡酒，弹一曲琴，这样我的愿望就已经满足了。倘使您纠缠住我不放，不过是想为朝廷物色人，使他为世所用罢了。您早知道我放任散漫，不通事理，我也以为自己各方面都不及如今在朝的贤能之士。如果以为世俗的人都喜欢荣华富贵，而唯独我能够离弃它，并以此感到高兴；这样讲最接近我的本性，可以这样说。假使是一个有高才大度，又无所不通的人，而又能不求仕进，那才是可贵的。像我这样经常生病，想远离世事以求保全自己余年的人，正好缺少上面所说的那种高尚品质，怎么能够看到宦官而称赞他是守贞节的人呢！倘使急于要我跟您一同去做官，想把我招去，经常在一起欢聚，一旦来逼迫我，我一定会发疯的。若不是有深仇大恨，我想是不会到此地步的。山野里的人以太阳晒背为最愉快的事，以芹菜为最美的食物，因此想把它献给君主，虽然出于一片至诚，但却太不切合实际了。希望您不要像他们那样。我的意思就是上面所说的，写这封信既是为了向您把事情说清楚，并且也是向您告别。嵇康谨启。\n"},{"id":138,"href":"/posts/literature/%E4%BA%BA%E7%B1%BB%E8%AF%AF%E5%88%A4%E5%BF%83%E7%90%86%E5%AD%A6/","title":"人类误判心理学","section":"文学","content":"查理·芒格以自己的经验总结出的心理学尝试，共25条，整理如下： 误判心理学 1. 奖励和惩罚超级反应倾向 好的激励机制有利于提高工作效率。不恰当的激励机制则能够导致人们在做坏事的时候觉得自己是正当的。所以非常需要认清自己及他人做事的目的是什么。 这也可以应用到应对拖延上，每天强迫自己先完成不喜欢然而必要的工作，再奖励自己去处理那些自己喜欢的任务。 2. 喜欢/热爱倾向 人类喜欢和热爱被喜欢和被热爱。许多情场上的胜负皆因他/她能否表现出额外的关怀和爱护。一般来说，人类终生都会渴望得到许多和他毫无关系的他人的怜惜和欣赏。 喜欢和热爱是一种心理调节工具，促使人们：（1）忽略其热爱对象的缺点，对其百依百顺；（2）偏爱那些能够让自己联想其热爱对象的人、物品和行动；（3）为了爱而扭曲其他事实。 3. 讨厌/憎恨倾向 与“喜欢/热爱倾向”相反的模式，也会造成与“喜欢/热爱倾向”相反的心理调节效果。 4. 避免怀疑倾向 人类的大脑有一种尽快做出决定，以此消除怀疑的倾向。这种倾向在困惑和压力的环境下会尤其容易发生。 所以法庭和陪审团需要休庭讨论去抵制这种倾向。而商场购物的冲动情绪会促使你购买许多大量事后发现用不上的东西。 5. 避免不一致性倾向 大脑的抗改变倾向使人们倾向于保留以下几种东西的原样：以前的结论、忠诚度、身份、社会认可的角色等。比如工作中，之前做的错误报告，为了表现得前后一致而会在原来错误的报告基础上做出错误推论。 查理说：“正确的教育应该是一个提高认知能力的漫长过程，以便使我们变得足够有智慧，能够摧毁那些因拒绝改变倾向而被保留的错误想法。”所以我们需要不断去检查那些僵化的结论和态度。 避免不一致倾向带来的影响有好有坏： 死抱着错误观念不放手 大多数人会选择表现出与他们的公共责任、新旧公共认同相一致的行为，利于社会稳定 人们在获取一样事物的过程中做出的重大牺牲将会提高他们对这一事物的忠诚度 A对B先在小事上提出需求，然后逐渐提高要求，B即使不愿满足也往往会妥协 知识传播和更迭的速度变慢 6. 好奇心倾向 好奇心能使人们在正式教育结束后很久依然拥有许多乐趣和智慧。 7. 康德式公平倾向 康德以其“绝对命令”而闻名，他要求人们遵守某些行为方式，如果所有人都遵守这些方式，那么就能够保证社会制度对每个人来说都是最好的。人们共同遵守一些约定俗成的规则行事，而更有一些则变成了法律。 康德式公平倾向则是指人们都表现出并期待从别人那里得到康德所定义的这种公平。 8. 艳羡/嫉妒倾向 “驱动这个世界的不是贪婪，而是妒忌。” 9. 回馈倾向 人类有以德报德、以怨报怨的倾向。这种倾向明显能够促进有利于成员利益的团体合作。 而化解过激的敌意的标准方法是，延迟自己的反应。“如果你觉得骂人是个好主意，你可以留到明天再骂。” 这种回馈机制也被用到商业推销中，当别人给你提供一点小礼物，然后要求你买他的东西的时候，你很可能为了报答他而当了冤大头。 10. 受简单联想影响的倾向 许多条件反射是由简单的联想引发的。比如价格高的东西质量好，广告中的名人效应，一些所谓的幸运数字和幸运物品，富二代的优越生活和他们人品之间的关联等等。 审慎地看待这些关联，尤其容易引发热爱或厌恶。 11. 简单的、避免痛苦的心理否认 现实太过痛苦，令人无法忍受，所以人们会否认现实、会扭曲各种事实，直到它们变得可以接受。我们或多或少都有这种毛病，而这一倾向的极端后果经常会与爱情、死亡和对化学品的依赖有关。 “未必有希望才能够坚持”，能过做到这一点的人是非常可敬的。 12. 自视过高的倾向 人们会高估自己，就像90%的司机都觉得他们的驾驶技术在平均水平之上。自视过高的倾向往往使人们偏爱那些和自己相似的人，而相似的人组成的团体总是容易走向极端。自视更高也会使人们以为自己有很大的主动权而做出冲动的决定。 解决方法——客观。这一条很难去纠偏的原因在于自己已经走偏了，而且还会为此而寻找借口。所以可能更好的办法是找一些真诚的朋友提供反馈，接受建议。 13. 过度乐观的倾向 人们不但会表现出简单的、避免痛苦的心理否认，而且甚至在已经做的非常好的时候，还会表现的过度的乐观。 解决愚蠢的乐观主义的正确方法是通过学习，习惯性地应用费马和帕斯卡的概率论。 14. 被剥夺超级反应的倾向 失去造成的伤害比得到带来的快乐多得多；如果有个人即将得到某样他非常渴望的东西，而这样东西却在最后一刻飞走了，那么他的反应会像这件东西他已经拥有了却突然被夺走了一样。这两种对损失已有的好处和损失即将拥有的好处的反应，就是被剥夺超级反应倾向。这些损失可以是财产、爱情、友谊、势力范围、机会、身份或者其他任何有价值的东西。 比如，一户人家本来已经有很大的住房面积，却因为邻居稍微的侵犯就大发雷霆；赌徒也会在输钱后表现出更加急躁的心理；投资者则会更加关注那些糟糕的项目而做出错误的挽救措施。 15. 社会认同倾向 人类有自动根据他看到的周边人们的思考和行为方式去思考和行动的倾向，也会受到别人不行动的误导。例如，青少年特别容易由于社会认同倾向而出现认知错误，所以某种程度上购买学区房是有道理的。 对人类社会而言，下面两种措施是非常重要的： 在坏行为散播之前阻止它 倡导和展现所有的好行为 16. 对比错误反应倾向 因为人类的神经系统并不是精密的科学仪器，所以它必须依靠某些更为简单的东西，比如通过对比来捕捉信息，这就造成了人类的对比错误反应倾向。 人们会在前后两个物品的对比中做出不符合事实的判断，比如著名的同样一杯温水，手先放入热水和冰水中再放入这杯温水就会得出不一样的结论；或者商店的打折促销，先提高原价再打折的伎俩。 17. 压力影响倾向 突然的压力，会导致人体内部的肾上腺素激增，推动更快、更极端的反应。 压力有时会和社会认可倾向、避免不一致倾向等共同作用让人做出不理智的判断，不过，适度的压力是能够改善人们的表现的。 18. 错误衡量易得性倾向 人类的大脑是有限和不完美的，它很容易满足于容易得到的东西，受这种影响人类会高估容易得到的东西的重要性，因而展现出易得性——错误衡量倾向。这种倾向的一个后果是，那些及其鲜明的形象，由于便于被记住，因而容易被认知，因此在综合判断的时候应该有意低估它们的重要性，而有意高估那些不那么形象的证据的重要性。 在一些重要事情的判断上，最好有检查清单把每一项都做到位，而不是根据快速得到的一些信息就做结论。 19. 不用就忘倾向 大概不用解释。 “明智的人会终身操练他全部有用然而很少用得上的、大多数来自其他学科的技能，并把这当作是一种自我提高的责任。” 20. 化学物质错误影响倾向 这里指一些酒、毒品等。 21. 衰老-错误影响倾向 年龄的增长会造成认知衰退，而每个人认知衰退的时间早晚和速度快慢不尽相同，带着快乐不断地思考和学习在某种程度上能够延缓不可避免的衰退过程。 22. 权威-错误影响倾向 人类社会的权利结构增强了人类天生就有的追随领袖的倾向，因而容易迷信权威。 23. 废话倾向 有些人可能只是不知道如何表达，但“让那些啰哩啰唆、喜欢说废话的人远离严肃的工作”。 24. 重视理由倾向 人天生就热爱准确的认知，以及获取准确认知中的到的乐趣。所以传授知识的时候最好的讲明推理过程，吩咐工作的时候最好能讲明原因。 如果人们毕生致力于将他们直接和间接的经验悬挂在一个解释“为什么”的理论框架之上，那么他们对知识的吸收和使用会变得更加容易。 有趣的是，万一一个人给出的理由哪怕是毫无意义的或者是不准确的，也能使他的命令和要求更容易得到遵从。 25. lollapalooza倾向——数种心理倾向共同作用造成极端后果的倾向 我们在分析一件事时，很难把它完全归入某一个心理学倾向里去，更多的是多种倾向复合作用、相互影响的结果。所以也需要有全面的认知。\n人类误判心理学\r#\r\r查理将三次演讲的内容合并起来，写成一篇从来没有发布过的讲稿，2005 年又进行了 修订，增加了大量新的材料。\n这三次演讲分别是：\n 1、1992 年 2 月 2 日，在加州理工学院教职员俱乐部布雷（Bray）讲座上的演讲； 2、1994 年 10 月 6 日，受剑桥行为研究中心邀请，在哈佛大学教职员俱乐部发表的演 讲； 3、1995 年 4 月 24 日，受剑桥行为研究中心邀请，在波士顿港酒店发表的演讲。\n 2005 年，在没有任何研究助理的情况下，查理全凭记忆，对这篇讲稿作了大刀阔斧的 修改。查理认为 81 岁的他能够比 10 年前做得更好，原因有两个：\n 1.当时他的知识没有如今 丰富，而且当时因为生活的忙碌而过于匆忙定稿； 2.当时他是依据粗略的笔记进行演讲，而现在是对讲稿进行修改。\n 前言\r#\r\r当我阅读我在 15 年前做过的心理学讲座的讲稿时，我觉得我现在可以写一篇逻辑性更 强但是篇幅也更长的“讲稿”，将我以前讲过的大部分内容都囊括在内。 但我立刻发现这么做有四个缺点。\n 第一，由于我在撰写这篇更长的“讲稿”时更为追求逻辑的完整性，所以在许多人看来， 和早前的讲稿相比，它会显得更加枯燥和难懂。这是因为我给那些心理倾向所下的定义会让 人想起心理学教科书和欧几里德。谁会在阅读教科书或者重读欧几里德中找到乐趣呢？\n  第二，我只在 15 年前浏览过三本心理学教材，我对正式的心理学的了解就这么多，所 以后来学院派心理学取得了什么进展我基本上是不了解的。然而，在这篇更长的讲稿中，我 将会对学院派心理学提出许多批评。这种班门弄斧的做法肯定会引起许多心理学教授的反 感，若是发现我有错误之处，他们将会非常高兴，说不定还会写文章来批评我，以此回应我 对他们的批评。我为什么会在意新的批评呢？嗯，谁喜欢与那些拥有信息优势的尖锐批评家 结下新的梁子呢？\n  第三，这篇更长的文章肯定会让某些本来喜欢我的人感到不满。他们不但会对我的文风 和内容提出异议，而且还会觉得我是个目中无人的老头，对传统的智慧不够尊敬，“大言不 惭”地谈论一门他从来没有上过课的学科。我在哈佛大学法学院的老同学艾德·罗思柴尔德 （Ed Rothschild）总是把这种大言不惭称为“鞋扣情结”。这个名字来自他的一位世交， 那人在鞋扣行业取得领先地位之后，不管聊到什么话题总是一副无所不知的口气。\n  第四，我也许会让自己显得像个傻瓜。尽管考虑到这四个缺点，我还是决定发表这篇内容增加甚多的文章。这几十年来，我基 本上只做那些我有把握能够做好的工作和事情，而现在我却选择了这样的行动，它非但不会 给我个人带来重大的好处，而且有可能让我的亲人和朋友感到痛苦，更有可能让我自己丢人 现眼。我到底为什么要这样做呢？这也许跟我的性格有关，我向来喜欢指出和谈论传统智慧中的错误。虽然这些年来我因 为这种脾气而吃了不少苦头，但是江山易改，本性难移，我并没有因为吃了生活中的苦头而 改掉自以为是的性格。我作出这个决定的第二个原因是，我赞成第欧根尼（Diogenes）的说法。第欧根尼说过： “从来不得罪人的哲学家有什么用呢？” 第三个原因是最重要的。我爱上了我这种编排心理学知识的方法，因为它一直以来对我 很有用。所以呢，在去世之前，我想在某种程度上效仿三位人物，给世人留点东西。这三位 人物分别是：约翰·班扬的《天路历程》的主角、本杰明·富兰克林，以及我的第一位雇主恩尼斯特·巴菲特。班扬笔下的人物，也就是那位外号“真理剑客”的骑士，在临终时留下 了这样的遗嘱：“我的剑留给能挥舞它的人。”跟这个人一样，只要我曾经试图正确地对待 我的剑，我并不在乎我对它的赞美是对还是错，也不在乎许多人并不愿意使用它，或者使用 之后发现它对他们来讲完全没有用。对我帮助极大的本杰明·富兰克林给世人留下了他的自 传——《穷理查年鉴》——和其他许多东西。恩尼斯特·巴菲特也尽他最大的努力，同样留 下了“如何经营杂货店（的知识），以及我了解的一些垂钓知识”。他的遗赠发挥的作用是 不是最大，我在这里就不说啦。但我想告诉大家的是，我认识恩尼斯特·巴菲特的四代后裔， 我对他们的了解促使我决定效仿他们的先人。\n 我早就对标准的思维错误非常感兴趣。然而，在我受教育的年代，非临床心理学在理解错误判断方面的贡献完全遭到了主流社 会精英的漠视。当时对心理学进行研究的人非常少，只有一群自娱自乐的教授。这种固步自 封的情况自然会造成许多缺陷。所以呢，当我从加州理工学院和哈佛大学法学院毕业的时候，我对心理学是完全无知的。 这些教育机构并没有要求学生掌握这门学科。它们根本就不了解心理学，当然更无法将心理 学和其他学科整合起来。此外，这些机构就像尼采笔下那个以瘸腿为傲的人物，它们为能刻 意避开“混乱的”心理学和“混乱的”心理学教授而感到光荣。 在很长一段时间里，我也持有这种无知的想法。其他许多人也是。例如，加州理工学院 常年只有一位心理学教授，他自称“心理分析研究教授”，为学生开设“变态心理学”和 “文学中的心理分析”，看到这样的情况，我们会怎么想呢？ 离开哈佛不久，我开始了漫长的奋斗，努力去掌握一些最有用的心理学知识。今天，我 想要描述我这次追求基本智慧的漫长奋斗，并简要地说出我最终的心得。之后，我将会举例 ——其中许多例子在我看来是形象而有趣的——说明心理学知识的用处，以及如何解决那些 跟人类的心理相关的问题。最后我将针对我讲过的内容提出一些普遍问题，并进行回答。这 将会是一次很长的演讲。 当我开始当律师的时候，我很相信基因进化论，也知道人类与认知能力较为低下的动物 和昆虫之间有许多相似之处，这是物种进化造成的。我明白人是“社会动物”，他会观察周 围人们的各种行为，并自动地受到他们的影响。我还知道人类就像被驯养的动物和猴子，也 生活在一种等级结构中，他倾向于尊重当权者，喜欢和同阶层的成员合作，同时对处于下层 并与之竞争的人表现出极大的不信任和不喜欢。 但这种以进化论为基础的理论结构太过粗略，不足以让我正确地应付我在现实生活中遇 到的问题。很快，我发现自己身边出现了各种我无法理解的现象。于是我终于明白，若要顺 利地解决我在生活中遇到的各种问题，我必须拥有更好的理论结构，这样才能够解释我的所 见和经验。那时，我渴望更多理论的历史已经很长了。这部分是因为，我总是喜欢把理论当 作破解难题的工具和满足我那像猴子般的好奇心的手段；部分是因为，我发现理论结构非常有用，能够帮助人们得到他们想要的东西。这个道理是我小时候在学校发现的，当时我在理 论的指导之下，轻轻松松地取得了好成绩，而其他许多人由于没有掌握理论，花了很大力气 去学习，却总是不及格。我认为更好的理论对我来说总是有用的，如果我能掌握它，就能够 更快地获得财富和独立，能够更好地帮助我所热爱的一切。所以我慢慢地培养了我自己的心 理学体系。在这个过程当中，我靠的是自学，这多少有点像本杰明·富兰克林，还有那个保 育院故事展现出来的决心：“‘那我就自己来吧。’小红母鸡说。” 在我追求知识的过程中，有两种思维习惯起到了很大的作用。第一，我总是试图通过伟 大的代数学家雅各比提倡的逆向思维来考虑问题。雅各比说：“反过来想，总是反过来想。” 我得到正确判断的办法，通常是先收集各种错误判断的例子，然后仔细考虑该怎样避免得到 这些下场。第二，我非常热衷于收集错误判断的例子，所以我完全无视不同行业、不同学科 之间的界线。毕竟，既然其他行业有许多重大的、容易发现的愚蠢事例，我为什么还要在自 己的领地上搜寻某些无足轻重的、难以发现的新蠢事呢？除此之外，我已经明白，现实世界 的问题不会恰好落在某个学科的界线之内。它们跨越了界线。如果两种事物存在密不可分的 相互关系，我认为那种试图考虑其中一种事物而无视另一种事物的方法是很值得怀疑的。我 担心的是，如果我试图用这种方法去解决问题，最终我将会——用约翰·刘易斯（John L. Lewis）的不朽名言来说——“没有脑袋，只有一个顶上长着头发的脖子。” 后来，纯粹的好奇心驱使我去思考邪教的问题，那些毁形灭性的邪教通常只需要一个长 周末就能够将完全正常的人转变为被洗过脑的行尸走肉，并永远让他们保持那种状态，它们 是怎么做到的呢？原因是什么呢？我觉得如果我通过大量的阅读和反复的思考，应该能够完 满地解决这个关于邪教的问题。 我也对社会性的昆虫很好奇。有生育能力的雌蜂和有生育能力的雌收获蚁的寿命相差很 多，但它们只要在空中进行一次群交，就都能将寿命延长整整 20 倍。我对这样的事情感到 着迷。蚂蚁的极大成功也让我着迷——蚂蚁的进化极其成功，它们形成了几种简单的行为规 范：繁殖群体之内的蚂蚁精诚无间地合作，而对繁殖群体之外的蚂蚁，哪怕是同类的蚂蚁， 则几乎总是表现出致命的敌意。 像我这么热爱学习的人，到了中年本来应该翻开心理学教材，但是我没有，这证明了那 句德国谚语所言非虚：“我们老得太快，聪明得太迟。”后来我发现，没有接触到当时大多 数教科书上记载的学院派心理学，对我来说可能是件幸运的事情。那些教科书无助于我理解 邪教，而那些收集心理实验的教科书作者就像收集蝴蝶标本的小男孩——他只想收集更多的 蝴蝶，和其他收集者有更多的接触，根本不想对已经拥有的标本进行综合研究。当我最终看 到那些心理学教科书的时候，我想起了伟大的经济学家雅各布·维纳（Jacob Viner）说过 的一句话。他说许多学者就像寻菇犬，人们喂养和训练这种动物来寻找地下的块菌，除了这 项专长，它别的什么都不会。那些教科书花了长达数百页的篇幅来探讨先天因素和后天因素 对人的影响，可是它们所用的思考方式是极其不科学的，这也让我很吃惊。我发现大多数入 门级的心理学教科书并没有正确地处理一个基本问题：心理倾向为数众多，而且它们在生活 中会产生相互影响。但那些入门级教材的作者通常对如何弄清楚相互交织的心理倾向造成的 复杂后果避而不谈。这有可能是因为那些作者不希望把教材写得太复杂，以免没有新人敢投 身于他们的学科。他们做得不够好，也有可能是出于塞缪尔·约翰逊说过的原因。曾经有位 女士问约翰逊，是什么原因导致他的词典把“pastern”（马蹄腕）这个词的定义给弄错了。 约翰逊的回答是：“纯粹的无知。”最后，那些教科书作者也没有兴趣去描写该用哪些 标准的办法去对付由心理因素造成的标准蠢事，所以他们恰恰避开了我最感兴趣的话题。 学院派心理学虽然有许多缺点，但也有一些非常重要的优点。我在博览群书的过程中看 到一本叫做《影响力》（Influence）的书。这是一本通俗读物，作者是一位杰出的心理学 教授，罗伯特·西奥迪尼（Robert Cialdini），他在规模很大的亚利桑那州立大学任教。 西奥迪尼设计大量巧妙的实验，在实验中，人们利用人类思维中内在的缺陷，操纵别人做出 了损害自身利益的事情。西奥迪尼对这些实验进行了描述和解释，并因此在非常年轻的时候 就荣任终身董事讲座教授。 我立刻给我的每个孩子寄了一本西奥迪尼的著作。我还送给西奥迪尼一股伯克希尔的 A 级股票（2010 年 3 月的市值大约为 12 万 2000 美元——译者注），感谢他为我和公众作出 的贡献。西奥迪尼这本社会心理学著作卖出了几十万册，这是很了不起的，因为西奥迪尼并 没有宣称他的书将会改善你的性生活或者让你发财。 许多读者购买西奥迪尼这本书是因为他们跟我一样，也想知道怎样才能不经常被推销员 和环境欺骗。然而，令非常正直的西奥迪尼意想不到的是，大量的销售员也买了他的书，他 们想要了解怎样才能更有效地误导顾客。下面我会讲到激励机制引起的偏见，我希望不会有 人将我的理论用于变态的目的。 在西奥迪尼这本书的驱动之下，我很快浏览了三本最流行的心理学入门教材。在此期间， 我还进行了周全的考虑，想把我以前的训练和经验综合起来。芒格的非临床、非先天后天对 立的非发展心理学就这样诞生了。许多理论是从它们的发现者（其中大多数人的名字我甚至 还不知道）那里借用来的，但我通常会给它们配上新的表述和标题。因为我没有去查证资料， 而是怎样容易回忆起来就怎么写，然后再进行修改，以便我能够很方便地使用这些理论来避 免错误。 在开始综述我的理论之前，我想先来讲一个有助于理解以下内容的普遍观点。这个观点 是从我们对社会性昆虫的了解中提炼出来的。这些昆虫很漂亮地证明了神经系统细胞在进化 过程中固有的局限，它们整个神经系统通常只有 10 万个左右的细胞，而人类光是大脑的细 胞就有上百亿个。 蚂蚁和人类相同，都是由活体结构加上神经细胞中的行为程序组成的。就蚂蚁而言，其 行为程序只有少数几种，而且几乎完全来自遗传。蚂蚁能够根据经验学到新的行为，但大多 数时候，它只能根据遗传的神经系统中设定好的程序，对十种左右的神经刺激作出几个简单 的反应。 蚂蚁简单的行为系统自然有很大的局限，因为它的神经系统的功能很有限。例如，有一 种蚂蚁，当它在巢穴里嗅到蚂蚁尸体散发出的外激素时，它就会和其他蚂蚁合作把尸体运出 巢穴。伟大的哈佛大学教授 E.O.威尔逊（E. O. Wilson）做过一个非常出色的心理学实验， 他将死蚂蚁分泌的外激素涂在一只活蚂蚁身上。很自然，其他蚂蚁把这只有用的活蚂蚁拖出 了巢穴，尽管它在整个过程中不断地踢腿和挣扎。这就是蚂蚁的大脑。它拥有的反应程序特 别简单，平时运转是没有问题的，但在许多情况下，蚂蚁只会生搬硬套地根据这个程序作出 机械反应。另一种蚂蚁证明，蚂蚁有限的大脑不但容易受环境欺骗，而且还会遭到其他生物的操控。 这种蚂蚁的大脑里面包含了一种简单的行为程序，引导蚂蚁在爬行的时候跟着前方的蚂蚁 走。如果在这种蚂蚁爬行时把它们弄成一个圆圈，它们有时候会不停地走啊走，直到死亡为 止。 有一个我看来很明显的道理是：由于存在许多过度简化的思维程序，人类大脑的运转必 定常常出现问题，就像蚂蚁的大脑那样，尽管它试图解决的问题通常比那些无需设计飞机的 蚂蚁面对的问题困难得多。 人类的知觉系统清楚地证明了大脑确实会失灵。人是很容易受到愚弄的，无论是人类精 心设计的骗局，还是偶然出现的环境因素，抑或人们刻苦练习而掌握的非常有效的控制术， 都能够轻而易举地让人们上当。导致这种结果的原因之一是人类感知中的微量效应。如果刺 激被维持在一定水平之下，人类便察觉不到它的存在。由于这个原因，魔术师能够在黑暗中 做一通虚张声势的动作之后让自由女神像消失。观众并不知道他们坐在一个慢慢旋转的平台 之上。这个平台转得非常慢，没有人能够察觉出来。当平台上的帘幕在原来自由女神像出现 的地方掀开时，它看起来像是不见了。 人类的大脑即使在有所知觉的时候，也会错误地估量它感知到的东西，因为大脑只能感 知到鲜明的对比，而无法像精密的科学仪器那样以科学的单位来估算感知的变化。 魔术师证明人类神经系统确实会因为这种对比而出现错误。魔术师能够在你毫不察觉的 情况下摘掉你的手表。他摘你的手表时，如果他只跟你的手腕发生接触，那么你肯定会感知 到手表被他摘掉了。但他同时还触碰了你身体的其他地方，而且通过施加更大的力道把你手 腕感受到的力道给“淹没”了。这种高对比让你感觉不到手腕受到的力道。 有些教授喜欢用实验来证明对比引起的感知缺陷。他们会让学生把一只手放在一桶热水 里，另外一只手伸进一桶冷水。然后他们会突然要求学生把双手放进一桶常温的水中。学生 虽然两只手是放在同一桶水里面，但一只手感觉好像刚放进冷水，一只手感觉好像刚放进热 水。当人们发现在温度计不会出错的地方，单纯的对比就能轻易地让感知受骗，并意识到认 知和感知是相同的，也会受到单纯的反差的欺骗，那么他不但能够懂得魔术师是如何愚弄人 们的，还能明白生活是如何作弄人的。人类的感知和认知系统中那些总体上很有用的倾向往 往会出错，如果不对此加以小心提防，就会很容易受到别人故意的操控。 人类的——经常出错但总体上很有用——心理倾向相当多，而且相当不同。大量的心理 倾向的自然结果就是社会心理学的重要原理：认知往往取决于情景，所以不同的情景通常会 引起不同的结论，哪怕是同一个人在思考同一个问题的时候也是如此。 有了蚂蚁、魔术师和这条社会心理学的重要原理做铺垫，接下来我想简单地列出那些虽 然总体上很有用但经常误导人的心理倾向。后面我们再来详细讨论每种倾向引发的错误，同 时描述如何防止犯这样的错误，并进行一些总体的讨论。以下是这些倾向：\n 一、奖励和惩罚超级反应倾向 二、喜欢/热爱倾向 三、讨厌/憎恨倾向 四、避免怀疑倾向 五、避免不一致性倾向 六、好奇心倾向 七、康德式公平倾向 八、艳羡/妒忌倾向 九、回馈倾向 十、受简单联想影响的倾向 十一、简单的、避免痛苦的心理否认 十二、自视过高的倾向 十三、过度乐观倾向 十四、被剥夺超级反应倾向 十五、社会认同倾向 十六、对比错误反应倾向 十七、压力影响倾向 十八、错误衡量易得性倾向 十九、不用就忘倾向 二十、化学物质错误影响倾向 二十一、衰老—错误影响倾向 二十二、权威—错误影响倾向 二十三、废话倾向 二十四、重视理由倾向 二十五、lollapalooza 倾向——数种心理倾向共同作用造成极端后果的倾向\n 一、奖励和惩罚、超级反应倾向\r#\r\r我最先讨论这个倾向，是因为每个人都以为自己完全明白激励机制和惩罚机制在改变认 知和行为方面有多么重要。但其实往往不是这样子的。例如，我觉得自我成年以来，在理解 激励机制的威力方面，我比 95%的同龄人要好，然而我总是低估那种威力。每年总会有些意 想不到的事情，促使我对激励机制的超级威力有更深的体会。 说到激励机制的威力，在所有案例中，我最欣赏的是联邦快递的案例。联邦快递系统的核心和灵魂是保证货物按时送达，它必须在三更半夜让所有的飞机集中到一个地方，然后把 货物快速转发到各架飞机上。如果哪个环节出现了延误，联邦快递就无法把货物及时地送到 客户手里。曾经有一段时间，联邦快递的夜班工人总是不能按时完成工作。他们对工人动之 以情、晓之以理。他们尝试了各种各样的方法，但就是没效果。最后有个人终于想通了：公 司并不希望职员工作的时间越长越好，而是希望他们快速地、无差错地完成某项任务，所以 按照小时来支付夜班薪水的做法是很傻的。也许，这个人想，如果他们按照班次来支付薪水， 并允许夜班工人在把所有货物装上飞机之后提前回家，那么这个系统会运转得更好。你瞧， 这种方法果然奏效了。 施乐公司（Xerox Corporation）早期的时候，乔·威尔逊（注：乔·威尔逊，1909—1971， 美国施乐公司创办人、慈善家）也遇到了相同的问题。他那时已离开公司进入政府部门，但 不得不辞职又回到施乐公司，因为他无法理解为什么施乐的新机器总是卖得不如那些性能低 下的旧机器好。回到施乐之后，他发现根据公司和销售员签署的销售提成协议，把旧机器卖 给客户，销售员能得到很高的提成；在这种变态激励机制的推动下，劣等的旧机器当然卖得 更好。 然后还有马克·吐温那只猫的案例。那只猫被热火炉烫过之后，再也不愿意坐在火炉上 了，不管火炉是热的还是冷的。 我们还应该听取本杰明·富兰克林的建议。富兰克林在《穷理查年鉴》中说过：“如果 你想要说服别人，要诉诸利益，而非诉诸理性。”这句睿智的箴言引导人们在生活中掌握一 个重要而简单的道理：当你该考虑动用激励机制的威力时，千万千万别考虑其他的。我认识 一个非常聪明的法律顾问，他在一家大型投资银行任职，从来没犯错，却丢失了工作，因为 他忽略了富兰克林这句箴言中蕴含的教训。这位顾问没能成功地说服其客户。这位顾问对客 户说，你有道德责任去做某件事，在这一点上，顾问是正确的。可是他没有告诉客户的是， 如果不按照他的建议去做，客户将会陷入万劫不复之地。结果，这位顾问和他的客户都丢掉 了工作。 我们还应该记得苏联共产党得到的下场。苏联共产党对激励机制的超级威力完全无知， 结果造成什么情况呢？有个苏联工人这么说：“他们假装给薪水，我们假装在工作。”也许 最重要的管理原则就是，“制定正确的激励机制。” 但是太过强调激励机制的超级威力也有缺陷。哈佛大学的心理学教授 B.F.斯金纳就因 为过度强调激励机制而闹了笑话。斯金纳曾经是世界上最著名的心理学教授。他能够取得这 种如日中天的地位，部分原因在于，他早年别出心裁地利用老鼠和鸽子做实验，得出了令人 意外的重要结果。和其他方法相比，他利用的激励法能够引发更多的行为变化，也能够更有 成效地让他的老鼠和鸽子养成条件反射。他揭示，奖励儿童或者员工已经厌倦的行为是极其 愚蠢的。利用食物作奖励，他甚至如愿以偿地让他的鸽子养成了强烈的迷信。他再三证明自 然界存在一种重复出现的、普遍的伟大行为算法：“重复有效的行为”。他还证明即时的回 报在改变和延续行为方面远远比延后的回报有效。他的老鼠和鸽子在食物奖励的作用下养成 条件反射之后，他发现了那种能够使反射行为保持最长时间的奖励撤销模式：随机分布模式。 得到这个研究结果的斯金纳认为他已经完全能够解释人类明知道十赌九输却还是忍不住要 赌博的原因了。但是，正如我们在后面讨论其他导致滥赌行为的心理倾向时将会发现的，斯 金纳只说对了一部分。斯金纳的个人声誉后来江河日下，是因为一来，他过度地强调了激励机制的超级威力，乃至认为利用激励机制就能够创建出一个人间乌托邦；二来，他几乎没有 认识到心理学其他部分的威力。因而他就像雅各布·维纳的寻菇犬，只会用激励效应来解释 一切。但话又说回来，斯金纳的主要观点是正确的：激励机制是超级有用的。他那些基本实 验的结果将会在实验科学的史册上流芳千古。在他死后数十年里，他那种完全依赖奖励的方 法在治疗儿童自闭症方面比其他任何疗法都有效。 当我在哈佛大学法学院念书的时候，教授们有时会谈起耶鲁大学法学院某个像斯金纳那 么死心眼的教授。他们常常说：“埃迪·布兰夏德这老兄真可怜，他还认为宣告式判决能够 治疗癌症呢。”嗯，极其强调激励机制的超级威力的斯金纳跟这位耶鲁法学院的教授差不多。 我总是把这种降低了斯金纳声誉的思维习惯称为“铁锤人倾向”，因为有句谚语说：“在只 有铁锤的人看来，所有问题都特别像钉子。”“铁锤人倾向”并没有放过布兰夏德和斯金纳 这么聪明的人。如果你们不注意的话，它也不会放过你们。在这篇讲稿中，我将会好几次提 到“铁锤人倾向”，因为正好有一些办法能够有效地减少这种令斯金纳教授声名扫地的心理 倾向所造成的破坏。 激励机制的超级威力所造成的一个重要后果就是我所说的“激励机制引起的偏见”。有 的人因为受过教育而变得道德高尚，然而在激励机制的驱动之下，他可能会有意或者无意地 做出一些不道德的行为，以便得到他想要的东西，而且他还会为自己的糟糕行为寻找借口， 就像施乐公司那些为了得到最高提成而不惜损害顾客利益的销售员。 我很早就学到这个道理。故事发生在我祖父的故乡，内布拉斯加州的林肯市。当地有个 外科医生，他年复一年地将大量的正常胆囊送到该市最好的医院的病理学实验室。众所周知， 社区医院的管理体系很糟糕，所以这位医生如此乱来了许多年才被革除职务。那位负责开除 这个人的医生是我们家的世交，我问他：“难道这名外科医生心里想，‘这么做能够展示我 的医术很高明？’——这家伙手术做得非常好——‘而且每年通过把正常胆囊切掉来谋害 几个病人能让我过上高质量的生活？’”我的朋友说：“不是这样子的啦，查理。他认为胆 囊是所有疾病的祸根，而且如果你真的爱护病人，就应该尽快把这个器官切除掉。” 这个例子很极端，但每个专业人士和每个普通人身上或多或少都会有这名外科医生的认 知倾向。它能引发极其可怕的行为。就拿那些推销商业地产和企业的经纪人来说吧。我从来 没有见过一个哪怕稍稍客观的经纪人。在我这漫长的一生中，我遇到过的管理顾问没有不在 他们的报告结束时写上这个相同的建议的：“这个问题需要更多的管理顾问服务。”由于激 励机制引起的偏见非常普遍，所以人们往往必须怀疑或者有保留地接受其专业顾问的建议， 哪怕这个顾问是一名工程师。一般的对策如下：（1）如果顾问提出的专业建议对他本身特 别有利，你就应该特别害怕这些建议；（2）在和顾问打交道时，学习和使用你的顾问所在 行业的基本知识；（3）复核、质疑或者更换你得到的建议，除非经过客观考虑之后这些建 议看起来是合适的。 激励机制能够导致人们在做坏事的时候觉得自己是正当的，国防部的采购历史也证明了 这一点。从前国防部采购时签署的都是成本保利合同（以成本再加一个比例的利润作价）， 而产生了许多贪污受贿的事情，这促使美国政府作出决定，国防部负责采购的官员签署这样 的合同是违法的，而且犯的不是轻罪，是重罪。 顺便说一声，虽然政府部门签署成本保利合同已经被正确地定为重罪，但其他地方，包括许多律师事务所和大量的企业，依然采用了一种成本保利的奖励系统。在这种普遍的激励 模式之下，有些人受到激励机制引起的偏见的驱使，做出了许多极其可怕的事情。而这些行 为不轨的人当中有许多原本正派得足让你们会很乐意和他们成为亲家。 人类大脑就是以这种方式运转的，这里面蕴含着几个大道理。比如，收款机的发明能够 使不诚实的行为难以得逞，所以它对文明社会作出了杰出的贡献。正如斯金纳十分清楚地知 道的，得到奖励的坏行为特别容易形成习惯。所以收款机是一种伟大的道德工具。顺便说一 下，收款机的发明者帕特森（John Henry Patterson）对此深有体会。他曾经拥有一家小商 店，店里的员工经常趁他不注意的时候偷钱，所以他从来没赚到什么钱。后来有人卖给他两 台收款机，他的商店马上开始盈利。他很快把商店关掉，进入了收款机行业。他创办的公司 就是那家在当时叱咤风云的国民收款机公司。帕特森把“重复有效的行为”作为行为指南， 获得了巨大的成功。帕特森的道德也很高尚。他脾气很古怪，但热衷于做善事（不过他对竞 争对手冷酷无情，他把所有竞争对手都看做是潜在的专利盗窃者）。帕特森的口头禅是“寿 衣没有口袋”，他和卡内基一样，在离开人世之前，把大量的财产都捐作善款了。帕特森的 收款机对文明的贡献非常巨大，他在改善和推广收款机方面所做的工作也非常有效，所以他 很可能配得起罗马诗人贺拉斯（Horace）自撰的墓志铭：“我并没有彻底地死去。” 由于职员存在这种为了获取回报而给糟糕的行为寻找正当理由的强烈倾向，所以除了帕 特森发明的控制现金的手段之外，企业还需要其他许多对策。也许最重要的对策是采用合理 的会计理论和会计实践。西屋电器（Westinghouse）的案例很好地证明了这一点。西屋电器 属下有一家信贷公司，这家子公司放出了许多和西屋电气其他业务毫无关联的贷款。西屋电 器的管理人员也许是因为妒忌通用电气，所以想要从对外贷款中获取更多利润。西屋电器的 会计实践是这样的，它主要根据从前为下属子公司提供贷款的经验来为这些对外贷款提取未 来的贷款坏账准备金，而它原来贷款给子公司则不太可能出现巨额的贷款损失。 有两类特殊的贷款理所当然地会给借款人造成大麻烦。第一类是面向房地产开发商的、 贷款额为建设费用的 95%的贷款，第二类是面向酒店的建筑贷款。正常来讲呢，如果有人愿 意按照酒店实际建筑成本的 95%贷款给开发商，那么贷款利率应该比一般利率高很多，因为 贷款损失的风险比一般贷款高出很多。所以按照合理的会计方法，在发放大量占到实际建筑 成本 95%的贷款给酒店开发商时，西屋电器应该在财务报表中将所有这些贷款记为零利润， 甚至记为损失，直到许多年后把贷款收回来为止。但是西屋电器并没有这么做，而是把大量 发放给酒店开发商的贷款等同于以前那些很少产生损失的贷款，把账做得很漂亮。这让负责 放贷的管理人员显得很优秀，因为财务报表显示出那些对外贷款带来了极高的收入。国际和 外部的会计师认可了西屋电器这种糟糕的做账方法，因为他们的所作所为就像那首老歌所唱 的：“谁给我面包吃，我就给谁唱歌。” 结果西屋电器损失了数十亿美元。这该怪谁呢？怪那个从电冰箱部门调到公司高层并突 然决定贷款给酒店开发商的家伙吗？还是怪那些会计和其他高层管理人员？（他们对一种几 乎肯定会使信贷管理人员产生偏激行为的激励机制坐视不管。）我认为最应该受到指责的是 那些创造出这种会计系统的会计人员和其他高层管理人员。这些人的所作所为无异于运钞公 司突然决定不用武装车辆押运现金，而改让手无寸铁的侏儒用敞开的篮子提着现金走过贫民 窟。 我希望我能够告诉你们，这种事情以后再也不会发生，但实际情况并非如此。在西屋电器东窗事发之后，通用电气旗下的投资银行基德尔·皮博迪（Kidder Peabody）采用了一种 愚蠢的电脑程序，致使债券交易员能够利用这种程序虚构出巨额利润。从此以后，许多公司 的会计工作变得更加糟糕了，也许最糟糕的例子就是安然（Enron）。 所以激励机制引起的偏见是非常重要的，（我们也有很重要的对策），比如说收款机和 合理的会计系统。但是当我在几年前翻阅心理学教科书的时候，我发现那些教科书虽然有 1000 页那么厚，却很少谈到激励机制引起的偏见，对帕特森或者合理的会计系统更是只字 不提。反正不知道怎么回事，心理学的概论课程完全没有提到激励机制引起的偏见及其对策， 尽管世界各地许多伟大的文学作品早就出色地描绘了激励机制引起的偏见，尽管企业界早就 有了应付这种偏见的对策。到最后，我得出的结论是，如果有的事情在生活中极为明显，但 很难通过容易做的、可重复的学术实验得到证明，那些心理学的寻菇犬就会忽略它。 有时候，其他学科对各种心理倾向表现出的兴趣，至少比心理学教科书中体现的要浓厚。 例如，那些站在雇主的立场考虑问题的经济学家早就为激励机制引起的偏见所产生的后果取 了一个名字：“代理成本”。从这个名字就能看出来，经济学家知道，就像稻谷总是被老鼠 吃掉一样，雇主的利益总是因为雇员不正当地把他们自己的利益摆在第一位而受损。雇主可 以采用的对策包括制定严格的内部审计制度，对败露的不轨行为进行严厉的公开惩处，使用 防止钻营的规章制度和收款机等机器。而站在雇员的立场来看，激励机制引起的偏见自然会 促使雇主对他们进行压迫：血汗工厂、危险的工作场所等等。若要解决职员遇到的这些糟糕 问题，不但工会要给雇主施加压力，政府也要采取行动，包括制定关于工资和工作时间的法 律、工作场所安全规章制度，采取一些便于工人组织工会的措施，还有完善工人的薪酬系统。 考虑到劳资双方由于激励机制引起的偏见而相互对峙，我们就不会奇怪中国人为什么会提出 阴阳对立的理论了。 激励机制引起的偏见无所不在，这造成了一些普遍而巨大的后果。例如，与有底薪的销 售员相比，单纯靠提成过日子的销售员更难保证不做不道德的事情。从另一方面来说，无底 薪的销售员的工作绩效会更加突出。因此，企业在制定销售员的薪酬制度时往往会面临两难 的选择。 自由市场资本主义这种经济体系取得极大成功的原因之一是，它防止了许多由激励机制 引起的偏见造成的不良影响。在自由市场经济活动的巨网中，绝大多数能够在残酷竞争中幸 存下来的资本家均非等闲之辈，他们会防止企业中出现任何浪费的行为，因为这是生死攸关 的事情。毕竟，他们要靠竞争性价格和他们的总体成本之间的利差来过日子，如果总体成本 超过了销售额，他们就难逃灭亡的厄运。如果用那些从政府支取薪水的职员来取代这些资本 家，那么市场经济的总体效率将会大大降低，因为每个取代资本家的职员在考虑为领取他的 薪水应该提供什么样的服务，以及在多大程度上屈服于其他不希望自己表现得更好的同事的 压力时会受到激励机制引起的偏见的影响。 激励机制引起的偏见的另外一个常见后果是，人们倾向于钻各种制度的空子，他们往往 在损人利己方面表现得极有创意。因此，几乎所有制度设计都必须具备防止钻空子的重要属 性。制度设计还需要遵守如下的原则：尽量避免奖励容易作假的事情。然而我们的议员和法 官，通常包括许多在优秀大学受过教育的律师，往往会忽略这个原则。社会因此而付出了巨 大的代价：道德风气败坏，效率下降，出现的不公平的成本转嫁和财富转移。如果高等学府 提高教育质量，传授更多的心理学知识，而学生也能吸收更多心理学知识，那么我们的立法机构和法院将会设计出更好的制度。 当然，现在驱使人们行动的主要奖励是金钱。只要一个毫无实质价值的筹码能够固定换 到一根香蕉，那么人们就可以对猴子进行训练，让它为了筹码而工作，仿佛筹码就是香蕉一 样。同样道理，人类也会为了钱而工作——而且会为了钱而更加卖命地工作，因为人类的金 钱除了可以换到食物之外，还能换到许许多多美好的东西，拥有或花掉金钱通常也会让人显 得有身份。此外，富人往往会出于习惯，更加努力地为金钱而工作，尽管他们早就不需要更 多的钱。总的来说，金钱是现代文明的主要驱动力，这在非人类动物的行为中是没有先例的。 金钱奖励也跟其他形式的奖励混合在一起。例如，有些人花钱买身份，有些人靠身份捞钱， 而有些人同时做这两件事。 虽然在各种奖励中金钱是最主要的，但它并非是惟一有效的奖励。人们也会为了性、友 谊、伴侣、更高的地位和其他非金钱因素而改变他们的行为和认知。 “祖母的规矩”也证实了奖励是非常有用的。它的效果特别突出，所以我在这里必须提 到它。你可以用这个规矩来成功地控制自己的行为，哪怕你使用的奖励品是你已经拥有的！ 实际上，许多拥有心理学博士学位的顾问经常要求商业组织教会管理人员用“祖母的规矩” 来管理他们自己的日常行为，借此改善它们的奖励系统。具体来说，祖母的规矩就是要求孩 子在吃甜点之前先把他们的胡萝卜吃掉。把它应用到商界，就是要求管理人员每天强迫他们 自己先完成他们不喜欢然而必要的任务，再奖励他们自己去处理那些他们喜欢的任务。考虑 到奖励的超级威力，这种做法是明智而合理的。此外，这个规矩也可以被用于生活中非商业 的部分。那些顾问强调在日常生活中采用这种做法并不是无意的。根据斯金纳的教导，他们 知道即时的奖励是最有效的。 当然，惩罚也强烈地影响到行为和认知，尽管它的弹性和效果不像奖励那么好。例如， 非法操纵物价的行为以前在美国很常见，因为遇到这种行为，政府往往是罚款了事。后来有 几个重要的企业高管被革职还被送往联邦监狱服刑。此后，操纵价格的行为就大大减少了。 陆军和海军部队在利用惩罚来改变行为方面做得很极端，这可能是因为它们需要士兵的 绝对服从。大约在恺撒的年代，欧洲有个部落，每当集结号角吹响时，最后一个到达的士兵 就会被杀死，于是没有人愿意跟这个部落打仗。乔治·华盛顿则把那些当逃兵的农场少年吊 死在 40 英尺高的地方，以此来警示其他那些可能想要逃跑的士兵。\n二、喜欢/热爱倾向\r#\r\r在遗传因素的作用之下，刚孵出来的小鹅在破壳而出后将会“热爱”并跟随第一个对它 和善的生物，那几乎总是它的母亲。但是，如果小鹅孵出来那一刻，出现的并不是母鹅，而 是一个人，那么小鹅将会“热爱”并跟随这个人，把他当做自己的母亲。 类似的是，刚出生的人类也会“天生就喜欢和热爱”对他好的人。也许最强烈的天生的 爱——随时准备好被诱发——就是人类的母亲对其孩子的爱。从另外一方面来说，老鼠同样 也有“爱护孩子”的行为，但只要删除某个基因，老鼠的这种行为就会消失。这意味着母老 鼠和小鹅一样，体内都有某种诱发基因。 就像小鹅一样，每个孩子不仅会受天性的驱使去喜欢和爱，而且也会在其亲生父母或者 养父母的家庭之外的社会群体中去喜欢和爱。现在这些极端的罗曼蒂克之爱在人类的远古时 代是不可能出现的。我们早期的人类祖先肯定会更像猿类，以一种非常原始的方式来挑选伴 侣。 除了父母、配偶和孩子之外，还有什么是人类天生就喜欢和热爱的呢？人类喜欢和热爱 被喜欢和被热爱。许多在情场上的胜负皆因他/她能否表现出额外的关怀和爱护，而一般来 讲，人类终身都会渴望得到许多和他毫无关系的他人的怜惜和欣赏。 喜欢/热爱倾向造成的一个非常具有现实意义的后果就是，它是一种心理调节工具，促 使人们：（1）忽略其热爱对象的缺点，对其百依百顺；（2）偏爱那些能够让自己联想起热 爱对象的人、物品和行动（这一点我们将会在“受简单联想影响的倾向”中讨论）；（3） 为了爱而扭曲其他事实。 喜欢/热爱会引发倾慕，反之亦然。倾慕也会引起并且强化喜欢/热爱倾向。这种“反馈 模式”一旦形成，通常会造成极端的后果，有时候会促使人们为了帮助自己心爱的人而不惜 故意自我毁灭。 喜欢/热爱和倾慕交织在一起并相互作用往往在许多和男女情感无关的领域具有巨大的 现实意义。例如，一个天生热爱值得敬仰的人和思想的人在生活中拥有巨大的优势。巴菲特 和我自己在这方面就很幸运，有时候让我们受益的是相同的人或者思想。有一个人对我们两 人都起到激励作用，他就是沃伦的叔叔，弗雷德·巴菲特（Fred Buffett）。他在杂货店有 干不完的活，但干活的时候总是很快乐，沃伦和我对他特别佩服。即使到今天，在我认识了 这么多人之后，我仍然认为弗雷德·巴菲特是最好的人，他让我变得更好。 那些有可能引起极度的热爱和倾慕的人往往能够发挥榜样的作用，造成非常好的效果， 这对社会政策有极大的借鉴意义。例如，吸引许多令人敬爱、值得倾慕的人进入教育行业就 是很明智的做法。 三、讨厌 三、讨厌 三、讨厌 三、讨厌/ / / /憎恨倾向 憎恨倾向 憎恨倾向 憎恨倾向 在一种与“喜欢/热爱倾向”相反的模式中，刚出生的人类也会“天生就讨厌和憎恨”对他 很坏的人。猿类和猴类的情况也是如此。 因此，战争在人类漫长的历史中几乎是持续不断的。例如，大多数美洲印第安人部落曾无休 止地相互征伐，有些部落偶尔会把俘虏带到家里的妇女面前，让她们也享受把俘虏折磨致死 的乐趣。尽管有了广为流布的宗教和发达先进的文明制度，现代社会的战争依然非常野蛮。 但我们也观察到，在当今的瑞士和美国，人类巧妙的政治制度将个体和群体的讨厌与仇恨 “引导”到包括选举在内的非致命模式当中。 但讨厌和仇恨并没有彻底消失。这些心理倾向是天生的，它们依然很强烈。所以英国有这样 的格言：“政治是正确地处理仇恨的艺术。”我们还看到美国非常流行那些对政敌进行诋毁 的广告。 就家庭的层面而言，我们经常可以看到这样的情况：有的人憎恨自己的兄弟姐妹，只要负担 得起相关费用，他就会不停地起诉他们。有个很风趣的人叫做巴菲特，他反复地向我解释， “穷人和富人的主要区别是，富人能够一辈子起诉他们的亲戚。”我父亲在奥马哈当律师的 时候也处理了许多这种家庭内部的仇恨。我在哈佛大学法学院念书时，那里的教授教我“物 权法”，然而丝毫没有提及家庭内部的兄弟争端。那时我就称这所法学院是一个非常脱离现 实的地方，它像古代拉牛奶车的马那样蒙上了“眼罩”。我估计现在哈佛大学法学院在上物 权法课程的时候依然没有提到兄弟之争。 讨厌/憎恨倾向也是一种心理调节工具，它能促使深陷其中的人们：（1）忽略其讨厌对象的 优点；（2）讨厌那些能够让自己联想起讨厌对象的人、物品和行动；（3）为了仇恨而扭曲 其他事实。 这种扭曲往往很极端，导致人们的认知出现了极大的偏差。当世贸中心被摧毁的时候，许多 巴基斯坦人立刻认为是印度人干的，而许多穆斯林则认为是犹太人干的。这种致命的扭曲通 常使得相互仇视的双方很难或者不可能握手言和。以色列和巴勒斯坦之间很难和解，因为一 方历史中记载的事实与另外一方历史中记载的事实大相径庭，很少有相同之处。\n四、避免怀疑倾向\r#\r\r人类的大脑天生就有一种尽快作出决定，以此消除怀疑的倾向。 这很容易理解，进化在漫长的岁月中促使动物倾向于尽快清除怀疑。毕竟，对于一只受到进 攻者威胁的猎物来说，花很长时间去决定该怎么做肯定是一件不妙的事情。人类的远祖也是 动物，这种避免怀疑倾向与其远祖的历史是很相符的。 人类通过尽快作出决定来消除怀疑的倾向十分明显，所以法官和陪审团必须采用抵制这种倾 向的行为。他们不能立刻作出判决，而是必须经过慎重的考虑。人们在做决定之前，必须让 自己习惯于戴上一个客观的“面具”。这个“面具”能够让人们客观地看待问题，这一点我 们将会在下面讨论“避免不一致性倾向”时看出来。 当然，明白人类具有强烈的避免怀疑倾向之后，逻辑上我们可以理解，至少在某些方面，人 们对宗教信仰的接受必然受到这种倾向的驱使。即使有人认为他自己的信仰来自神的启示， 他仍然需要思考其他人与此不一样的信仰。几乎可以肯定地说，避免怀疑倾向是最重要的答 案之一。 是什么引发了避免怀疑倾向呢？如果一个人没有受到威胁，又无需考虑任何问题，他是不会 急于通过作出决定来消除怀疑的。正如我们在后面谈到“社会认可倾向”和“压力影响倾 向”时将会看到的，引发避免怀疑倾向的因素通常是：（1）困惑；（2）压力。在面对宗教 问题的时候，这两种因素当然都存在。 因而，大多数人的自然状态就是需要有某种宗教信仰。这是我们观察到的事实。\n五、避免不一致性倾向\r#\r\r为了节省运算空间，人类的大脑会不愿意作出改变。这是一种避免不一致性的形式。在所有 的人类习惯中，无论是好习惯还是坏习惯，我们都能看到这种情况。没几个人能够列出许多 他们已经改掉的坏习惯，而有些人哪怕连一个都列举不出来。与此相反，几乎每个人都有大 量持续很久的坏习惯，尽管他们自己也知道这些习惯不好。考虑到这种情况，在许多时候我 们说三岁看老不是没有道理的。在狄更斯的《圣诞欢歌》中，可怜的雅各布·马里的鬼魂说： “我戴着我在生活中锻造的锁链。”他说的锁链就是那些起初轻微得难以察觉，在察觉之后 又牢固得无法打破的习惯。 在生活中维持许多好习惯，避免或者戒除许多坏习惯，这样的生活才是明智的。能够帮助人 们过上明智生活的伟大原则同样来自富兰克林的《穷理查年鉴》：“一盎司的预防比一磅的 治疗更值钱。”富兰克林这句话的部分含义是，由于避免不一致性倾向的存在，防止一种习 惯的养成要比改变它容易得多。 大脑的抗改变倾向还使得人们倾向于保留如下几种东西的原样：以前的结论、忠诚度、身份、 社会认可的角色等等。人类大脑在进化的过程中为什么会产生出这种伴随着快速消除怀疑倾 向的抗改变模式，现在还不是很清楚。我猜想这种抗改变模式主要是由如下几种因素的共同 作用引起的： （1）当人类的远祖还是动物的时候，迅速作出决定对生存来说是至关重要的，而这种抗改 变的模式有助于更快地作出决定。 （2）它使得我们的远祖能够通过群体协作而获得生存优势，因为如果每个人的反应总是不 停地改变，那么群体协作就会变得很困难。 （3）从人类刚开始识字到今天拥有复杂的现代生活，中间的时间并不是很长，它是进化在 这么短的时间内所能得到的最好的办法。 我们很容易可以看出来，如果任由避免怀疑倾向引发的快速决定和拒绝改变这种决定的倾向 相结合，将会使现代人的认知出现大量的错误。而且实际情况也确实如此。我们所有人都曾 和许多冥顽不灵的人打过交道，那些人死抱着他们在小时候形成的错误观念，直到进了坟墓 还不肯放手。 由于避免不一致性倾向引起的糟糕决定所造成的问题特别严重，所以我们的法院采用了一些 重要措施来对付它。例如，在作出决定之前，法官和陪审团必须先聆听辩方的长篇大论，让 辩方列举证据为自身辩护。这有助于防止法官和陪审团在判决的时候犯“第一结论偏见”的 错误。同样地，其他现代决策者通常要求各种团体在作出决定之前考虑反方的意见。 正确的教育应该是一个提高认知能力的漫长过程，以便我们变得足够有足够的智慧，能够摧 毁那些因拒绝改变倾向而被保留的错误想法。正如在世界顶尖大学任教的凯恩斯爵士（JohnKeynes）谈及他那些高级知识分子同事时指出的，新思想之所以很难被接受，并不是因为它 们本身太过复杂。新思想不被接受，是因为它们与原有的旧思想不一致。凯恩斯教授的言下 之意，就是人类头脑和人类卵子的运作方式非常相似。当一个精子进入卵子，卵子就会自动 启动一种封闭机制，阻止其他精子的进入。人类头脑强烈地趋向于与此相同的结果。 所以人们倾向于积累大量僵化的结论和态度，而且并不经常去检查，更不会去改变，即便有 大量的证据表明它们是错误的。 社会科学院系就会发生这样的情况，比如说，曾经有人认为弗洛伊德应该是加州理工学院心 理学教授的惟一人选。但自然科学院系也有人坚持错误的旧观点，不过这种情况比较少见， 也没那么严重。在这方面，诺贝尔奖得主、普朗克常数的发现者马克斯·普朗克最有发言权。 普朗克不但以科学研究闻名，而且他还说过一句著名的话，他说，甚至在物理学领域，激进 的新思想也很少被旧卫士所接受。与此相反，普朗克说，惟有新的一代成长起来，较少受到 旧理论毒害的他们才能接受新理论。实际上，这种“脑梗阻”的情况也曾经在某种程度上发 生于爱因斯坦身上。处在巅峰期的爱因斯坦非常善于摧毁他自己的思想，但是爱因斯坦晚年 却从没有完全接受量子力学。 查尔斯·达尔文是最成功地化解第一结论偏见的人之一。他很早就训练自己努力考虑任何有 可能证伪他的假说的证据，尤其是在他认为他的假说特别出色时更是如此。与达尔文相反的 做法现在被称为“确认偏见”，这是一个贬义词。达尔文采用这样的做法，是因为他清楚地 认识到人类会由于天生的避免不一致性倾向而犯认知错误。他本身是一个伟大的例子，证明 了心理学洞见一旦被正确地使用，就能够对人类历史上最优秀的思想有所贡献。 避免不一致性倾向给文明社会带来了许多良好的影响。例如，大多数人在生活中不会表现出 与他们的公共责任、新的或旧的公共认同等不一致的行动，而是会忠于职守，扮演好牧师、 医生、公民、士兵、配偶、教师、职员等角色。 避免不一致性倾向造成的结果之一是，人们在获取新身份的过程中作出的重大牺牲将会提高 他们对这种新身份的忠诚度。毕竟，如果他们认为某样东西并不好，却又为之作出重大牺牲， 那他们的行为将会显得和他们的思想很不一致。所以文明社会发明了许多庄严肃穆的入会仪 式，这些仪式通常是公开举行的，能够让新成员更加忠心。 庄严的仪式能够强化好的关系，也能够强化坏的关系。黑手党新成员因为“投名状”而对组 织更加忠诚，德国军官因为“血誓”而对希特勒更加忠心，这些都是避免不一致性倾向引发 的后果。 此外，这种倾向通常会使人们成为被某些有心机的人所操控的“受害者”，那些人能够通过 激发别人潜意识中的避免不一致性倾向而博取对方的好感。很少有人比本杰明·富兰克林更 精于此道。本杰明·富兰克林原本是费城一个默默无闻的小人物，当时他想得到某个重要人 物的垂青，于是经常设法请那个人帮他一些无关紧要的小忙，比如说借一本书给他之类的。 从那以后，那个大人物就更加欣赏和信任富兰克林了，因为一个不值得欣赏、不值得信任的 富兰克林与他借书给富兰克林的行为中暗示的赞许并不一致。 富兰克林这种操纵别人帮自己忙、从而令别人对自己产生好感的做法如果反过来使用，也会产生非常变态的效果。如果有个人受到操控，故意不停地去伤害另外一个人，那么他就会倾 向于贬低甚至憎恨那个人。这种避免不一致性倾向造成的效应解释了那句谚语所含的道理： “人永远不会忘记自己做过的坏事。”这种效应也解释了监狱中的看守和囚犯势不两立的现 象。许多看守会虐待囚犯，这种做法使他们更加讨厌和憎恨囚犯，而那些被当做畜牲一样的 囚犯又会反过来仇视看守。若要消除监狱中囚犯和看守之间相互敌视的心理，狱方应该持续 不断地致力于：（1）从一开始就防止虐待囚犯；（2）虐囚现象出现时要立刻予以制止，因 为它会像瘟疫那样蔓延扩散。如果在更有远见的教育的帮助下，我们对这个问题能够获得更 多的心理学认知，那么我们也许能够提高美国军队的整体效率。 避免不一致性倾向是如此强大，乃至一个人只要假装拥有某种身份、习惯或者结论，他自己 通常就会信以为真。因而，许多扮演哈姆雷特的演员会在某种程度上相信自己就是那位丹麦 王子。许多装好人的伪善者的道德水平确实得到了提高；许多假装公正无私的法官和陪审团 确实会做到公正无私；许多辩护律师或者其他观点的鼓吹者最后会相信他们从前只是假装相 信的东西。 避免不一致性倾向造成了“维持现状倾向”，给合理的教育造成了巨大的伤害，但它也带来 了许多好处。避免不一致性倾向导致教师不太可能把自己不相信的知识教给学生。所以临床 医学教育要求学生必须遵守“先看，后做，再教”的原则，只有自己看过和做过的，才能教 给别人。当然，教育过程有能力影响教师认知，这未必总是对社会有益。当这种能力流入政 见传播和邪教教义传播时，通常会给社会造成糟糕的影响。 例如，当年轻的学生被灌输了值得怀疑的政治理念，然后热诚地将这些理念推销给我们其他 人时，现代教育就会给社会造成很大的破坏。这种推销很少能使其他人信服。但是学生会把 他们所推销的东西变成他们自己的思维习惯，从而受到了永久的伤害。我认为那些有这种风 气的教育机构是很不负责任的。在一个人心智尚未完全成熟之前，不能给他的头脑套上一些 锁链，这是很重要的。\n六、好奇心倾向\r#\r\r哺乳动物天生就具有好奇心，但在所有非人类的哺乳动物里面，好奇心最强烈的是猿类和猴 类。而人类的好奇心又比他的这些近亲强烈得多。在发达的人类文明中，文化极大地提高了 好奇心在促进知识发展方面的效率。例如，雅典（及其殖民地亚历山德里亚）人的纯粹好奇 心推动了数学和科学的发展，而罗马人则对数学或科学几乎没有贡献。罗马人更专注于矿藏、 道路和水利等“实用”工程。最好的现代教育机构（这样的机构在许多地方都为数甚少）能 够增强人们的好奇心，而好奇心则能帮助人们防止或者减少其他心理倾向造成的糟糕后果。 好奇心还能让人们在正式教育结束很久之后依然拥有许多乐趣和智慧。\n七、康德式公平倾向\r#\r\r康德以其“绝对命令”（categorical imperative，又译为定言令式）而闻名。所谓绝对命 令是某种“黄金法则”，它要求人们遵守某些行为方式，如果所有人都遵守这些方式，那么 就能够保证社会制度对每个人来说都是最好的。应该说，在现代社会，每个有文化的人都表 现出并期待从别人那里得到康德所定义的这种公平。 美国一些规模不大的小区里面通常会有只能供一辆车通过的桥梁或者地道，在这些小区里 面，我们可以看到很多相互礼让的情况，尽管那里并没有交通标志或者信号灯。许多在高速 公路上开车的司机，包括我自己在内，通常会让其他想要超车的司机开到自己前面，因为那 是一种当他们想超车时也希望得到的礼貌行为。此外，在现代的文明社会中，陌生人之间有 文明排队的习惯，这样所有人都能按照“先来后到”的规矩得到服务。 此外，陌生人往往会自愿平分飞来横财，或者平摊意外损失。作为这种“公平分配”行为的 自然后果，当人们期待然而没有得到公平分配时，往往会表现出不满的情绪。 过去 300 年来，奴隶制度在世界各地基本上被废除了，这是很有意思的事情，因为在此之前， 奴隶制度已经和各大宗教共存了几千年。我认为康德式公平倾向是促成这种结果的主要因 素。\n八、艳羡 /妒忌倾向\r#\r\r如果某个物种在进化过程中经常挨饿，那么这个物种的成员在看到食物时，就会产生占有那 食物的强烈冲动。如果被看到的食物实际上已经被同物种的另外一个成员占有，那么这两个 成员之间往往会出现冲突的局面。这可能就是深深扎根在人类本性中的艳羡/妒忌倾向的进 化起源。 兄弟姐妹之间的妒忌明显是非常强大的，并且儿童往往比成年更容易妒忌自己的兄弟姐妹。 这种妒忌通常比因陌生人而发的妒忌更加强烈。这种结果也许是康德式公平倾向造成的。 各种神话、宗教和文学作品用一个又一个的事例来描写极端的艳羡/妒忌是如何引起仇恨和 伤害的。犹太文明认为这种心理倾向是极其邪恶的，摩西诫律一条又一条明令禁止妒忌。这 位先知甚至警告人们不要去贪图邻人的驴子。 现代生活中的妒忌也无所不在。例如，当某些大学的资金管理人员或者外科手术教授拿到远 远超过行业标准的薪水时，校园里会一片哗然。而现代的投资银行、律师事务所等地方的艳 羡/妒忌效应通常比大学教职员工中的此效应更加极端。许多大型律师事务所担心艳羡/妒忌 会造成混乱，所以它们历来给所有高级合伙人提供的薪酬都是差不多的，完全不管他们对事 务所的贡献有多大的差别。我同沃伦·巴菲特一起工作，分享对生活的观察已经几十年了， 听到他不止一次明智地指出：“驱动这个世界的不是贪婪，而是妒忌。” 由于这句话基本上是正确的，人们可能会认为心理学教科书会用大量的篇幅来谈论艳羡/妒 忌。但我翻读那三本心理学教科书的时候，并没有看到这样的内容。实际上，那些教科书的 索引上根本就找不到“艳羡”和“妒忌”这两个词。 毫不提及艳羡/妒忌的这种现象并不局限于心理学教科书。在你们参加过的大型学术研讨会 上，有人把成年人的艳羡/妒忌心理视为某些观点的原因吗？似乎存在一条普遍的禁忌，禁 止人们做出这样的声明。如果确实如此的话，是什么导致这条禁忌的出现呢？ 我的猜想是，这是因为人们普遍认为，说某种立场是由艳羡/妒忌促成的，是对采取那种立 场的人的极大侮辱，如果那个人所持的看法是正确的，而不是错误的，那就更是如此。说某 种立场受到妒忌的驱动被视为等同于说采取那种立场的人像儿童般不成熟，那么这种对妒忌 避而不谈的禁忌就完全可以理解了。 但这种普遍的禁忌就应该影响心理学教科书，导致心理学无法对一种普遍的重要现象作出正 确的解释吗？我的答案是否定的。\n九、回馈倾向\r#\r\r人们早就发现，和猿类、猴类、狗类和其他许多认知能力较为低下的动物相同，人类身上也 有以德报德、以牙还牙的极端倾向。这种倾向明显能够促进有利于成员利益的团体合作。从 这方面来讲，它跟许多社会性动物的基因程序很相似。 我们知道，在有些战争中，以牙还牙的心理倾向是很厉害的，它会让仇恨上升到很高的程度， 引发非常野蛮的行为。许多战争中没有活的俘虏，交战双方非把敌人置于死地不可，而且有 时候光是把敌人杀死还不够，比如说成吉思汗，他就不满足于只把敌人变成尸体。他坚持要 把敌人的尸体剁得粉碎。 拿成吉思汗和蚂蚁来作对比是很有意思的。成吉思汗对别人残暴无度，动辄加以杀戮，而蚂 蚁对其繁殖群体之外的同种类蚂蚁也表现出极端的、致命的敌意。如果和蚂蚁相比，成吉思 汗简直太和蔼可亲了。蚂蚁更加好斗，而且在打斗中更加残忍。实际上，E.O.威尔逊曾经开 玩笑地说，如果蚂蚁突然得到原子弹，所有蚂蚁将会在 18 个小时之内灭亡。人类和蚂蚁的 历史给我们的启发是：（1）大自然并没有普遍的法则使得物种内部以德报怨的行为能够推 动物种的繁荣；（2）如果一个国家对外交往时放弃以牙还牙的做法，这个国家是否有好的 前景是不确定的；（3）如果国与国之间都认为以德报怨是最好的相处之道，那么人类的文 化将要承担极大的重任，因为人类的基因是帮不上多少忙的了。 接下来我要谈谈战场之外的以牙还牙。现代有许多“路怒”（注：英文为 roadrage，是指 汽车驾驶人在行车时对别的汽车驾驶人所做出的攻击性的或过激的行为）事件，或者运动场 上也有因为受伤而引起的情绪失控事件，从这些事件可以看出来，在和平时代，人们之间的 敌意也可能非常极端。 化解过激的敌意的标准方法是，人们可以延迟自己的反应。我有个聪明的朋友叫做托马斯· 墨菲（注：托马斯·默菲，首都城市/美国广播公司前董事长和 CEO），他经常说：“如果 你觉得骂人是很好的主意，你可以留到明天再骂。” 当然，以德报德的心理倾向也是非常强烈的，所以它有时能够扭转以牙还牙的局面。有时候， 在战火正酣时，交战双方会莫名其妙地停止交火，因为有一方先做出了细微的友善的举动， 另外一方则投桃报李，就这样往复下去，最后战斗会停止很长一段时间。第一次世界大战期 间，开战双方在前线的战壕不止一次地这样停战，这令那些将军感到非常恼火。 很明显，作为现代社会繁荣的主要推动因素，商业贸易也得到人类投桃报李的天性的很大帮 助。利己利人的原则和回馈倾向相结合，会引起许多有建设性的行为。婚姻生活中的日常交 流也得到回馈倾向的帮助，如果没有回馈倾向的帮助，婚姻会丧失大部分的魅力。 回馈倾向不但能够和激励机制的超级威力结合起来产生好的结果，它还跟避免不一致性倾向 共同促成了以下结果：（1）人们履行在交易中作出的承诺，包括在婚礼上作出的忠于对方 的承诺；（2）牧师、鞋匠、医生和其他所有职业人士恪守职责，做出正确的行为。 与其他心理倾向和人类翻跟斗的能力相同，回馈倾向很大程度上是在潜意识层面发挥作用 的。所以有些人能够把这种倾向变成强大的力量，用来误导他人。这种情况一直都有发生。 例如，当汽车销售员慷慨地把你请到一个舒服的地方坐下，并端给你一杯咖啡时，你非常有 可能因为这个细小的礼节性行为当了一回冤大头，买车的时候多付了 500 美元。这远远不是 销售员用小恩小惠所取得的最成功的销售案例。然而，在这个买车的场景中，你将会处于劣 势，你将会从自己口袋里额外掏出 500 美元。这种潜在的损失多少会让你对销售员的示好保 持警惕。 但假如你是采购员，花的钱来自别人——比如说某个有钱的雇主，那么你就不太会因为要额 外付钱而反感销售员的小恩小惠，因为多付出的成本是别人的。在这样的情况下，销售员通 常能够将他的优势最大化，尤其是当采购方是政府时。 因此，聪明的雇主试图压制从事采购工作的职员的回馈倾向。最简单的对策最有效：别让他 们从供应商那里得到任何好处。山姆·沃尔顿（注：山姆·沃尔顿，1918—1992，美国零售 商沃尔玛公司的创办人）赞同这种彻底禁止的思想。他不允许采购员从供应商那里接受任何 东西，哪怕是一个热狗也不行。考虑到大多数回馈倾向是在潜意识层面发挥作用，沃尔顿的 政策是非常正确的。如果我是国防部的负责人，我会在国防部实行沃尔顿的政策。 在一个著名的心理学实验中，西奥迪尼出色地证明“实验员”有能力通过诱发人们潜意识的 回馈倾向来误导他们。 展开实验的西奥迪尼吩咐他的实验员在他所在的大学校园里闲逛，遇到陌生人就请他们帮忙 带领一群少年犯去动物园参观。因为这是在大学校园里发生的，所以在他们抽中的大量样本 中，每六个人有一个真的同意这么做。得到这个 1/6 的统计数据之后，西奥迪尼改变了实验 的程序。他的实验员接下来又在校园里闲逛，遇到陌生人就要求他们连续两年每周花大量时间去照顾少年犯。这个荒唐的请求得到了百分之百的拒绝。但实验员跟着又问：“那么你愿 意至少花一个下午带那些少年犯去参观动物园吗？”这将西奥迪尼原来的接受率从 1/6 提 高到了 50%——整整 3 倍。 西奥迪尼的实验员所做的是作出小小的让步，于是对方也作出了小小的让步。由于西奥迪尼 的实验对象在潜意识中作出了这种回馈式的让步，所以有更多的人非理性地答应带领少年犯 去参观动物园。这位教授发明了如此巧妙的实验，如此强有力地证明了某个如此重要的道理， 他理应得到更广泛的认可。实际上，西奥迪尼确实得到了这种认可，因为许多大学向他学习 了大量知识。 回馈倾向为什么如此重要呢？假如有许多法学院学生毕业后走进社会，代表客户到处去谈 判，却完全不了解西奥迪尼的实验所展现的潜意识思维过程的本质，那该是多么愚蠢的事。 然而这种蠢事在世界各地的法学院已经发生了好几十年，实际上，是好几个世代。这些法学 院简直就是在误人子弟。它们不知道也不愿意去传授山姆·沃尔顿了解得十分清楚的东西。 回馈倾向的重要性和效用也可以从西奥迪尼对美国司法部长批准偷偷进入水门大厦的愚蠢 决定的解释中看出来。当时有个胆大包天的下属提议为了谋取共和党的利益，不妨使用妓女 和豪华游艇相结合的手段。这个荒唐的请求遭到拒绝之后，那下属作出了很大的让步，只要 求得到批准，以便偷偷摸摸地去盗窃，于是司法部长默许了。西奥迪尼认为，潜意识的回馈 倾向是导致美国总统在水门丑闻中下台的重要因素。我也持相同的观点。回馈倾向微妙地造 成了许多极端而危险的结果，并且这种情况绝不少见，而是一直以来都有很多。 人类对回馈倾向的认识，在被付诸实践数千年之后，已经在宗教领域干了许多令人毛骨悚然 的坏事。特别令人发指的例子来自腓尼基人（Phoenicians）和阿兹台克人（Aztecs），他 们会在宗教仪式上将活人杀死，作为牺牲品供奉给他们的神灵。我们不应该忘记近如在迦太 基之战（注：英文为 Punic Wars，也称布匿战争，是罗马人在向地中海扩张中于公元前 264 年—公元前 146 年同迦太基人之间的三次战役）中，文明的罗马人由于担心战败，重操了几 次杀人献祭的旧业。从另外一方面来说，人们基于回馈心理，认为只要行为端正，就能从上 帝那里得到帮助，这种观念有可能一直以来都是非常具有建设性的。 总的来说，我认为无论是在宗教之内还是在宗教之外，回馈倾向给人类带来的贡献远远比它 造成的破坏要多。而就利用心理倾向来抵消或者防止其他一种或多种心理倾向引起的糟糕后 果而言，比如说，就利用心理干预来终止化学药物依赖（戒毒或酒）而言，回馈倾向往往能 够起到很大的帮助作用。 人类生活中最美好的部分也许就是情感关系，情感关系中的双方更感兴趣的是如何取悦对 方，而非如何被取悦——在回馈倾向的作用之下，这样的情况并不算罕见。 在结束离开回馈倾向的讨论之前，我们最后要讨论的是人类普遍受到负罪感折磨的现象。如 果说负罪感有其进化基础的话，我相信最有可能引起负罪感的因素是回馈倾向和奖励超级反 应倾向之间的精神冲突。奖励超级反应倾向是一种推动人们百分百地去享受好东西的心理倾 向。当然，人类的文化通常极大地促使这种天生的倾向受到负罪感的折磨。具体地说，宗教 文化通常给人们提出一些很难做到的道德要求和奉献要求。我家附近住着一位很有个人魅力 的爱尔兰天主神父，他经常说：“负罪感可能是那些犹太人发明的，但我们天主教徒完善了它。”如果你们像我和这位神父一样，都认为负罪感总体上是利多于弊的，那么你们就会和 我一样对回馈倾向存有感激之心，无论你们觉得负罪感是多么地令人不愉快。 十、受简单联想影响的倾向 十、受简单联想影响的倾向 十、受简单联想影响的倾向 十、受简单联想影响的倾向斯金纳研究过的标准条件反射是世界上最常见的条件反射。在这种条件反射中，创造出新习 惯的反射行为是由以前得到的奖励直接引起的。例如，有个人买了一罐名牌鞋油，发现这种 鞋油能把鞋擦得特别亮，由于这种“奖励”，下次他需要再买鞋油时，还是买了这个牌子。 但条件反射还有另外一种，反射行为是由简单的联想引发的。例如，许多人会根据从前的生 活经验得到这样的结论：如果有几种同类产品同时在出售，价格最高的那种质量最好。有的 普通工业品销售商明白这个道理，于是他通常会改变产品的外包装，把价格提得很高，希望 那些追求高质量的顾客会因此而上当，纯粹由于他的产品及其高价格引起的联想而成为购买 者。这种做法通常对促进销量很有帮助，甚至对提高利润也很有作用。例如，长期以来，定 价很高的电动工具就取得了很好的销售业绩。如果要销售的产品是油井底下用的油泵，那么 这种高定价的做法起到的作用会更大。提高价格的销售策略对奢侈品而言尤其有效，因为那 些付出更高价格的顾客因此而展现了他们的良好品味和购买力，所以通常能够获得更高的地 位。 即使是微不足道的联想，只要加以仔细的利用，也能对产品购买者产生极端的特殊影响。鞋 油的目标购买者或许很喜欢漂亮女孩。所以他选择了那种外包装上印着漂亮女孩的鞋油，或 者他最近看到由漂亮女孩做广告的那种鞋油。 广告商了解单纯联想的威力。所以你们不会看到可口可乐的广告中有儿童死亡的场面；与之 相反，可口可乐广告画面中的生活总是比现实生活更加快乐。 同样地，军乐团演奏的音乐那么动听也绝对不是偶然的。人们听到那种音乐，就会联想起部 队生活，所以它有助于吸引人们入伍，并让士兵留在军队里。大多数军队懂得如何用这种成 功的方法来使用简单联想。 然而，简单联想造成的最具破坏性的失算往往并不来自广告商和音乐提供者。 有的东西碰巧能让人联想起他从前的成功，或者他喜欢和热爱的事物，或者他讨厌和憎恨的 事物（包括人们天生就讨厌的坏消息）。有些最严重的失算是由这样的东西引起的。 若要避免受到对从前之成功的简单联想误导，请记住下面这段历史。拿破仑和希特勒的军队 在其他地方战无不胜，于是他们决定侵略俄罗斯，结果都是一败涂地。现实生活中有许多事 例跟拿破仑和希特勒的例子差不多。例如，有个人愚蠢地去赌场赌博，竟然赢了钱。这种虚 无缥缈的关联促使他反复去那个赌场，结果自然是输得一塌糊涂。也有些人把钱交给资质平 庸的朋友去投资，碰巧赚了大钱。尝到甜头之后，他决定再次尝试这种曾经取得成功的方法 ——结果很糟糕。 避免因为过去的成功而做蠢事的正确对策是：（1）谨慎地审视以往的每次成功，找出这些 成功里面的偶然因素，以免受这些因素误导，从而夸大了计划中的新行动取得成功的概率； （2）看看新的行动将会遇到哪些在以往的成功经验中没有出现的危险因素。 喜欢和热爱会给人们的思想带来伤害，这可以从下面的事例看出来。在某桩官司中，被告人 的妻子原本是一名非常值得尊敬的女性，可是却做出了明显错误的证词。那位著名的控方律 师不忍心攻击这位如此可敬的女士，然而又想摧毁其证词的可信性。于是他摇摇头，悲伤地 说：“我们该如何看待这样的证词呢？答案就在那首老歌里面： 丈夫是什么样， 妻子就会是什么样。 她嫁给了小丑， 小丑的卑鄙无耻， 拖累了她。 法官因此没有采信这位女士的证词。他们轻而易举地看出她的认知已经受到爱情的强烈影 响。我们常常看到，有些母亲受到爱的误导，在电视镜头面前声泪俱下，发自内心地认为她 们那些罪孽深重的儿子是清白无辜的。 关于这种被称之为爱的联想在多大程度上会令人盲目，人们的意见不尽相同。在《穷理查年 鉴》中，富兰克林提议：“结婚前要睁大双眼看清楚，结婚后要睁一只眼闭一只眼。”也许 这种“睁一只眼闭一只眼”的方法是正确的，但我喜欢一种更难做到的办法：“实事求是地 看清现实，可还是去爱。” 憎恨和讨厌也会造成由简单联想引起的认知错误。在企业界，我常常看到人们贬低他们讨厌 的竞争对手的能力和品德。这是一种危险的做法，通常不易察觉，因为它是发生在潜意识层 面的。 有关某个人或者某个讨厌结果的简单联想也会造成另外一种常见的恶果，这可以从“波斯信 使综合症”中看出来。古代波斯人真的会把信使杀掉，而这些信使惟一的过错是把真实的坏 消息（比如说战败）带回家。对于信使来说，逃跑并躲起来，真的要比依照上级的心愿完成 使命安全得多。 波斯信使综合症在现代生活中仍然很常见，尽管不再像原来那样动辄出人命。在许多职业里， 成为坏消息传递者真的是很危险的。工会谈判专家和雇主代表通常懂得这个道理，它在劳资 关系中引发了许多悲剧。有时候律师知道，如果他们推荐一种不受欢迎然而明智的解决方案， 将会招来客户的怨恨，所以他们会继续把官司打下去，乃至造成灾难性的后果。即使在许多 以认知程度高而著称的地方，人们有时候也会发现波斯信使综合症。例如，几年前，两家大 型石油公司在得克萨斯的审判庭打起了官司，因为它们合作开发西半球最大油田的协议中有 含糊的地方。我猜想他们打官司的起因是某位法律总顾问先前发现合同有问题，却不敢把坏 消息告诉一位刚愎自用的 CEO。 哥伦比亚广播公司（CBS）在其巅峰期行将结束的时候就以波斯信使综合症闻名，因为董事 会主席佩利（注：William Samuel Paley，1901—1990，CBS 前董事长及执行长，他将 CBS 从一个小广播公司发展成为美国三大广播电视网之一）特别讨厌那些告诉他坏消息的人。结果是，佩利生活在谎言的壳子之中，一次又一次地作出了错误的交易，甚至用大量哥伦比亚 广播公司的股票去收购一家后来很快被清盘的公司。 要避免像哥伦比亚广播公司那样因波斯信使综合症而自食其果，正确的对策是有意识地，养 成欢迎坏消息的习惯。伯克希尔有一条普遍的规矩：“有坏消息要立刻向我们汇报。只有好 消息是我们可以等待的。”还有就是要保持明智和消息灵通，那就是让人们知道你有可能从 别处听说坏消息，这样他们就不敢不把坏消息告诉你了。 受简单联想影响的倾向通常在消除以德报德的自然倾向方面有惊人的效果。有时候，当某个 人接受恩惠时，他所处的境况可能很差，比如说穷困潦倒、疾病缠身、饱受欺凌等等。除此 之外，受惠者可能会妒忌施惠者优越的处境，从而讨厌施惠者。在这样的情况下，由于施惠 的举动让受惠者联想起自身的不幸遭遇，受惠者不但会讨厌那个帮助他的人，还会试图去伤 害他。这解释了那个著名反应（有人认为是亨利·福特说的）：“这人为什么如此憎恨我呢？ 我又没有为他做过什么事情。”我有个朋友，现在姑且叫他“格罗兹”吧，乐善好施的他有 过一次啼笑皆非的遭遇。格罗兹拥有一座公寓楼，他先前买下来，准备将来用那块地来开发 另外一个项目。考虑到这个计划，格罗兹对房客非常大方，向他们收取的租金远远低于市场 价。后来格罗兹准备拆掉整座大楼，在举行公开听证会的时候，有个欠了许多租金没有交的 房客表现得特别气愤，并在听证会上说：“这个计划太让人气愤了。格罗兹根本就不需要更 多的钱。我清楚得很，因为我就是靠格罗兹的奖学金才念完大学的。” 最后一类由简单联想引起的严重思维错误出现在人们经常使用的类型化思考中。因为彼得知 道乔伊今年 90 岁，也知道绝大多数 90 岁的老头脑袋都不太灵光，所以彼得认为老乔伊是个 糊涂蛋，即使老乔伊的脑袋依然非常好使。或者因为阿珍是一位白发苍苍的老太太，而且彼 得知道没有老太太精通高等数学，所以彼得认为阿珍也不懂高等数学，即使阿珍其实是数学 天才。这种思考错误很自然，也很常见。要防止犯这种错误，彼得的对策并非去相信 90 岁 的人脑袋总的来说跟 40 岁的人一样灵活，或者获得数学博士学位的女性和男性一样多。与 之相反，彼得必须认识到趋势未必能够正确地预测终点，彼得必须认识到他未必能够依据群 体的平均属性来准确地推断个体的特性。否则彼得将会犯下许多错误，就像某个在一条平均 水深 18 英寸的河流中被淹死的人那样。\n十一 、简单的、避免痛苦的心理否认倾向\r#\r\r我最早遇到这种现象，是在二战期间。当时我们家有位世交的儿子学习成绩非常出色，在体 育运动方面也非常有天赋，可惜他乘坐的飞机在大西洋上空失事，再也没有回来。他母亲的 头脑十分正常，但她拒绝相信他已经去世。那就是简单的、避免痛苦的心理否认。现实太过 痛苦，令人无法承受，所以人们会扭曲各种事实，直到它们变得可以承受。我们或多或少都 有这种毛病，而这经常会引发严重的问题。这种倾向造成的最极端的后果经常跟爱情、死亡 和对化学物质（酒精、毒品等）的依赖有关。 当否认是被用来让死亡更容易接受时，这种行为不会遭到任何批评。在这样的时刻，谁会忍 心落井下石呢？但有些人希望在生活中坚持下面这条铁律：“未必要有希望才能够坚持。” 能够做到这一点的人是非常可敬的。 对化学物质的依赖通常会导致道德沦丧，成瘾的人倾向于认为他们的处境仍然很体面，仍然 会有体面的前途。因此，他们在越来越堕落的过程中，会表现得极其不现实，对现实进行极 端的否认。在我年轻的时代，弗洛伊德式疗法对逆转化学物质依赖性完全没有效用，但现在 酒瘾戒除组织通过造成数种心理倾向一起来对抗酒瘾，能够把戒除率稳定在 95%。然而整个 治疗过程都很难，很耗费精力，而且 50%的成功率也意味着 50%的失败率。人们应该避免任 何有可能养成化学物质依赖性的行为。由于这种依赖性会造成极大的伤害，所以哪怕只有很 少的概率会染上，也应该坚决避免。 十二、自视过高的倾向 十二、自视过高的倾向 十二、自视过高的倾向 十二、自视过高的倾向 自视过高的人比比皆是。这种人会错误地高估自己，就好像瑞典有 90%的司机都认为他们的 驾驶技术在平均水平之上。这种误评也适用于人们的主要“私人物品”。人们通常会过度称 赞自己的配偶。人们通常不会客观地看待自己的孩子，而是会给出过高的评价。甚至人们的 细小私人物品也一般会得到过度的称赞。人们一旦拥有某件物品之后，对该物品的价值评估 就会比他们尚未拥有该物品之前对其的价值评估要高。这种过度高估自己的私人物品的现象 在心理学里面有个名称：“禀赋效应”。人们作出决定之后，就会觉得自己的决定很好，甚 至比没作出这种决定之前所认为的还要好。 当自视过高的倾向往往会使人们偏爱那些和自己相似的人。有些心理学教授们用很好玩的 “丢钱包”实验证明了这种效应。他们的实验全都表明，如果捡到钱包的人根据钱包里的身 份线索发现失主跟自己很相似，那么他把钱包还给失主的可能性是最高的。由于人类的这种 心理特性，相似的人组成的派系群体总是人类文化中非常有影响的一部分，甚至在我们明智 地试图消除其最糟糕的效果之后仍是如此。 现代生活中有一些非常糟糕的派系群体，它们被一群自视过高的人把持，并只从那些和他们 非常相似的人中挑选新成员，现代生活可能就会出现一些非常糟糕的结果。因此，如果某个 名牌大学的英语学系学术水平变得很低下，或者某家经纪公司的销售部门养成了经常诈骗的 习惯，那么这些问题将会有一种越来越糟糕的自然倾向，而且这种倾向很难被扭转。这种情 况也存在于那些变得腐败的警察部门、监狱看守队伍或者政治群体中，以及无数其他充满了 坏事和蠢事的地方，比如说美国有些大城市的教师工会就很糟糕，它们不惜伤害我们的儿童， 力保那些本该被开除的低能教师。因此，我们这个文明社会中最有用的成员就是那些发现他 们管理的机构内部出问题时愿意“清理门户”的负责人。 自然了，各种形式的自视过高都会导致错误。怎么能不会呢？ 让我们以某些愚蠢的赌博投注为例。在买彩票时，如果号码是随机分配的，下的赌注就会比 较少，而如果号码是玩家自己挑选的，下的赌注就会比较多。这是非常不理性的。这两种选 号法中奖的概率几乎是完全相同的，玩家中奖的机会都是微乎其微的。现代人本来不会买那 么多彩票的，但国家彩票发行机构利用了人们对自选号码的非理性偏好，所以他们每次都很 愚蠢地买了更多的彩票。 那种过度称赞自己的私人物品的“禀赋效应”强化了人们对自己的结论的热爱。你们将会发 现，一个已经在商品交易所购买了五花肉期货的人现在愚蠢地相信，甚至比以前更加强烈地 相信，他的投机行为具有许多优点。 有些人热爱体育运动，自以为对各个队伍之间的相对优势十分了解，这些人会愚蠢地去买体 育彩票。和赛马博彩相比，体育彩票更容易上瘾——部分原因就在于人们会自动地过度赞赏 他自己得出的复杂结论。 在讲究技巧的比赛——比如说高尔夫球赛或者扑克赌牌比赛——中，人们总是一次又一次地 挑选那些水平明显比自己高得多的玩家作对手，这种倾向同样会产生极端的事与愿违的后 果。自视过高的倾向降低了这些赌徒在评估自己的相对能力时的准确性。 然而更具有负面作用的是，人们通常会高估自己未来为企业提供的服务质量。他们对这些未 来贡献的过度评价常常会造成灾难性的后果。 自视过高往往会导致糟糕的雇佣决定，因为大部分雇主高估了他们根据面试印象所得结论的 价值。防止这种蠢事的正确对策是看轻面试的印象，看重求职者以往的业绩。 我曾经正确地选择了这种做法，当时我担任某个学术招聘委员会的主席。我说服其他委员别 再对求职者进行面试，只要聘用那个书面申请材料比其他求职者优秀很多的人就可以了。有 人对我说，我没有尊重“学术界的正常程序”，我说我才是真正尊重学术的人，因为学术研 究表明，从面试中得来的印象，其预测价值很低，我正在应用这个成果。 人们非常有可能过度地受到当面印象的影响，因为从定义上来讲，当面印象包括了人们的主 动参与。由于这个原因，现代企业在招聘高层管理人员时，如果遇到的求职者能说会道，那 么就有可能遭遇很大的危险。依我之见，惠普当年面试口齿伶俐的卡莉·菲奥里纳（注：卡 莉·菲奥里纳，1954—，1999 年至 2005 年期间担任惠普公司 CEO），想任命她为新总裁时， 就面临着这样的危险。我认为：（1）惠普选择菲奥里纳女士是一个糟糕的决定；（2）如果 惠普懂得更多的心理学知识，采取了相应的预防措施，它就不会作出这个糟糕的决定。 托尔斯泰的作品中有一段著名的文字显示了自视过高的威力。在托尔斯泰看来，那些恶贯满 盈的罪犯并不认为他们自己有那么坏。他们或者认为（1）他们从来没有犯过罪；或（2）考 虑到他们在生活中遭遇的压力和种种不幸，他们做出他们所做过的事，变成他们所成为的人， 是完全可以理解和值得原谅的。 “托尔斯泰效应”的后半部分，也就是人们不去改变自己，而是为自己那些可以改变的糟糕 表现寻找借口，是极其重要的。由于绝大多数人都会为可以改变的糟糕表现寻找太多荒唐的 理由，以此来试图让自己心安理得，所以采用个人和机构的对策来限制这种愚蠢的观念造成 的破坏是非常有必要的。从个人层面来说，人们应该试图面对两个事实：（1）如果一个人 能够改正糟糕的表现，却没有去改正，而是给自己找各种各样的借口，那他就是品德有问题， 而且将会遭受更多的损失；（2）在要求严格的地方，比如说田径队或者通用电气，如果一 个人不做出应有的表现，而是不停地找借口，那么他迟早肯定会被开除。而机构化解这种“托 尔斯泰效应”的对策是：（1）建设一种公平的、唯才是用的、要求严格的文化，外加采用 能够提升士气的人力资源管理方法；（2）开除最糟糕的不守规矩者。当然啦，如果你不能 开除，比如说你不能“开除”你的孩子，你必须尽最大努力去帮助这个孩子解决问题。我听 过一个教育孩子的故事特别有效，那个孩子过了 50 年还对学到的教训念念不忘。那孩子后 来变成了南加州大学音乐学院的院长。他小时候曾经从他父亲的老板的仓库里偷糖果吃，被 他父亲发现之后辩解说，他打算过会就放回去。他父亲说：“儿子，你还不如想要什么就拿 什么，然后在每次这么做的时候，都把自己称为小偷。” 避免因为自视过高而做傻事的最佳方法是，当你评价你自己、你的亲人朋友、你的财产和你 过去未来的行动的价值时，强迫自己要更加客观。这是很难做到的，你也无法做到完全客观， 但比起什么都不做，放任天生的心理倾向不受约束地发展，却又好得多。 虽然自视过高通常会给认知带来负面的影响，但也能引起某些离奇的成功，因为有时过度自 信刚好促成了某项成功。这个因素解释了下面这句格言：“千万别低估那些高估自己的人。” 当然，有时候高度的自我称赞是正确的，而且比虚伪的谦虚要好得多。此外，如果人们因为 出色地完成了任务，或者拥有美好的人生而感到骄傲，那么这种自我赞赏是一种非常有建设 性的力量。如果没有这种自豪感，会有更多的飞机坠毁。“骄傲”是另外一个被大多数心理 学教科书漏掉的词汇，这种疏漏并不是一个好主意。把《圣经》中那个关于法利赛人和税吏 的寓言解读为对骄傲的谴责也并不是一个好主意。 在所有有益的骄傲中，也许最值得钦佩的是因为自己值得信赖而产生的骄傲。此外，一个人 只要值得信赖，哪怕他选的道路崎岖不平，他的生活也会比那些不值得信赖的人要好得多。\n十三、过度乐观倾向\r#\r\r大约在基督出生之前 300 年，古希腊最著名的演说家德摩斯梯尼说：“一个人想要什么，就 会相信什么。” 从语法上来分析，德摩斯梯尼这句话的含义是，人们不但会表现出简单的、避免痛苦的心理 否认，而且甚至在已经做得非常好的时候，还会表现出过度的乐观。 看到人们兴高采烈地购买彩票，或者坚信那些刷卡支付、快递上门的杂货店将会取代许多现 金付款、自提货物的高效超市，我认为那位希腊演说家是正确的。人们就算并不处在痛苦之 中，或者遭到痛苦的威胁，也确实会有过度乐观的心理。 解决愚蠢的乐观主义的正确方法是通过学习，习惯性地应用费马和帕斯卡的概率论。在我年 轻时，高二的学生就会学到这种数学知识。自然进化为你们的大脑提供的经验法则是不足以 应付危机的。就好比你们想成为高尔夫球员，你们不能使用长期的进化赋予你的挥杆方式， 而必须掌握一种不同的抓杆和挥杆方法，这样才能成为好的高尔夫球员。\n十四、被剥夺超级反应倾向\r#\r\r一个人从 10 美元中得到的快乐的分量，并不正好等于失去 10 美元给他带来的痛苦的分量。 也就是说，失去造成的伤害比得到带来的快乐多得多。除此之外，如果有个人即将得到某样 他非常渴望的东西，而这样东西却在最后一刻飞走了，那么他的反应就会像这件东西他已经 拥有了很久却突然被夺走一样。我用一个名词来涵括人类对这两种损失经验（损失已有的好 处和损失即将拥有的好处）的自然反应，那就是被剥夺超级反应倾向。 人们在表现出被剥夺超级反应倾向的过程中，经常会因为小题大作而惹来麻烦。他往往会对 眼前的损失斤斤计较，而不会想到那损失也许是无关紧要的。例如，一个股票账户里有 1000 万美元的人，通常会因为他钱包里的 300 美元不小心损失了 100 美元而感到极端的不快。 芒格夫妇曾经养过一条温顺而善良的狗，这条狗会表现出犬类的被剥夺超级反应倾向。只有 一种办法能让这条狗咬人，那就是在给它喂食的时候，把食物从它嘴里夺走。如果你那么做 的话，这条友善的狗会自动地咬你。它忍不住。对于狗来说，没有什么比咬主人更愚蠢的事 情。但这条狗没办法不愚蠢，它天生就有一种自动的被剥夺超级反应倾向。 人类和芒格家的狗差不多。人们在失去——或者有可能失去——财产、爱情、友谊、势力范 围、机会、身份或者其他任何有价值的东西时，通常会做出不理性的激烈反应，哪怕只失去 一点点时也是如此。因此，因为势力范围受到威胁而发生的内耗往往会给整个组织造成极大 的破坏。正是由于这个因素和其他因素的存在，杰克·韦尔奇长期致力于扫荡通用电气中的 官僚作风是很明智的行为。很少企业领袖在这方面做得比杰克·韦尔奇更好。 被剥夺超级反应倾向通常能够保护意识形态观点或者宗教观点，因为它能够激发直接针对那 些公开质疑者的讨厌/憎恨心理倾向。这种情况会发生，部分原因在于，这些观点现在高枕 无忧，并拥有强大的信念维护体系，而质疑者的思想若是得到扩散，将会削弱它们的影响力。 大学的人文社科院系、法学院和各种商业组织都表现出这种以意识形态为基础的团体意识， 他们拒绝几乎所有和它们自身的知识有矛盾的外来知识。当公开批评者是一位从前的信徒， 那么敌意会更加强烈，原因有两个：（1）遭到背叛会激发额外的被剥夺超级反应倾向，因 为失去了一名同志；（2）担心那些矛盾的观点会特别有说服力，因为它们来自一个先前的 同志。前面提到的这些因素有助于我们理解古代人对异教徒的看法。数百年来，正统教会基 于这样的理由杀害了许许多多异教徒，而且在杀死他们之前通常还会施以酷刑，或者干脆就 将他们活活烧死。 极端的意识形态是通过强烈的方式和对非信徒的极大敌意得到维护的，这造成了极端的认知 功能障碍。这种情况在世界各地屡见不鲜。我认为这种可悲的结果往往是由两种心理倾向引 起的：（1）避免不一致性倾向；（2）被剥夺超级反应倾向。 有一种办法能够化解这种受到刻意维护的团体意识，那就是建设一种极端讲礼貌的文化，哪 怕双方的意识形态并不相同，但彼此之间要保持彬彬有礼，就像现在美国最高法院的行为那 样。另外一种方法是刻意引进一些对现在的团体意识抱怀疑态度而又能力突出、能言善辩的人。德雷克·伯克（注：德雷克·伯克，1930—，美国律师和教育家，哈佛大学前校长）曾 经成功地改变了一种造成糟糕后果的团体思维。他在担任哈佛大学校长期间，否决了不少由 哈佛法学院那些意识形态很强的教授所推荐的终身教职人选。 一个一百八十度的景观哪怕损失了一度，有时候也足够引起让邻居反目成仇的被剥夺超级反 应倾向。我买过一座房子，原来的房东和他的邻居因为他们之中一人新种了一颗小树苗而结 下深仇大恨。 正如这两个邻居的事例所展现的，在某些规划听证会上，有些邻居为了某些细枝末节的事情 而吵得不可开交，表现出非理性的、极端的被剥夺超级反应，看到这样的事情可不会令人愉 快。这种糟糕的行为促使有些人离开了政府规划部门。我曾经向一位工匠买过高尔夫球杆， 他原本是个律师。当我问他以前从事哪方面的法律工作时，我以为我会听到他说“婚姻法”， 但他的答案是“规划法”。 被剥夺超级反应倾向对劳资关系的影响是巨大的。第一次世界大战之前发生的劳资纠纷中的 死亡事件，绝大多数是在雇主试图削减工资时造成的。现在出人命的情况比较少见，但更多 的公司消失了，因为激烈的市场竞争只提供两种选择，要么工资降低——而这是不会得到同 意的——要么企业死掉。被剥夺超级反应倾向促使许多工人抵制降薪计划，而往往工人接受 降薪对他们本身更有好处。 在劳资关系以外的地方，剥夺人们原本拥有的好处也是很难的。因此，若是人们能够更加理 性地思考，在潜意识层面上更少受到被剥夺超级反应倾向的驱使，许多已经发生的悲剧是完 全可以避免的。 被剥夺超级反应倾向也是导致某些赌徒倾家荡产的重要原因之一。首先，它使得赌徒输钱之 后急于扳平，输得越多，这种不服输的心理就越严重。其次，最容易让人上瘾的赌博形式就 是设计出许多差点就赢的情况，而这些情况会激发被剥夺超级反应倾向。有些老虎机程序设 计者恶毒地利用了这个人性弱点。电子技术允许这些设计者制造出大量无意义的“BARBAR柠檬”结果，这些结果会促使那些以为自己差点赢得大奖的蠢货拼命地继续加注。 被剥夺超级反应倾向常常给那些参加公开竞拍的人带来很多损失。我们下面就要讨论到的 “社会认可”倾向促使竞买者相信其他竞买者的最新报价是合理的，然后被剥夺超级反应倾 向就会强烈地驱使他去报一个更高的价格。要避免因此而在公开报价拍卖会上付出愚蠢的价 格，最佳的办法是巴菲特的简单做法：别去参加这些拍卖会。 被剥夺超级反应倾向和避免不一致性倾向通常会联合造成一种形式的经营失败。在这种形式 的失败中，一个人会耗尽他所有的优质资产，只为徒劳地试图去挽救一个变得很糟糕的投资 项目。要避免这种蠢事，最佳的办法之一是趁年轻的时候好好掌握打扑克牌的技巧。扑克牌 的教育意义在于，并非全部有效的知识都来自正规的学校教育。 在这里，我本人的教训可能很有示范意义。几十年前，我曾犯过一个大错误，而犯错的部分 原因就是我在潜意识中受到被剥夺超级反应倾向的影响。当时我有个股票经纪人朋友给我打 电话，说要以低得离谱的价格卖给我 300 股交易率极低的贝尔里奇石油（Belridge）公司的 股票，每股只要 115 美元。我用手头的现金买下了这些股票。第二天，他又想以同样的价格再卖给我 1500 股。这次我谢绝了，部分原因是我没那么多现金，只能卖掉某些东西或者举 债才能筹到所需的 173000 美元。这是个非常不理性的决定。当年我生活很好，也不欠债， 买这只股票没有赔本的风险，而同样没有风险的机会并不是经常有的。不到两年之后，壳牌 收购了贝尔里奇石油公司，价格是大约每股 3700 美元。如果我当时懂得更多心理学知识， 买下那些股票，我就能多赚 540 万美元。正如这个故事所展示的，人们可能会由于对心理学 的无知而付出昂贵的代价。 有些人可能会觉得我对被剥夺超级反应倾向的定义太宽泛，把人们失去即将得到的好处的反 应也包括在内，比如说那些老虎机玩家的反应。然而，我认为我对这个倾向的定义还应该更 加宽泛一些。我提议为这种倾向下更宽泛定义的理由是，我知道有许多伯克希尔·哈撒韦的 股东在公司市值获得巨大增长之后从来不卖掉或者送掉哪怕一股股票。这种反应有些是由理 性的计算引起的，而有些肯定是由如下几种因素引起的：（1）奖励超级反应；（2）避免不 一致性倾向造成的“维持现状偏见”；（3）自视过高倾向造成的“禀赋效应”。但我相信 他们这么做最主要的非理性原因是受到某种被剥夺超级反应倾向的驱使。这些股东之中有许 多人无法忍受减持伯克希尔·哈撒韦股票的想法。部分原因在于，他们认为这只股票是身份 和地位的象征，减持它无异于自贬身份；但更重要的原因在于，他们担心把股票卖掉或者送 掉之后，他们就无法分享未来的收益。\n十五、社会认同倾向\r#\r\r如果一个人自动依照他所观察到的周围人们的思考和行动方式去思考和行动，那么他就能够 把一些原本很复杂的行为进行简化。而且这种从众的做法往往是有效的。例如，如果你在陌 生城市想去看一场盛大的足球比赛，跟着街道上的人流走是最简单的办法。由于这样的原因， 进化给人类留下了社会认同倾向，也就是一种自动根据他看到的周边人们的思考和行动方式 去思考和行动的倾向。 心理学教授喜欢研究社会认同倾向，因为在他们的实验中，这种倾向造成了许多可笑的结果。 例如，如果一名教授安排 10 名实验员静静地站在电梯里，并且背对着电梯口，那么当陌生 人走进电梯时，通常也会转过身去，摆出相同的姿势。心理学教授还能利用社会认同倾向促 使人们在测量东西时出现很大、很荒唐的误差。 当然，家有儿女的父母经常无奈地了解到，青少年特别容易由于社会认同倾向而出现认知错 误。最近，朱迪丝·瑞奇·哈里斯（Judith Rich Harris）对这种现象的研究取得了突破性 的成果。朱迪丝证明，年轻人最尊重的是他们的同龄人，而不是他们的父母或者其他成年人， 这种现象在很大程度上是由年轻人的基因决定的。所以对于父母来说，与其教训子女，毋宁 控制他们交往朋友的质量。后者是更明智的做法。哈里斯女士在新发现的理由支持之下，提 供了一种如此优秀和有用的见解，像她这样的人，真是没白活。 在企业的高管层中，像青少年一样有从众心理的领导人也并不少见。如果有家石油公司愚蠢 地买了一个矿场，其他石油公司通常会很快地加入收购矿场的行列。如果被收购的是一家化 肥厂，情况也是如此。实际上，石油公司的这两种收购曾经蔚然成风，而它们收购的结果都 很糟糕。 当然，对于石油公司来说，找到和正确地评估各种可以用来使用现金的项目是很困难的。所 以和每个人一样，石油公司的高管人员也因为迟疑不决而感到烦躁，所以匆匆作出了许多错 误的决定。跟随其他石油公司的行动所提供的社会认同自然能够终止这种迟疑不决。 社会认同倾向在什么时候最容易被激发呢？许多经验给出了下面这个明显的答案：人们在感 到困惑或者有压力的时候，尤其是在既困惑又有压力的时候，最容易受社会认同倾向影响。 由于压力能够加强社会认同倾向，有些卑鄙的销售机构会操纵目标群体，让他们进入封闭和 充满压力的环境，进行一些像把沼泽地卖给中小学教师之类的销售活动。封闭的环境强化了 那些骗子和率先购买者的社会认同效应，而压力（疲惫通常会增加压力）则使目标群体更容 易受到社会认同的影响。当然，有些邪教组织模仿了这些欺诈性的销售技巧。有个邪教组织 甚至还使用响尾蛇来增强目标群体的压力，威逼他们加入该组织。 由于坏行为和好行为都会通过社会认同倾向而得到传播，所以对于人类社会而言，下面两种 措施是非常重要的：（1）在坏行为散播之前阻止它；（2）倡导和展现所有的好行为。 我父亲曾经对我说，他刚在奥马哈当上律师之后不久，和一大帮人从内布拉斯加州去南达科 他州猎杀野鸡。当时南达科他州的打猎许可证是要收钱的，比如说南达科他州本地居民要缴 纳两美元，而非本地居民要缴纳五美元。在我父亲之前，所有内布拉斯加居民都用伪造的南 达科他州地址去申领南达科他州打猎许可证。我父亲说，轮到他的时候，他禁止自己仿效其 他人从某种程度上来讲是违法的做法。 并非所有人都能抵制坏行为的社会传染。因此，我们往往会遇到“谢皮科综合症”：它指的 是弗兰克·谢皮科所加入的那个纽约警察局极其腐败的情况。谢皮科因为拒绝和警察局的同 事同流合污，差点遭到枪杀。这种腐败现象是由社会认同倾向和激励机制引起的，这两种因 素共同造成了“塞皮科综合症”。我们应该多多宣讲谢皮科的故事，因为这个可怕的故事向 人们展示了社会认可倾向这种非常重要的因素会造成一种非常严重的邪恶现象。 而就社会认同而言，人们不仅会受到别人行动的误导，而且也会受到别人的不行动的误导。 当人们处在怀疑状态时，别人的不行动变成了一种社会证据，证明不行动是正确的。因而， 许多旁观者的不行动导致了凯蒂·季诺维斯（注：凯蒂·季诺维斯，1935—1964，全名为 Catherine Susan Genovese，因在纽约皇后区，她所住的公寓附近被暴徒刺死时邻居反应冷 漠而引起美国社会对“旁观者效应”社会心理现象的广泛关注）之死——这是一个心理学入 门课程中讨论的著名的故事。 在社会认同的范围之内，企业的外部董事通常不会采取任何行动。他们不会反对任何比拿斧 头杀人程度轻的事情，只有出现了某些令董事会在公众面前难堪的情况他们才会干预。我的 朋友乔伊·罗思柴尔德（注：乔伊·罗思柴尔德，1904—2000，美国律师、商人和慈善家） 曾经很好地描述了这种典型的董事会文化。他说：“他们问我是否愿意担任西北贝尔公司 （Northwest Bell）的董事，那是他们问我的最后一个问题。” 而在广告和商品促销中，社会认同发挥的重要作用简直超乎人们的想像。“有样学样”是一 句老话，它指的是这种情况：约翰看到乔伊做了某件事，或者拥有某样东西，于是强烈地希望自己也去做那件事，或者拥有那样东西。这造成的有趣结果就是，广告商愿意支付大量的 钱，就为电影某个一闪而过的喝汤镜头中出现的汤罐头是其生产的牌子，而非其他厂家生产 的牌子。 社会认同倾向通常以一种变态的方式和艳羡/妒忌倾向、被剥夺超级反应倾向结合在一起。 在这些因素的共同作用之下，许多年前曾发生了一件让我们家里人后来想起来就忍俊不禁的 事情。当时我的表弟罗斯三岁，我四岁，我们俩为了一块小木板而争夺和喊叫，而实际上周 围有许多同样的小木板。 但是如果成年人在维护意识形态的心理倾向的影响之下做出类似的举动，那就一点都不好笑 了，而且将会给整个文明社会造成极大的破坏。中东现在的情况就有这样的危险。犹太人、 阿拉伯人和所有其他人为了一小块有争议的土地而浪费了大量的资源，其实他们随便把那块 地分掉对每个人都好，而且还能大大降低爆发战争——可能是核战争——的危险。 现在人们很少用包括讨论心理倾向造成的影响在内的技巧来解决家庭以外的纠纷。考虑到这 样做会让人觉得太过天真，而且目前学校传授的心理学知识也有许多不足，所以这种结果也 许是合情合理的。但由于当今世界存在核战争的危险，而有些重要的谈判持续十几年仍未取 得进展，我经常想，也许在将来的某天，人们会以某种形式采用更多的心理学理论，从而得 到更好的结果。如果真的是这样，那么正确的心理学教育将会发挥非常重要的作用。如果年 纪大的心理学教授比年纪大的物理学教授更难以接受新的知识（这一点几乎是肯定的），那 么我们也许会像马克斯·普朗克预言的那样，需要等待思想开放的新一代的心理学教授成长 起来。 如果我们只能从各种涉及社会认同倾向的教训中挑选出一个，并将其用于自我提高的话，我 会选择下面这个教训：学会如何在其他人犯错的时候别以他们为榜样，因为很少有比这个更 值得掌握的技能。\n十六、对比错误反应倾向\r#\r\r因为人类的神经系统并不是精密的科学仪器，所以它必须依靠某些更为简单的东西。比如说 眼睛，它只能看到在视觉上形成对比的东西。和视觉一样，其他感官也是依靠对比来捕捉信 息的。更重要的是，不但感知如此，认知也是如此。结果就造成了人类的对比错误反应倾向。 很少有其他心理倾向能够比这种倾向对正确思维造成更大的破坏。小规模的破坏如下面的例 子：一个人花 1000 美元的高价购买了皮质仪表盘，仅仅是因为这个价格和他用来购买轿车 的 65000 美元相比很低。大规模的破坏经常会毁掉终身的幸福，比如说有的女性很优秀，可 是她的父母特别糟糕，结果她可能会嫁给一个只有跟她父母比起来才算不错的男人。或者说 有的男性娶的第二位妻子只有跟第一位妻子比起来才算过得去。 某些房地产经纪公司采用的推销方法尤其应该受到谴责。买家是外地的，也许急于把家搬到 这座城市，于是匆匆来到房地产经纪公司。经纪人故意先带着这位顾客看了三套条件十分糟 糕而且价格贵得离谱的房子，然后他又带着顾客去看一套条件一般糟糕、价格也一般贵的房子。这样一来，经纪人通常很容易就能达成交易。 对比错误反应倾向常常被用于从购买商品和服务的顾客身上赚取更多的钱。为了让正常的价 格显得很低，商家通常会瞎编一个比正常价格高很多的虚假价格，然后在广告中把他的标准 价格显示为其伪造价格的折扣价。人们即使对这种操纵消费者的伎俩心知肚明，也往往忍不 住会上当。这种现象部分地解释了报纸上有那么多广告的原因。它还证明了这个道理：了解 心理操纵伎俩并非就是一种完美的防御措施。 当一个人逐步逐步走向灭亡时，如果他每一步都很小，大脑的对比错误反应倾向通常会任由 这个人走向万劫不复的境地。这种情况会发生，是因为每一步和他当前位置的对比太小了。 我有个牌友曾经告诉我，如果把青蛙丢到热水里，青蛙会立刻跳出来，但如果把青蛙放到常 温的水里，然后用很慢很慢的速度来烧这些水，那么这只青蛙最终会被烫死。虽然我的生理 学知识不多，但我还是怀疑这种说法是不是真实。但不管怎么样，有许多企业就像我朋友提 到的青蛙那样死去。在前后对比度细微的变化误导之下，人们经常无法认识到通往终点的趋 势。 我们最好记住本杰明·富兰克林那句最有用的格言：“小小纰漏，能沉大船。”这句格言的 功效是很大的，因为大脑经常会错失那些类似于沉大船的小纰漏之类的东西。 十七、压力影响倾向 十七、压力影响倾向 十七、压力影响倾向 十七、压力影响倾向 每个人都知道，突然的压力，比如遭遇威胁，会导致人体内部的肾上腺素激增，推动更快、 更极端的反应。每个上过心理学概论课的人都知道，压力会使社会认可倾向变得更加强大。 有一种现象知道的人不少但还没有被充分认识，轻度的压力能够轻微地改善人们的表现，比 如说在考试中；而沉重的压力则会引发彻底失调。 但是除了知道沉重的压力能够引起抑郁症之外，很少人对它有更多的了解。例如，大多数人 知道“急性应激性抑郁症”（Acute Stress Depression）会使人们的思维出现紊乱，因为 它引起极端的悲观态度，而且这种悲观态度往往会持续很长时间，导致人们身心俱疲，什么 都不想做。幸运的是，正如大多数人所知道的，这种抑郁症是人类较容易治愈的疾病之一。 甚至早在现代药物尚未出现的时候，许多抑郁症患者，比如塞缪尔·约翰逊和温斯顿·丘吉 尔等人，就在生活中取得了非凡的成就。 大多数人对受到沉重压力影响的非抑郁性精神问题了解无多。但至少有个例子不在此列，那 跟巴甫洛夫在七八十岁时所做的研究有关。巴甫洛夫很早就获得了诺贝尔奖，因为他利用狗 成功地阐述了消化功能的生理机制。后来他由于让狗养成单纯联想唤起的反应而闻名于世， 今天人们通常把各种由单纯联想唤起的反应，包括狗听到铃声就流口水，以及大多数现代广 告引起的行为，称为“巴甫洛夫条件反射”（Pavlovian Conditioning）。 巴甫洛夫后来所做的研究特别有趣。在 20 世纪 20 年代的列宁格勒大洪水期间，巴甫洛夫有很多狗被关在笼子里。在“巴甫洛夫条件反射”和标准的奖励反应的共同作用之下，这些狗 在洪灾之前已经养成了一些特殊的、各不相同的行为模式。在洪水上涨和消退期间，这些狗 差点被淹死，有一段时间它们的鼻子和笼子的顶部只有一点点空间可供呼吸。这导致它们感 受到极大的压力。洪水退去后，巴甫洛夫立刻发现那些狗的行为变得跟过去不一样了。例如， 有只狗原来喜欢它的训练师，现在不喜欢了。这个结果不由让人想起现代某些人的认知转变： 有的人原本很孝顺，但突然皈依邪教之后，便会仇视他们的父母。巴甫洛夫的狗这种突兀的 极端转变会让优秀的实验科学家产生极大的好奇心。那确实是巴甫洛夫的反应。但没有多少 科学家会采取巴甫洛夫接下来的行动。 在随后漫长的余生中，巴甫洛夫给许多狗施加压力，让它们的精神崩溃，然后再来修复这些 崩溃。所有这些他都保存了详细的实验记录。他发现：（1）他能够对这些狗进行分类，然 后预测具体某只狗有多么容易崩溃；（2）那些最不容易崩溃的狗也最不容易恢复到崩溃前 的状态；（3）所有狗都可以被弄崩溃；（4）除非重新施加压力，否则他无法让崩溃的狗恢 复正常。 现在，几乎每个人都会抗议拿狗这种人类的朋友来做实验。 除此之外，巴甫洛夫是俄罗斯人，他晚年的研究工作是在共产党执政期间完成的。也许正是 由于这些原因，现在绝大多数人才会对巴甫洛夫晚年的研究一无所知。许多年前，我曾经跟 两个信奉弗洛伊德的精神病学家讨论这个研究，但他们对此一无所知。实际上，几年前有个 主流医学院的院长问我，巴甫洛夫的实验是否可以被其他研究人员的实验“重复”。很明显， 巴甫洛夫是当今医学界被遗忘的英雄。 我最早看到描述巴甫洛夫最后研究成果的文字，是在一本平装版的通俗作品中，作者是某个 得到洛克菲勒基金会资助的精神病学家。当时我正在试图弄清楚：（1）邪教是如何造成那 些可怕的祸害的；（2）如果父母想让被邪教洗过脑、变成行尸走肉的子女重新做人，法律 应该作出什么样的规定。当然，现在主流的法律法规反对父母把这些行尸走肉抓起来，给他 们施加压力，以便消除邪教在威逼他们皈依时所施加的压力的影响。 我从来没想过要介入目前关于这个问题的法律争议。但我确实认为，如果要以最理智的态度 来处理这个争议，那么双方必须借鉴巴甫洛夫最后的研究成果：施加大量的压力可能是治疗 最糟糕的疾病——丧失心智——的惟一方法。我在这里谈到巴甫洛夫是因为：（1）我对社 会禁忌向来很反感；（2）我的讲稿涉及压力，这能让它更加合理、更加完整；（3）我希望 有些听众能够继续我的研究，取得更大的成果。\n十八、错误衡量易得性倾向\r#\r\r这种倾向和一句歌词相互呼应：“如果我爱的女孩不在身边，我就爱身边的女孩。”人类的 大脑是有限和不完美的，它很容易满足于容易得到的东西。大脑无法使用它记不住或者认识 不到的东西，因为它会受到一种或几种心理倾向的影响，比如说上述歌曲中那个家伙就受到 身边女孩的影响。所以人类的大脑会高估容易得到的东西的重要性，因而展现出易得性—错 误衡量倾向。 避免受易得性—错误衡量倾向影响的主要对策通常是按程序办事，包括使用几乎总是很有帮 助的检查清单。 另外一种对策就是模仿达尔文那种特别重视反面证据的做法。应该特别关注的是那些不容易 被轻易量化的因素，而不是几乎只考虑可以量化的因素。还有另外一种对策，那就是寻找并 聘请一些知识渊博、富于怀疑精神、能言善辩的人，请他们扮演现有观点的反方角色。 这种倾向的一个后果就是，那些极其鲜明的形象，由于便于被记住，因而更容易被认知，因 此在实验中，应有意低估它们的重要性，而有意高估那些不那么形象的证据的重要性。 尽管如此，那些极其鲜明的形象在影响大脑方面的特殊威力可以被建设性地用于：（1）说 服其他人得到正确的结论；或者（2）作为一种提高记忆的工具，把鲜明的形象一个接一个 地和人们不想忘记的东西联系起来。实际上，古希腊和古罗马那些伟大的演说家正是使用鲜 明的形象作为记忆辅助手段，才能够在不用笔记的情况下滔滔不绝而有条有理地发表演讲。 应付这种倾向时所需要记住的伟大原理很简单：别只是因为一样事实或者一种观念容易得 到，就觉得它更为重要。\n十九、不用就忘倾向\r#\r\r所有技能都会因为不用而退化。我曾经是个微积分天才，但到了 20 岁之后，这种才能很快 就因为完全没有被使用而消失了。避免这种损失的正确对策是使用一些类似于飞行员训练中 用到的飞行模拟器那样的东西。这种模拟器让飞行员能够持续地操练所有很少用到但必须保 证万无一失的技能。 明智的人会终身操练他全部有用然而很少用得上的、大多数来自其他学科的技能，并把这当 做是一种自我提高的责任。如果他减少了他操练的技能的种数，进而减少了他掌握的技能的 种数，那么他自然会陷入“铁锤人倾向”引起的错误之中。他的学习能力也会下降，因为他 需要用来理解新经验的理论框架已经出现了裂缝。对于一个善于思考的人而言，把他的技能 编排成一张检查清单，并常常将这张清单派上用场，也是很重要的。其他操作模式将会让他 错过许多重要的事物。 许多技能惟有天天练习，才能维持在非常高的水平。钢琴演奏家帕德雷夫斯（注：Ignacy Jan Paderewski，1860—1941，波兰钢琴家、作曲家、外交家和政治家，曾任波兰总理）基曾经 说过，如果他有一天不练琴，他就会发现自己的演奏技巧下降，如果连续一个星期不练，那 就连听众都能察觉了。 人们只要勤奋就能降低不用就忘倾向的影响。如果人们能够熟练地掌握一种技能，而不是草 草学来应付考试，那么这种技能将会较难以丢失，而且一旦生疏之后，只要重新学习，很快 就能够被重新掌握。这些优势可不算小，聪明人在学习重要技能的过程中，如果没有做到真 正精通这种技能，他是不会停下来的。\n二十化学物质错误影响倾向\r#\r\r众所周知，这种倾向的破坏力极大，常常会给认知和生活带来悲剧性的结果，所以在这里不 需要多说了，请参见前面“简单的、避免痛苦的心理否认”那一节里的相关内容。\n二十一、衰老— 错误影响倾向\r#\r\r年龄的增长自然会造成认知衰退，而每个人认知衰退的时间早晚和速度快慢不尽相同。基本 上没有年纪非常大的人还善于学习复杂的新技能。但有些人即使到了晚年，也能够得心应手 地运用原来就掌握的技能，这种情况在桥牌比赛中屡见不鲜。 像我这样的老年人无须刻意，也非常善于掩饰和年龄有关的衰退，因为诸如衣着打扮之类的 社会习俗掩盖了大多数衰老的痕迹。 带着快乐不断地思考和学习在某种程度上能够延缓不可避免的衰退过程。\n二十二、权威 —错误影响倾向\r#\r\r和其所有祖先相同，人类也生活在等级分明的权力结构中，所以大多数人生下来就要跟随领 袖，能够成为领袖的则只有少数人。因此，人类社会被正式组织成等级分明的权力结构，这 些结构的文化则增强了人类天生就有的追随领袖的倾向。 但由于人类的反应大多数是自动的，追随领袖的倾向也并不例外，所以当领袖犯错的时候， 或者当领袖的想法并没有得到很好的传达、被大众所误解的时候，追随领袖的人就难免会遭 受极大的痛苦。所以我们看到的许多例子都表明，人类的权威—错误影响倾向会造成认知错 误。 有些错误影响是很可笑的，就好像西奥迪尼讲过的一个故事。美国有个医生给护士留了手写 的字条，吩咐她如何治疗病人的耳痛。纸条上写着“Two drops, twice a day, r. ear。” （“每天两滴，右耳。”）护士把 r. ear（右耳）看成了 rear（屁股），于是让病人翻过 身，把滴耳液滴进了病人的肛门。 错误地理解权威人物的吩咐有时会造成悲剧性的后果。在第二次世界大战期间，部队给某位 将军安排了新的飞行员。由于将军就坐在副机长的位子上，这个新的飞行员感到特别紧张， 他很想取悦这位新老板，乃至把将军在座位上挪挪身体的细微动作误解为某种让他去干傻事 的命令。于是飞机坠毁了，飞行员落得了半身不遂的下场。 当然，像巴菲特老板那样深谋远虑的人会注意到这类案例，他坐在飞行员旁边时总是表现得 像一只过于安静的老鼠。 在飞行模拟训练中，人们也注意到这类情况。副机长在模拟训练中必须学会忽略机长某些真 正愚蠢的命令，因为机长有时会犯严重的错误。然而，即使经过这种严格的训练，副机长在 模拟飞行中仍然非常频繁地让模拟飞机由于机长某些极其明显的严重错误而坠毁。 飞黄腾达的陆军下士希特勒成为德国元首之后，带领大批虔诚的路德教徒和天主教徒倒行逆 施，进行了惨无人道的种族大屠杀和其他大规模的破坏活动。后来有个聪明的心理学教授， 也就是斯坦利·米尔格拉姆，决定做一个实验来弄清楚权威人物到底能够在多大程度上促使 普通人去做罪大恶极的坏事。在这个实验中，有个人假扮成权威人物，一个主导这次正规实 验的教授。这个人能够让许许多多普通人将他们完全信以为真的假电刑用来折磨他们的无辜 同胞。这个实验确实证明权威—错误影响倾向能够造成可怕的结果，但它也证明第二次世界 大战刚结束时的心理学界是极其无知的。 只要拿着我的心理倾向清单，然后逐项对照，几乎每个聪明人都能明白，米尔格拉姆的实验 涉及到六种强大的心理倾向，它们共同发挥作用，造成了他那极端的实验结果。例如，那个 按下米尔格拉姆的电击按钮的人肯定从在场无动于衷的旁观者那里得到许多社会认可，那些 人的沉默意味着他的行为是没有问题的。然而，在我讨论米尔格拉姆之前，心理学界发表了 上千篇相关论文，可是这些论文对米尔格拉姆实验的意义，至多理解了 90%。而任何聪明人 只要做到下面两点，就能立刻完全理解这个实验的意义：（1）按照我在这篇讲稿中谈到的 方法合理地组织心理学知识；（2）使用核对检查清单的做法。这种情况说明那些早已谢世 的心理学教授思考方法紊乱，对此需要一种更好的解释。下面我会不情愿地谈谈这个话题。 接下来我要讲的是一个有权威—错误影响倾向的垂钓者的故事。我们应该庆幸上一代的心理 学家头脑没有错乱到这个垂钓者的地步。 我曾经去哥斯达黎加的科罗拉多河垂钓，当时我的向导在震惊中告诉了我一个垂钓者的故 事。那垂钓者比我早到科罗拉多河，他之前从来没有钓过海鲢鱼，像我一样请了一位垂钓向 导。那向导既负责开船，也提供许多垂钓建议。在这个背景下，向导竖立了绝对权威的身份。 那个向导的母语是西班牙语，而垂钓者的母语则是英语。垂钓者钓上了一条很大的海鲢鱼， 于是开始遵从这位被他当成权威人物的向导的各种指示：抬高点，放低点，收线等等。到最 后，鱼上钩了，垂钓者需要把竿往上提才能把鱼钓起来。但是向导的英语并不好，把收竿说 成了“给它杆，给它杆”。哇，垂钓者居然把他那根昂贵的钓竿扔给了鱼，最后那钓竿沿着 科罗拉多河漂向大海去了。这个例子表明，跟随权威人物的心理倾向是很强大的，而且能够 使人们变得非常糊涂。 我最后的例子来自商界。有个心理学博士当上某家大公司的总裁之后就发狂了，花很多钱在 一个偏僻的地方盖了新的总部大楼，还修了很大的酒窖。后来，他的下属汇报说资金快用完 了。“从折旧准备金账户提，”这位总裁说。那可不太容易，因为折旧准备金账户是负债账 户。 对权威人物不应该的尊敬造成了这种情况：这位总裁和许多甚至比他更糟糕的管理人员明明 早就该被革除职务，却继续担任一些重要商业组织的领导人。内中蕴含的意义不言自明：选 择将权力交给谁时要很谨慎，因为权威人物一旦上台，将会得到权威—错误影响倾向的帮助， 那就很难被推翻。\n二十三、废话倾向\r#\r\r作为一种拥有语言天赋的社会动物，人类天生就有本事啰里啰唆，说出一大堆会给正在专心 做正经事的人造成许多麻烦的废话。有些人会制造大量的废话，有些人则废话很少。 曾经有个很好玩的实验向人们展示了蜜蜂说废话引起的麻烦。在正常的情况下，蜜蜂会飞出 去找蜜源，然后飞回蜂巢，跳起一种舞蹈，以此来告诉其他蜜蜂蜜源的位置。然后其他蜜蜂 就会飞出去，找到蜜源。某个科学家——他像 B.F.斯金纳那么聪明——决定要看看蜜蜂遇 到麻烦之后会怎么办。他把蜜源放得很高。非常高。大自然中并没有那么高的蜜源，可怜的 蜜蜂缺乏一种足以传达这个信息的基因程序。你也许认为蜜蜂将会飞回蜂巢，然后缩到角落 里，什么也不做。但情况不是这样的。蜜蜂回到蜂巢，开始跳起一种莫名其妙的舞来。我这 辈子总是在跟那些很像这只蜜蜂的人打交道。聪明的行政机构应该采取一种非常重要的做 法，就是让那些啰里啰唆、喜欢说废话的人远离严肃的工作。加州理工学院有个名副其实的 著名工程学教授，他有深刻的见解，然而说话比较鲁莽。他曾经直言不讳地说：“学术管理 机构的首要任务，就是让那些无关紧要的人不要去干预那些有关紧要的人的工作。”我引用 这句话，部分原因在于，我跟这位教授一样直言不讳，经常得罪人。虽然做了大量的努力， 我还是没能改掉说话鲁莽的积习，所以我引用这位教授的话，是希望至少和他比起来，我将 会显得比较委婉。\n二十四、重视理由倾向\r#\r\r人，尤其是生活在发达文化中的人，天生就热爱准确的认知，以及获取准确认知过程中得到 的快乐。正是由于这个原因，填字游戏、桥牌、象棋、其他智力游戏和所有需要思维技巧的 游戏才会如此广受欢迎。 这种倾向给人们的启发不言而喻。如果老师在传授知识时讲明正确的原因，而非不给任何原因，只是高高在上地把知识罗列出来，那么学生往往会学得更好。因此，不仅在发布命令之 前要想清楚原因，而且还应该把这些原因告诉命令的接受者，没有比这更明智的做法了。 说到对这个道理的了解，没有人比得上卡尔·布劳恩。他为人正直，以过人的技巧设计了许 多炼油厂。他掌管的那家德式的大企业有一条非常简单的规矩：你必须讲清楚何人将在何时 何地因何故做何事。如果你给属下写纸条，吩咐他去做事情，却没有交待原因，布劳恩可能 会解雇你，因为他非常清楚，人们只有一丝不苟地把某个想法的原因都摆出来，这个想法才 最容易被接受。 总的来讲，如果人们毕生致力于将他们的直接和间接经验悬挂在一个解释“为什么”的理论 框架之上，那么他们对知识的吸收和使用就会变得更加容易。实际上，“为什么”这个问题 是一块竖在精神宝库门外的罗塞塔石碑（注：Rosetta Stone，古埃及石碑，因石碑上用希 腊文字、古埃及文字和当时的通俗体文字等三种不同语言版本刻有埃及国王托勒密五世的诏 书而成为今天人们研究古埃及史的重要历史文物）。 不幸的是，重视理由倾向是如此强大，乃至一个人给出的理由哪怕是毫无意义的或者是不准 确的，也能使他的命令和要求更容易得到遵从。有个心理学实验证明了这一点。在这个实验 中，实验人员成功地插队到排在复印机前面的长队前头，他给出的理由是：“我要复印几份 东西。”重视理由倾向这种不幸的副作用其实是一种条件反射，会出现这样的条件反射，是 因为大多数人都认为有理由的事情是很重要的。自然地，某些商业机构和邪教组织经常利用 各种有噱头的理由来达到他们不可告人的目的。\n二十五、 lollapalooza 倾向\r#\r\r这种倾向在我翻阅过的那几本心理学教科书里是找不到的，至少没有得到系统的介绍，然而 它在现实生活中却占据着重要的地位。它解释了米尔格拉姆的实验结果为什么会那么极端， 也解释了某些邪教组织为什么能够极其成功地通过各种手段将许多心理倾向引起的压力施 加在传教目标身上，从而迫使他们皈依。被邪教盯上的目标跟巴甫洛夫晚年研究的那些狗是 相同的，他们的抵抗力因人而异，但有些被盯上的人在邪教的压力之下顿时变成了行尸走肉。 实际上，有些邪教管这种皈依现象叫做“咔嚓”（snapping）。 从前的心理学教科书作者极其无知，对此我们应该如何解释呢？哪个曾经在高等学府上过物 理学或者化学入门课的人，会不去考虑各种心理倾向如何结合并产生什么结果吗？为什么有 些人对各种心理倾向之间相互影响的复杂关系毫无所知，却自以为他的心理学知识已经足够 多了呢？那些心理学教授研究的是大脑使用过度简单的运算法则的倾向对认知产生的糟糕 影响，而他们本身却使用一些过度简单的概念，还有什么比这更具讽刺意味呢？ 我将会提出几个初步的解释。也许很多早已谢世的心理学教授想要通过一种狭隘的可重复的 心理学实验来撑起整个心理学学科；这种实验必须能够在大学的校园中进行，而且每次只针 对一种心理倾向。如果是这样的话，这些早期的心理学教授以这样拘束的方法来研究自己的 学科就犯了巨大的错误，因为他们封死了许多走近心理学的道路。这就好像物理学忽略了（1） 天体物理学，因为它的实验不可能在物理实验室中进行，（2）所有的复合效应。是哪些心理倾向导致早期的心理学教授采用一种非常狭隘的方法来研究他们自己的学科呢？其中一 个候选的答案是偏好容易控制的资料引发的错误衡量易得性倾向。然后这些对研究方法的限 制最终将会创造出一种极端的铁锤人倾向。另外一个候选的答案可能是艳羡/妒忌倾向：早 期的心理学家误解了物理学，并对物理学怀有一种怪异的妒忌心态。这种可能性证明学院派 心理学完全不研究妒忌绝对是一种错误的做法。 现在我想把所有这些历史谜团交给比我优秀的人去解决。 好啦，我对各种心理学倾向的简短描述就到这里为止\n"},{"id":139,"href":"/posts/literature/%E4%BC%8A%E8%AE%AD/","title":"伊训","section":"文学","content":"太甲元年十二月乙丑日，伊尹祭祀先王，侍奉嗣王恭敬地拜见他的祖先。侯服甸服的诸侯都在祭祀行列，百官率领自己的官员，听从太宰伊尹的命令。伊尹于是明白说明大功之祖成汤的大德，来教导太甲。 伊尹说：“啊！从前夏代的先君，当他勉力施行德政的时候，没有发生天灾，山川的鬼神也没有不安宁的，连同鸟兽鱼鳖各种动物的生长都很顺遂。到了他的子孙不遵循先人的德政，上天降下灾祸，借助于我汤王的手。上天有命：先从夏桀讨伐；我就从亳都执行。我商王宣明德威，用宽和代替暴虐，所以天下兆民相信我、怀念我。现在我王嗣行成汤的美德，不可不考虑开头！行爱于亲人，行敬于长上，从家和国开始，最终推广到天下。 啊！先王努力讲求做人的纲纪，听从谏言而不违反，顺从前贤的活；处在上位能够明察，为臣下能够尽忠；结交人不求全责备，检点自己好像来不及一样。因此达到拥有万国，这是很难的呀！ “又普求贤智，使他们辅助你们后嗣；还制订《官刑》来警戒百官。《官刑》上说：敢有经常在宫中舞蹈、在房中饮酒酣歌的，这叫做巫风。敢有贪求财货女色、经常游乐田猎的，这叫做淫风。敢有轻视圣人教训、拒绝忠直谏戒、疏远年老有德、亲近顽愚童稚的，这叫做乱风。这些三风十过，卿士身上有一种，他的家一定会丧失；国君身上有一种，他的国一定会灭亡。臣下不匡正君主，要受到墨刑。这些对于下士也要详细教导。 啊！嗣王当以这些教导警戒自身，念念不忘呀！圣谟美好，嘉训很明啊！上天的眷顾不常在一家，作善事的，就赐给百福；作不善的，就赐给他百殃。你修德不论多小，天下的人都会感到庆幸，行不善，即使不大，也会丧失国家。”\n嗣王太甲对伊尹不顺从，伊尹作书给王说：“先王成汤顾念天的明命是正确的，因此供奉上下神祇、宗庙社稷无不恭敬严肃。上天看到汤的善政，因此降下重大使命，使他抚安天下。我伊尹亲身能辅助君主安定人民，所以嗣王就承受了先王的基业。我伊尹亲身先见到西方夏邑的君主，用忠信取得成就，辅相大臣也取得成就；他们的后继王不能取得成就，辅相大臣也没有成就。嗣王要警戒呀！应当敬重你做君主的法则，做君主而不尽君道，将会羞辱自己的祖先。” 王像往常一样不念不闻。伊尹就说：“先王在天将明未明的时刻，就思考国事，坐着等待天明。又遍求俊彦的臣子，开导后人，不要忘记先祖的教导以自取灭亡。您要慎行俭约的美德，怀着长久的计谋。好象虞人张开了弓，还要去察看箭尾符合法度以后，才发射一样；您要重视自己所要达到的目的，遵行你的祖先的措施！这样我就高兴了，千秋万世您将会得到美好的声誉。” 太甲不能改变。伊尹对群臣说：“嗣王这样就是不义。习惯将同生性相结合，我不能轻视不顺教导的人。要在桐营造宫室，使他亲近先王的教训，莫让他终身迷误。” 嗣王去桐宫，处在忧伤的环境，能够成就诚信的美德。\n三年十二月朔日，伊尹戴着礼帽穿着礼服迎接嗣王太甲回到亳都，作书告王说：“人民没有君主，不能互相匡正而生活；君主没有人民，无法治理四方。上天顾念帮助商家，使嗣王能成就君德，实在是商家万代无疆之美啊！” 嗣王拜跪叩头说：“我小子不明于德行，自己招致不善。多欲就败坏法度，放纵就败坏礼制，因此给自身召来了罪过。上天造成的灾祸，还可回避；自己造成的灾祸，不可逃脱。以前我违背师保的教训，当初不会责备自己；还望依靠您的匡救的恩德，谋求我的好结局。” 伊尹跪拜叩头，说：“讲究自身的修养，又用诚信的美德和谐臣下，就是明君。先王成汤慈爱穷困的人民，所以人民服从他的教导，没有不喜悦的。连他的友邦和邻国，也这样说：等待我们的君主吧，我们的君主来了，就没有祸患了。大王要增进你的德行，效法你的烈祖，不可有顷刻的安乐懈怠。事奉先人，当思孝顺；接待臣下，当思恭敬。观察远方要眼明，顺从有德要耳聪。能够这样，我享受王的幸福就会没有止境。”\n伊尹向王重复告戒说：“呀！上天没有经常的亲人，能敬天的天就亲近；人民没有经常归附的君主，他们归附仁爱的君主；鬼神没有经常的享食，享食于能诚信的人。处在天子的位置很不容易呀！ “用有德的人就治，不用有德的人就乱。与治者办法相同，没有不兴盛的；与乱者办法相同，没有不灭亡的。终和始都慎择自己的同事，就是英明的君主。 “先王因此勉力敬修自己的德行，所以能够匹配上帝。我王继续享有好的基业，希望看到这一点呀！ 如果升高，一定要从下面开始；如果行远，一定要从近处开始。不要轻视人民的事务，要想到它的难处；不要苟安君位，要想到它的危险。慎终要从开头做起啊！ “有些话不顺你的心意，一定要从道义来考求；有些话顺从你的心意，一定要从不道义来考求。 “啊呀！不思考，怎么收获？不做事，怎么成功？天子大善，天下因此清正。君主不要使用巧辩扰乱旧政，臣下不要凭仗骄宠和利禄而安居成功。这样，国家将永久保持在美好之中。”\n"},{"id":140,"href":"/posts/literature/%E5%81%9A%E6%B3%95%E8%87%AA%E6%AF%99/","title":"做法自毙","section":"文学","content":"赵良去见商鞅，商鞅对他说：“当初秦国的习俗和戎狄一样，父子不分开，男女老少同居一室。如今我改变了秦国的教化，使他们男女有别，分居而住。我征调士卒大造宫廷城阙，把秦国营建得像鲁国、卫国一样。您看我治理秦国，与五大夫百里奚比，谁更有才干？”赵良说：“那五羖大夫，是楚国偏僻的乡下人，他听说秦穆公贤明，就想当面去拜见却苦于没有路费，就把自己卖给秦国人，穿着粗布短衣给人家喂牛。秦穆公知道这件事后把他提拔起来，凌驾于万人之上，秦国没有人不满意。他出任秦相期间，向东讨伐过郑国，三次拥立晋国的国君，一次出兵救楚；他在秦国境内施行德化，巴国前来纳贡；他施德政于诸侯，四方少数民族前来朝见，由余听说后，不远万里赶来敲门投奔。五大夫出任秦相，劳累不坐车，酷暑炎热不打伞，走遍国中，不用随从的车辆，不带武装防卫，他的功名永载史册，他的德行施教于后代。五羖大夫死时，秦国不论男女都痛哭流涕，连小孩子也不唱歌谣，正在舂米的人也因悲哀而不发出相应的呼声，这就是五羖大夫的德行。 如今您担任国相，是靠着国君的心腹宠臣景监引荐。身为秦国国相不为百姓造福而大规模地营建宫阙，这就谈不上为国家建立功业了。惩治太子的师傅，用严刑酷法残害百姓，这是积累怨恨、聚积祸患啊。教化百姓比命令百姓更深入人心，百姓模仿君臣的行为比命令百姓更为迅速。如今您却违情背理地建立权威、变更法度，这不是对百姓施行教化啊。您又在封地南面称君，天天用新法来逼迫秦国的贵族子弟。公子虔闭门不出已经8年了，您又杀死祝欢，用黥刑处罚公孙贾。这几件事，都不是得人心的。您一出门，后边跟着数以十计的战车，车上都是顶盔贯甲、身强力壮、持矛操戟的贴身警卫，离开这些警卫，您肯定不敢自己出门。您的处境就好比早晨的露水，面临很快消亡的危险。您还打算要延长自己的寿命吗？那为什么不把封地交还给秦国，到偏僻荒远的地方浇园自耕；劝秦王重用那些隐居山林的贤才，赡养老人，抚育孤儿，使父兄相互敬重；依功序爵，尊崇有德之士，这样才可以稍保平安。您还要贪图封地的富有，以独揽秦国的国政为宠幸，聚集百姓的怨恨，秦王一旦舍弃宾客而不能当朝，秦国想要拘捕您的人还能少吗？您丧身的日子就会像抬起脚来那样迅速地到来。”\n"},{"id":141,"href":"/posts/literature/%E5%84%92%E8%80%85/","title":"儒者","section":"文学","content":"鲁哀公(?―前468年)，姬姓，名将，鲁定公之子，春秋时期鲁国第二十六任君主，公元前494-前468年在位。他在鲁定公死后即位。在位期间执政为季孙斯、叔孙州仇、仲孙何忌、季孙肥、叔孙舒、仲孙彘。前468年，鲁哀公去世，其子鲁悼公即位。\n孔子在卫，冉求言于季孙曰：“国有圣人而不能用，欲以求治，是犹却步而欲求及前人，不可得已。今孔子在卫，卫将用之。己有才而以资邻国，难以言智也，请以重币迎之。”\n孔子在卫国的时候，冉求对季孙氏说：“国家有圣人却不任用，这样想治理好国家，就像倒着走而想追赶前面的人，是不可能达到的。现在孔子在卫国，卫国将要任用他，我们自己有人才却去帮助邻国，难以说是明智之举。请您用丰厚的聘礼把他迎接回来。”\n季孙以告哀公，公从之。\n季孙氏把冉求的建议禀告了鲁哀公，鲁哀公听从了这一建议。\n季孙氏，\u0026ldquo;孙\u0026quot;为尊称，实为季氏，姬姓。春秋战国时，鲁国的卿家贵族。作为三桓之首，季孙氏凌驾于公室之上，掌握鲁国实权。三桓，是凌驾于公室的鲁国贵族，出自鲁桓公，包括季孙氏、叔孙氏、孟孙氏。其中，季孙氏的始祖季友，谥成，史称\u0026quot;成季\u0026rdquo;。\n孔子既至，舍哀公馆焉。公自阼阶，孔子宾阶，升堂立侍。\n孔子回到鲁国，住在鲁哀公招待客人的馆舍里。哀公从大堂东面的台阶走上来迎接孔子，孔子从大堂西面的台阶上来觐见哀公，然后到大堂里，孔子站着陪哀公说话。\n鲁哀公问于孔子曰：“夫子之服，其儒服与？”\n鲁哀公向孔子问道：“先生的衣服，大概是儒者特有的衣服吧？”\n孔子对曰：“丘少居鲁，衣逢掖之衣，长居宋，冠章甫之冠。丘闻之也：君子之学也博，其服也乡；丘不知儒服。”\n孔子回答说：“我小时候住在鲁国，穿的是宽袖的衣服；长大后住在宋国，戴的是缁布做的礼冠。我听说，君子学问要广博，穿衣服要入乡随俗。我不知道这是不是儒者的服装。”\n哀公曰：“敢问儒行。”\n鲁哀公问：“先生，请问儒者的行为是什么样的呢？”\n孔子对曰：“遽数之不能终其物，悉数之乃留，更仆未可终也。”\n孔子回答说：“粗略地讲讲，不能把儒者的行为讲完；如果详细地讲，恐怕值班的仆人到了换班时间也未必说完。”\n#【儒者的自修立身】\n**哀公命席。孔子侍曰：“**儒有席上之珍以待聘，夙夜强学以待问，怀忠信以待举，力行以待取，其自立有如此者。\n鲁哀公让人设席，孔子坐在旁侧陪侍，说：“儒者如同席上的珍品等待别人来采用，昼夜不停地学习等待别人来请教，心怀忠信等待别人举荐，努力做事等待别人录用。儒者自修立身就是这样的。”\n#【儒者的容貌】\n儒有衣冠中，动作慎，其大让如慢，小让如伪，大则如威，小则如愧，其难进而易退也，粥粥若无能也。其容貌有如此者。\n儒者的衣帽穿戴周正，行为从容谨慎，推让大事时好像很傲慢，推让小事时好像很虚伪。做大事时神态慎重像心怀畏惧，做小事时小心谨慎像不敢去做。难于进取而易于退让，柔弱谦恭像是很无能的样子。儒者的容貌就是这样的。”\n#【儒者的备豫】\n儒有居处齐难，其坐起恭敬，言必先信，行必中正，道涂不争险易之利，冬夏不争阴阳之和，爱其死以有待也，养其身以有为也。其备豫有如此者。\n儒者的起居庄重谨慎，坐立行走恭敬，言语讲求诚信，行为必定中正。在道路上不与行人争夺平坦之路，冬夏之季不与人争冬暖夏凉的地方。不轻易赴死以等待值得牺牲生命的事情，修身养性以期待有所作为。儒者就是这样为未来做准备的。\n#【儒者的近人】\n儒有不宝金玉，而忠信以为宝；不祈土地，立义以为土地；不祈多积，多文以为富。难得而易禄也，易禄而难畜也，非时不见，不亦难得乎？非义不合，不亦难畜乎？先劳而后禄，不亦易禄乎？其近人有如此者。\n儒者宝贵的不是金玉而是忠诚信誉，不谋求占有土地而把仁义当做土地，不求积蓄很多财富而把学问广博作为财富。儒者难以得到却容易供养，容易供养却难以留住。不到适当的时候不会出现，不是很难得吗？不正义的事情就不合作，不是很难留住他们吗？先效力而后才要俸禄，不是很容易供养吗？儒者待人接物就是这样的。\n#【儒者的特立】\n儒有委之以货财，淹之以乐好，见利不亏其义；劫之以众，沮之以兵，见死不更其守；鸷虫攫搏不程勇者，引重鼎不程其力；往者不悔，来者不豫；过言不再，流言不极；不断其威，不习其谋。其特立有如此者。\n儒者对于别人委托的财货不会有贪心，身处玩乐之境也不会沉溺，不惧怕众人的威逼利诱，不害怕来自武力的威胁。见利不会忘义，面对死亡也不改操守。遇到猛禽猛兽的攻击不度量自己的力量而与之搏斗，推举重鼎不度量自己的力量尽力而为。对过往的事情不追悔，对未来的事情不疑虑。错话不会说第二次，对流言蜚语不追根问底。时常保持威严，不学习什么权谋。儒者的特立独行就是这样的。\n#【儒者的刚毅】\n儒有可亲而不可劫也；可近而不可迫也；可杀而不可辱也。其居处不淫，其饮食不溽；其过失可微辨而不可面数也。其刚毅有如此者。\n儒者可以亲近而不可以胁迫，可以接近而不可以威逼，可以杀害而不可侮辱。他们的居处不奢侈，他们的饮食不丰厚，他们的过失可以委婉地指出不可以当面数落。儒者的刚强坚毅就是这样的。\n#【儒者的自立】\n儒有忠信以为甲胄，礼义以为干橹；戴仁而行，抱义而处，虽有暴政，不更其所。其自立有如此者。\n儒者以忠信作为铠甲，以礼仪作为盾牌，心中想着仁去行动，怀抱着义来居处，即使遇到暴政，也不改变操守。儒者操守上的自立就是这样的。\n#【儒者的出仕】\n儒有一亩之宫，环堵之室，筚门圭窬，蓬户瓮牖；易衣而出，并日而食，上答之不敢以疑，上不答不敢以谄。其仕有如此者。\n儒者有一亩地的宅院，居住着一丈见方的房间，荆竹编的院门狭小如洞，用蓬草编作房门，用破瓮口作为窗框。外出时才换件遮体的衣服，一天的饭并为一顿吃。君上采纳他的建议，不敢产生怀疑；君上不采纳他的建议，也不敢谄媚求进。儒者做官的原则就是这样的。\n#【儒者的忧思】\n儒有今人与居，古人与稽；今世行之，后世以为楷；适弗逢世，上弗援，下弗推，谗谄之民有比党而危之者，身可危也，而志不可夺也，虽危起居，竟信其志，犹将不忘百姓之病也。其忧思有如此者。\n儒者与今人一起居住，而以古人的道德标准要求自己；儒者今世的行为，可以作为后世的楷模。如果生不逢时，上面没人援引，下面没人推荐，进谗谄媚的人又合伙来陷害他，只可危害他的身体，而不可剥夺他的志向。虽然能危害他的生活起居，最终他还要施展自己的志向抱负，仍将不忘百姓的痛苦。儒者的忧民意识就是这样的。\n#【儒者的宽裕】\n儒有博学而不穷，笃行而不倦；幽居而不淫，上通而不困；礼之以和为贵，忠信之美，优游之法，举贤而容众，毁方而瓦合。其宽裕有如此者。\n儒者广博地学习而无休止，专意实行而不倦怠，独处时不放纵自己，通达于上时不离道义。遵循以和为贵的原则，悠然自得而有节制。仰慕贤人而容纳众人，有时可削减自己的棱角而依随众人。儒者的宽容大度就是这样的。\n#【儒者的举贤】\n儒有内称不辟亲，外举不辟怨，程功积事，推贤而进达之，不望其报；君得其志，茍利国家，不求富贵。其举贤援能有如此者。\n儒者举荐人才，对内不避亲属，对外不避有仇怨的人。度量功绩，积累事实，不谋求更高的禄位。推荐贤能而进达于上，不祈望他们的报答。国君满足了用贤的愿望，百姓依仗他的仁德。只要有利于国家，不贪图个人的富贵。儒者的举贤荐能就是这样的。\n#【儒者的对待朋友】\n儒有闻善以相告也，见善以相示也；爵位相先也，患难相死也；久相待也，远相致也。其任举有如此者。\n儒者听到有益的话就告诉他，见到善行就指示给他，有爵位就逊让给他，他有难处就以死效命，他久不得志就等待他，他在野就把他招来共同辅政。儒者的对待朋友就是这样的。\n#【儒者的品德的不同一般】\n儒有澡身而浴德，陈言而伏，静而正之，上弗知也；粗而翘之，又不急为也；不临深而为高，不加少而为多；世治不轻，世乱不沮；同弗与，异弗非也。其特立独行有如此者。\n儒者沐身心于道德之中，陈述自己的意见而伏听君命。平静地纠正国君的过失，君上和臣下都难以觉察。默默地等待，不急于去做。不在地位低下的人面前自高自大，不在功劳较少的人面前自夸功高。国家大治的时候，群贤并处而不自轻；国家混乱的时候，坚守正道而不沮丧。对观点相同的人不随便吹捧，对观点不同的人不妄加非议。儒者的品德的不同一般是这样的。\n#【儒者的行为方正】\n儒有上不臣天子，下不事诸侯；慎静而尚宽，强毅以与人，博学以知服；近文章砥厉廉隅；虽分国如锱铢，不臣不仕。其规为有如此者。\n儒者中有这样一类人，他上不臣事天子，下不事奉诸侯；性情慎静而崇尚宽大，性格强毅而能从善如流，学间渊博而能服膺胜于己者。多读圣贤之书，以磨练自己的品行气节。即令是要把整个国家分给他，在他看来也不过是芝麻般的小事而不为动心，不会因此就出来称臣做官。儒者行为方正就是这样的。\n#【儒者的交友】\n儒有合志同方，营道同术；并立则乐，相下不厌；久不相见，闻流言不信；其行本方立义，同而进，不同而退。其交友有如此者。\n儒者和朋友志同道合，作学问的路子也一样；彼此皆有成就则皆大欢喜，彼此有了差距也互不嫌弃；彼此久不相见，如果听到了有关对方的流言蜚语，也绝不相信。友谊的基础建立在方正上、道义上，合乎这一点就是朋友，违背这一点就敬而远之。儒者的交友有如此者。\n#【儒者的恭敬谦让】\n温良者，仁之本也；敬慎者，仁之地也；宽裕者，仁之作也；孙接者，仁之能也；礼节者，仁之貌也；言谈者，仁之文也；歌乐者，仁之和也；分散者，仁之施也；儒皆兼此而有之，犹且不敢言仁也。其尊让有如此者。\n温和善良是仁的根本，恭敬谨慎是仁的基础，宽宏大量是仁的开始，谦逊待人是仁的功能，礼节是仁的外表，言谈是仁的文采，歌舞音乐是仁的和谐，分散财物是仁的施与。儒者兼有这几种美德，还不敢说已经做到仁了。儒者的恭敬谦让就是这样的。\n儒有不陨获于贫贱，不充诎于富贵，不慁君王，不累长上，不闵有司，故曰儒。今众人之命儒也妄，常以儒相诟病。****”\n儒者不因贫贱而灰心丧气，不因富贵而得意忘形。不因为国君的侮辱、卿大夫的掣肘、官员们的刁难而改变节操，所以才叫做‘儒’。现在很多人自命为儒但却有名无实，所以才往往被作为笑料来讲。””\n孔子至舍，哀公馆之，闻此言也，言加信，行加义：“终没吾世，不敢以儒为戏。”\n孔子从国外返回鲁国，鲁哀公在公馆里接见了他，鲁哀公听到孔子的这些话后，自己说话更加守信，行为更加严肃，说：“直到我死，再不敢拿儒者开玩笑了。”\n"},{"id":142,"href":"/posts/literature/%E5%85%B9%E5%AE%8B%E6%9C%89%E4%B9%B1%E8%AF%91%E6%96%87/","title":"兹宋有乱(译文)","section":"文学","content":"宋元公不讲信用、私心很多，而讨厌华氏、向氏。华定、华亥和向宁策划说：“逃亡比死强，先下手吗？”华亥假装有病，以引诱公子们。凡是公子去探病，就扣押起来。夏季，六月初九，杀死公子寅、公子御戎、公子朱、公子固、公孙援、公孙丁，把向胜、向行囚禁在谷仓里。宋元公到华亥氏那里去请求，华氏不答应，反而要乘机劫持元公。十六日，将太子栾和他的同母兄弟辰、公子地作为人质。元公也取得了华亥的儿子无慼，向宁的儿子罗、华定的儿子启，和华氏结盟，把他们作为人质。\n宋国华氏、向氏的作乱，公子城、公孙忌、乐舍、司马彊、向宜、向郑、楚建郳申逃亡到郑国。他们的党羽和华氏在鬼阎作战，子城被打败。子城去到晋国。\n华亥和他的妻子，一定要盥洗干净、伺候作为人质的公子吃完饭以后才吃饭。宋元公和夫人每天一定到华氏那里，让公子吃完以后才回去，华亥担心这种情况，想要让公子回去。向宁说：“正因为元公没有信用，所以把他的儿子作为人质。如果又让他回去，死就很快来到了。”宋元公向华费遂请求，准备攻打华氏。华费遂回答说：“下臣不敢爱惜一死，恐怕是想要去掉忧虑反而滋长忧虑吧！下臣因此害怕，怎敢不听命令？”宋元公说：“孩子们死了是命中注定，我不能忍受他们受耻辱。”冬季，十月，宋元公杀了华氏、向氏的人质而攻打这两家。十三日，华氏、向氏逃亡到陈国，华登逃亡到吴国。向宁想要杀死太子。华亥说：“触犯了国君而出逃，又杀死他的儿子，还有谁接纳我们？而且放他们回去有功劳。”派少司寇牼带着公子们回去，说：“您的年岁大了，不能再事奉别人。用三个公子作为证明，一定可以免罪。”公子们进入国都，华牼将要从公门出去。宋元公急忙接见他，拉着他的手，说：“我知道你没有罪，进来，恢复你的官职。\n宋国的华费遂生了华貙、华多僚、华登。华貙做少司马，华多僚做御士，与华貙不和，就在宋公面前诬陷说：“华貙打算接纳逃亡的人。”屡次说这些话，宋元公说：“司马由于我的缘故，使他的儿子逃亡。死和逃亡都是命中注定，我不能让他的儿子再逃亡。”华多僚回答说：“君王如果爱惜司马，就应当逃亡。死如果可以逃避，哪有什么远不远？”宋元公害怕，让侍者召来司马的侍者宜僚，给他酒喝，让他告诉司马驱逐华貙。司马叹气说：“一定是多僚干的。我有一个造谣的儿子而不能杀死他，我又不死，国君有了命令，怎么办？”就和宋元公商量驱逐华貙，准备让他在孟诸打猎时打发他走。宋元公给他酒喝，厚厚地送给他礼物，还赏赐随行的人。司马也像宋元公一样，张匄感到奇怪，说：“一定有原因。”让华貙用剑架在宜僚脖子上追问他，宜僚把话全说出来，张匄想要杀死多僚，华貙说：“司马年老了，华登的逃亡已经很伤他的心，我又加重了他的伤心，不如逃亡。”五月十四日，华貙准备进见司马以后再走。在朝廷上遇见多僚为司马驾车上朝，张牼不能控制自己的愤怒，就和华貙、臼任、郑翩杀了多僚，劫持了司马叛变，召集逃亡的人。二十日，华氏、向氏回来，乐大心。丰愆、华貙在横地抵御他们。华氏住在卢门，领着南里的人叛变。六月十九日，宋国修缮旧城和桑林之门用以据守。\n冬季，十月，华登率领吴军救援华氏，齐国的乌枝鸣在宋国戍守，厨邑大夫濮说：“《军志》有这样的话：‘先发制人可以摧毁敌人士气，后发制人要等到敌人士气衰竭。’何不乘他们疲劳和没有安定而进攻？如果敌人已经进来而军心安定，华氏的人就多了，我们就后悔不及了。”乌枝鸣听从了。十七日，齐军、宋军在鸿口击败吴军，俘虏了他们两个将领公子苦雂、偃州员。华登率领余部击败宋军。宋元公想要逃亡，厨邑大夫濮说：“我是小人，可以为君王死难，而不能护送君王逃亡，请君王等待一下。”于是就巡行全军说：“挥舞旗帜的，是国君的战士。”众人按他的话挥舞旗帜，宋元公在扬门上见到这种情况，下城巡视，说：“国家亡，国君死，这是各位的耻辱，岂独是我一人的罪过呢？”齐国的乌枝鸣说：“使用少量的兵力，最好是一起拼命，一起拼命，最好是撤去守备。他们的武器多得很，建议我军都用剑和他们作战。”宋公听从了。华氏败走，宋军、齐军又追上去，厨邑大夫濮用裙子包着砍下的脑袋，扛在肩上快跑，说：“杀死华登了！”于是就在新里打败了华氏，翟偻新住在新里，战斗开始以后，到宋元公那里脱下盔甲而归附。华妵住在公里，也像翟偻新一样。\n十一月初四日，公子城带着晋军来到，曹国翰胡会合晋国荀吴、齐国苑何忌、卫国公子朝救援宋国，初七日，和华氏在赭丘作战，郑翩希望摆成鹳阵，他的御者希望摆成鹅阵，子禄为公子城驾御战车，庄堇作为车右，干犫为吕地封人华豹驾御战车，张匄作为车右。两车相遇，公子城退了回去，华豹大喊说：“城啊！”公子城发怒，转回来，将要装上箭，而华豹已经拉开了弓。公子城说：“平公的威灵，还在保佑我！”华豹射箭，穿过公子城和子禄之间，公子城又要装上箭，华豹又已经拉开了弓，公子城说：“不让我还手，卑鄙啊！”华豹从弓上抽下箭，公子城一箭射去，把华豹射死，张匄抽出殳下车，公子城一箭射去，射断张匄的腿，张匄爬过来用殳敲断了公子城的车轸，公子城又发了一箭，张匄死去，干犫请求给他一箭，公子城说：“我替你向国君说情。”干犫回答说：“不和战友一起战死，这是犯了军队中的大法，犯了法而跟从您，君王哪里用得着我？您快点吧！”于是公子城就射了他一箭，射死了，宋军、齐军把华氏打得大败，包围南里，华亥拍着胸脯大喊，进见华貙，说：“我们成了晋国的栾氏了。”华貙说：“您不要吓唬我，碰上倒霉才会死呢。”派华登到楚国请求出兵，华貙带领战车十五辆，步兵七十人突围而出，在睢水岸边吃饭，哭着送走华登，就再次冲进包围圈。楚国的薳越率领军队打算迎接华氏，太宰犯劝谏说：“诸侯之中惟有宋国的臣下还事奉着国君，现在又争夺国政，丢开国君而帮助臣下，恐怕不可以吧！”楚平王说：“我对你说晚了，已经答应他们了。”\n楚国的薳越派人告诉宋国说：“寡君听说君王有不好的臣下使君王忧虑，恐怕成为宗庙的羞耻，寡君请求接受下来加以诛戮。”宋元公回答说：“孤没有才能，不能取得父兄的欢心，因此成为君王的忧虑，承蒙君王下达命令。君臣之间每天作战，如果君王说：‘我一定帮助臣下’，也只能唯命是听，人们有话说：‘不要经过动乱人家的门口。”君王如果赐恩保护敝邑，不去保护不忠，以奖励作乱的人，这是孤的愿望，请君王考虑一下。”楚国人担心这件事，诸侯派往宋国戌守的将领商量说：“如果华氏感到没有前途而拼命战斗，楚国由于不见功效而很快出兵作战，这于我们不利，不如让他们出去，以成就楚国的功绩，华氏也不能有所作为了，救援了宋国而除掉了他们的祸害，还有什么要求呢？”于是坚决请求放出华氏，宋国人听从了。二月二十一日，宋国的华亥、向宁、华定、华貙、华登、皇奄伤、省臧、士平逃亡楚国。宋元公派公孙忌做大司马，边卬做大司徒，乐祁做司城，仲几做左师，乐大心做右师，乐輓做大司寇，以便用来安定国内的人们。\n"},{"id":143,"href":"/posts/literature/%E5%85%B9%E5%AE%8B%E6%9C%89%E4%B9%B1/","title":"兹宋有乱","section":"文学","content":"宋元公无信多私，而恶华、向。华定、华亥与向宁谋曰：「亡愈于死，先诸？」华亥伪有疾，以诱群公子。公子问之，则执之。夏六月丙申，杀公子寅、公子御戎、公子朱、公子固、公孙援、公孙丁、拘向胜、向行于其廪。公如华氏请焉，弗许，遂劫之。癸卯，取大子栾与母弟辰、公子地以为质。公亦取华亥之子无戚、向宁之子罗、华定之子启，与华氏盟，以为质。\n宋华、向之乱，公子城、公孙忌、乐舍、司马强、向宜、向郑、楚建、郳甲出奔郑。其徒与华氏战于鬼阎，败子城。子城适晋。华亥与其妻必盥而食所质公子者而后食。公与夫人每日必适华氏，食公子而后归。华亥患之，欲归公子。向宁曰：「唯不信，故质其子。若又归之，死无日矣。」公请于华费遂，将攻华氏。对曰：「臣不敢爱死，无乃求去忧而滋长乎！臣是以惧，敢不听命？」公曰：「子死亡有命，余不忍其呴。」冬十月，公杀华、向之质而攻之。戊辰，华、向奔陈，华登奔吴。向宁欲杀大子，华亥曰：「干君而出，又杀其子，其谁纳我？且归之有庸。」使少司寇牼以归，曰：「子之齿长矣，不能事人，以三公子为质，必免。」公子既入，华牼将自门行。公遽见之，执其手曰：「余知而无罪也，入，复而所。」\n宋华费遂生华貙、华多僚、华登。貙为少司马，多僚为御士，与貙相恶，乃谮诸公曰：「貙将纳亡人。」亟言之。公曰：「司马以吾故，亡其良子。死亡有命，吾不可以再亡之。」对曰：「君若爱司马，则如亡。死如可逃，何远之有？」公惧，使侍人召司马之侍人宜僚，饮之酒而使告司马。司马叹曰：「必多僚也。吾有谗子而弗能杀，吾又不死，抑君有命，可若何？」乃与公谋逐华貙，将使田孟诸而遣之。公饮之酒，厚酬之，赐及从者。司马亦如之。张丐尤之，曰：「必有故。」使子皮承宜僚以剑而讯之。宜僚尽以告。张丐欲杀多僚，子皮曰：「司马老矣，登之谓甚，吾又重之，不如亡也。」五月丙申，子皮将见司马而行，则遇多僚御司马而朝。张丐不胜其怒，遂与子皮、臼任、郑翩杀多僚，劫司马以叛，而召亡人。壬寅，华、向入。乐大心、丰愆、华牼御诸横。华氏居卢门，以南里叛。六月庚午，宋城旧鄘及桑林之门而守之。\n冬十月，华登以吴师救华氏。齐乌枝鸣戍宋。厨人濮曰：「《军志》有之：『先人有夺人之心，后人有待其衰。』盍及其劳且未定也伐诸？若入而固，则华氏众矣，悔无及也。」从之。丙寅，齐师、宋师败吴师于鸿口，获其二帅公子苦雂、偃州员。华登帅其馀以败宋师。公欲出，厨人濮曰：「吾小人，可藉死而不能送亡，君请待之。」乃徇曰：「杨徽者，公徒也。」众从之。公自杨门见之，下而巡之，曰：「国亡君死，二三子之耻也，岂专孤之罪也？」齐乌枝鸣曰：「用少莫如齐致死，齐致死莫如去备。彼多兵矣，请皆用剑。」从之。华氏北，复即之。厨人濮以裳裹首而荷以走，曰：「得华登矣！」遂败华氏于新里。翟偻新居于新里，既战，说甲于公而归。华妵居于公里，亦如之。\n十一月癸未，公子城以晋师至。曹翰胡会晋荀吴、齐苑何忌、卫公子朝救宋。丙戌，与华氏战于赭丘。郑翩愿为鹳，其御愿为鹅。子禄御公子城，庄堇为右。干犨御吕封人华豹，张丐为右。相遇，城还。华豹曰：「城也！」城怒而反之，将注，豹则关矣。曰：「平公之灵，尚辅相余。」豹射，出其间。将注，则又关矣。曰：「不狎，鄙！」押矢。城射之，殪。张丐抽殳而下，射之，折股。扶伏而击之，折轸。又射之，死。干丐请一矢，城曰：「余言汝于君。」对曰：「不死伍乘，军之大刑也。干刑而从子，君焉用之？子速诸。」乃射之，殪。大败华氏，围诸南里。华亥搏膺而呼，见华貙，曰：「吾为栾氏矣。」貙曰：「子无我迋。不幸而后亡。」使华登如楚乞师。华貙以车十五乘，徒七十人，犯师而出，食于睢上，哭而送之，乃复入。楚薳越帅师将逆华氏。大宰犯谏曰：「诸侯唯宋事其君，今又争国，释君而臣是助，无乃不可乎？」王曰：「而告我也后，既许之矣。」\n楚薳越使告于宋曰：「寡君闻君有不令之臣为君忧，无宁以为宗羞？寡君请受而戮之。」对曰：「孤不佞，不能媚于父兄，以为君忧，拜命之辱。抑君臣日战，君曰『余必臣是助』，亦唯命。人有言曰：『唯乱门之无过』。君若惠保敝邑，无亢不衷，以奖乱人，孤之望也。唯君图之！」楚人患之。诸侯之戍谋曰：「若华氏知困而致死，楚耻无功而疾战，非吾利也。不如出之，以为楚功，其亦能无为也已。救宋而除其害，又何求？」乃固请出之。宋人从之。己巳，宋华亥、向宁、华定、华貙、华登、皇奄伤、省臧，士平出奔楚。宋公使公孙忌为大司马，边卬为大司徒，乐祁为司马，仲几为左师，乐大心为右师，乐挽为大司寇，以靖国人。\n"},{"id":144,"href":"/posts/literature/%E5%88%BA%E4%B8%96%E7%96%BE%E9%82%AA%E8%B5%8B/","title":"刺世疾邪赋","section":"文学","content":"伊五帝之不同礼，三王亦又不同乐。数极自然变化，非是故相反。德政不能救世溷乱，赏罚岂足惩时清浊？春秋时祸败之始，战国逾增其荼毒。秦汉无以相踰越，乃更加其怨酷。宁计生民之命？为利己而自足。 于兹迄今，情伪万方。佞诌日炽，刚克消亡。舐痔结驷，正色徒行。妪名势，抚拍豪强。偃蹇反俗，立致咎殃。捷慑逐物，日富月昌。浑然同惑，孰温孰凉？邪夫显进，直士幽藏。 原斯瘼之所兴，实执政之匪贤。女谒掩其视听兮，近习秉其威权。所好则钻皮出其毛羽，所恶则洗垢求其瘢痕。虽欲竭诚而尽忠，路绝险而靡缘。九重既不可启，又群吠之狺狺。安危亡于旦夕，肆嗜慾于目前。奚异涉海之失柁，坐积薪而待然？荣纳由于闪榆，孰知辨其蚩妍？故法禁屈橈于势族，恩泽不逮于单门。宁饥寒于尧舜之荒岁兮，不饱暖于当今之丰年。乘理虽死而非亡，违义虽生而匪存。 有秦客者，乃为诗曰：河清不可俟，人命不可延。顺风激靡草，富贵者称贤。文籍虽满腹，不如一囊钱。伊优北堂上，抗髒依门边。 鲁生闻此辞，紧而作歌曰：势家多所宜，咳唾自成珠；被褐怀金玉，兰蕙化为刍。贤者虽独悟，所困在群愚。且各守尔分，勿复空驰驱。哀哉复哀哉，此是命矣夫！\n五帝时候的礼仪制度不同，三王时候的礼仪制度也各不相同，气数到了极限，自然就要发生变化，非和是本来就是互相排斥的，施行仁德不能拯救社会的混乱，实行赏罚难道就可以惩戒时代的清浊吗?春秋时代是祸乱破败的开始，战国时又加重了人民的苦难，秦汉时期也没有什么改变，更增加了人民的怨恨和苦难，哪里还考虑百姓的死活，只要对自己有利就满足了。 从那时到现在，弄虚作假的现象表现在各个方面，虚伪奉承的歪风日甚一日，刚强正直的品德逐渐消亡，舔痔疮的人可以乘四匹马拉的车，正派的人只能徒步而行，对豪强之家溜须拍马，稍微有点骨气、敢于反抗这恶劣风气的，立即遭到祸殃。不择手段追逐名利者指日高升。富贵昌盛，好坏不分，冷热难辨，奸邪之人飞黄腾达，正直的人只能隐居潜藏。 追究这弊病的兴起实在是因为当政者不贤明。女人和宦官掩住了皇帝的耳目，宠臣把持了国家的大权。他们所喜好的人，千方百计让其长出羽毛；他们所讨厌的人，就不择手段找缺点毛病。正直之士即便想谒诚尽忠，为国效命，也如同面临绝险的境地，找不到路径。皇宫的大门既然打不开，又加上一群恶狗汪汪乱叫，国家的危亡就在旦夕，还在放纵自己的嗜好欲望，只贪眼前之欢。这和渡海的大船失去了舵盘，坐在干柴上等待燃烧有什么两样。 荣幸地被重用者都是些善于阿谀奉承之辈，有谁知道辨别他们的美丑。所以，连法律禁令都屈于豪门贵族，皇恩厚泽怎么能到达贫寒之家。宁可忍饥耐寒在尧舜时的灾荒之岁，也不吃饱穿暖在现在的丰收之年。坚持真理即使死去也，违背正义即使活着也等于死了。 有一秦地的人作说：“太平盛世不能等到了，人的生命是有限的，只好看风使舵，顺水推舟吧!谁有权势谁就是贤德之人，满肚子学问比不上一袋子钱更实用。卑躬屈膝就可以成为富贵人家，刚直的人只能依门而立。” 鲁地的人听到这些话，接着作歌说：“豪门势家处处遂心满意，咳出的唾沫都能被当作珍珠。贫苦的人空怀美好的理想和才华，如同芬芳的花卉变成喂牛的干草。有才德的人即使一个人很清醒，也只能被那些愚蠢的人所困。暂且守你的本分吧!不要再白白地奔走，痛苦、悲哀，这就是命运。\n"},{"id":145,"href":"/posts/literature/%E5%88%BB%E6%84%8F/","title":"刻意","section":"文学","content":"励志矫情，洁白自诩。逃避社会，厌恶庸俗。清谈迂 论，冷嘲热讽。作为持不同政见者，自视甚高。在野的隐 士最爱来这一套。他们一肚皮的不合时宜。暮年牢骚更盛 ，最后跳河自杀。 宣传仁义，演说忠信。恭俭克己，谦让待人。作为传 统文化的肩承者，注重个人思想修养，半在野半在朝的学 士最爱来这一套。他们从事文化教育活动，年轻游历讲学 ，老了在家授课。 满口政绩，树立形象。君臣有礼，尊卑有序。作为各 级掌权者，强调整顿社会，以求安定。在朝的显士最爱来 这一套。他们崇拜君主，加强国力，拓张领土，忙得要命 ，累得要死。 害怕麻烦，贪图清静。移居山林，学会钓鱼。作为社 会竞争的失败者，拒绝再干任何事业。在野的闲士最爱来 这一套。他们无功无名，远避红尘，不再关心社会，但求 不忙不累而已。 做深呼吸，通丹田气。打太极拳，练鹤翔桩。作为活 命哲学的信奉者，老而不死比一切都要紧。在朝在野都有 一些士类最爱来这一套。他们坚持锻炼，注意保养，羡慕 彭祖活八百岁。 这五类士以外，还有一类。他们用不着励志而人品自 高，忘记了仁义而修身养性。谈不上政绩而实现安定, 家不在山林而同样悠闲，从来不锻炼而仍然长寿。什么都舍 弃了，什么都完备了。他们精神恬淡，无限制的开放，所 以感召了众多的佳士，纷纷追随。他们凭什么？凭天道， 凭圣德。 恬淡，寂寞，虚空，静止，无为。这个体系是天地间 最灵的水平仪，是修道养德的最高标准。这个标准要求圣 人休俗虑。俗虑休了，处境就平安了顺适了。处境平顺， 精神就恬淡了。恬淡的精神，平顺的处境，足以排遣忧患 ，抵抗妖邪。这样，圣人的德行就完备了，精神就不虚耗 了。近似的话，我在《天道篇》内已经说过。 这个标准要求圣人，生，顺随自然发展；死，参与物 质变化；静，阴气般的凝静；动，阳气般的波动。同样的 话，我在《天道篇》内已经说过。 此外，这个标准还要求圣人不必预先替后代求福，谨 防带头给将来召祸。为政切忌没事找事，最好得过且过， 好比唱歌，切忌领唱，最好应和。主观能动性不要加强， 而要减弱。坐待条件成熟再动手吧，不必提前闹得风风火 火。机心要割除，智囊要撕破，听天由命，获益良多。 修身治国，以上几方面都做到，圣人就不招老天怨恨 ，就不被外物牵掣，就不受帝人排斥，就不闻野鬼骂詈。 百姓看见他光辉可爱而不会刺眼，发现他信用可靠而不必 如期。他闲散，不细想，不深究。他透明，不阴谋，不阳 谋。睡了不做梦，醒了不担忧。生是泡沫，短暂的漂浮。 死是休息，永久的享受。他的精神单纯，他的灵魂清醒。 虚空恬淡的他达到了修道养德的最高标准。 用修道养德的标准来衡量，悲伤与欢乐是德性的偏斜 ，喜悦与愤怒是道理的错误，爱好与厌恶是心态的失常。 所以，高度的道德应该是忘悲忘欢，不喜不怒，无好无恶 。高度的静止是专一，不因为外界变化而动摇，高度的虚 空是宽容，不去触犯外界。高度的恬淡是独立，不去联络 外界。高度的纯粹是和谐，不去干涉外界。 恬淡，寂寞，虚空，静止，无为，这是修道养德的最 高标准，不可分割，自成体系。与此标准相反，悲欢，喜 怒，好恶，消耗人的精力；动摇，触犯，联络，干涉，消 耗人的体力。体力消耗不止不休，便会累垮。精力消耗没 完没了，便会憔悴。这些憔悴累垮的人，在持不同政见的 隐士阶层，在肩承传统文化的学士阶层，在各级掌权的显 士阶层，最为常见。 请观察瓶水、缸水、池水、河水、海水，就能了解水 性，水性喜清。滤去杂质，水便清了。水性喜平。不去搅 动，水便平了，水性不喜封闭。一封闭就溷浊再不 清了。看得出来，水在模仿天气。天气，扫除杂雾便晴， 风不吹动便静，阴云密闭又溷浊不晴了。所以水性乃天德 的投影。人也能模仿水性，效法天德吗？ 能。改掉习染的杂质，便清纯了。不受外物的摇动， 便平静了。断绝外交，不去联络外界，便恬淡了。开放自 身，宽容一切，便虚空了。纵然有所活动，也不是有意图 的，便谐和于大自然了。这里说的乃是保养精神的方法。 江南吴国越国，冶炼工艺俱精，锻打宝剑，天下闻名 ，谁购得吴越剑，皆会锁藏箱匣，视为传家之宝，不愿佩 戴，不敢妄用。养精的道理与蓄锐相同，人的精神岂可妄 用。 人身上最具有能动性的便是精神。精神外射，穿透任 何屏障，射向东西南北无限远，上穿天，下透地，无所不 射。精神遥感万物，遥控万物，遥变万物，遥养万物。人 的精神乃宇宙精神的分支。精神来无影去无踪。精神是人 体内的主宰s，具备造化功能，等同皇天后土。 大道纯粹朴素，简单明白。修道者放弃了许多东西， 但有一样必须守住，就是精神。精神守好，灵魂与肉体就 不再矛盾，就不再分裂，就合二而一了。这个一便是圆融 自足的小宇宙。这个一与大宇宙息息相通，同步运行，密 合自然原理，修道者由此而得道焉。难怪俗话说：“世人 金钱挂帅。清官名声要紧。贤士追求理想。圣人守好精神 。” 大道的朴素性决定了修道者的洁白，拒染悲欢喜怒好 恶种种感情色彩。大道的纯粹性决定了修道者的无为，面 对外界，拒不动摇，拒不触犯，拒不联络，拒不干涉。洁白了，无为了，精神当然不至于虚耗了。 能圆满体现洁白无为的乃能称为真人，真人亦即至人 ，到顶的人，拔尖的人。\n刻意尚行，离世异俗，高论怨诽，为亢而已矣。此山谷之士，非世 之人，枯槁赴渊者之所好也。语仁义忠信，恭俭推让，为修而已矣。 此平世之士，教诲之人，游居学者之所好也。语大功，立大名，礼君 臣，正上下，为治而已矣。此朝廷之士，尊主强国之人，致功并兼者 之所好也。就薮泽，处闲旷，钓鱼闲处，无为而已矣。此江海之士， 避世之人，闲暇者之所好也。吹囗呼吸，吐故 纳新，熊经鸟申，为寿而已矣。此道引之士，养形之人，彭祖寿考者 之所好也。若夫不刻意而高，无仁义而修，无功名而治，无江海而闲 ，不道引而寿，无不忘也，无不有也。淡然无极而众美从之。此天地 之道，圣人之德也。 故曰：夫恬淡寂漠，虚无无为，此天地之平而道德之质也。故曰： 圣人休休焉则平易矣。平易则恬淡矣。平易恬淡，则忧患不能入，邪 气不能袭，故其德全而神不亏。故曰：圣人之生也天行，其死也物化 。静而与阴同德，动而与阳同波。不为福先，不为祸始。感而后应， 迫而后动，不得已而后起。去知与故，遁天之理。故无天灾，无物累 ，无人非，无鬼责。其生若浮，其死若休。不思虑，不豫谋。光矣而 不耀，信矣而不期。其寝不梦，其觉无忧。其神纯粹，其魂不罢。虚 无恬淡，乃合天德。故曰：悲乐者，德之邪也；喜怒者，道之过也； 好恶者，德之失也。故心不忧乐，德之至也；一而不变，静之至也； 无所于忤，虚之至也；不与物交，淡之至也；无所于逆，粹之至也。 故曰：形劳而不休则弊，精用而不已则劳，劳则竭。水之性，不杂则 清，莫动则平；郁闭而不流，亦不能清；天德之象也。故曰：纯粹而 不杂，静一而不变，淡而无为，动而以天行，此养神之道也。 夫有干越之剑者，柙而藏之，不敢用也，宝之至也。精神四达并流 ，无所不极，上际于天，下蟠于地，化育万物，不可为象，其名为同 帝。纯素之道，唯神是守。守而勿失，与神为一。一之精通，合于天 伦。野语有之曰：“众人重利，廉士重名，贤士尚志，圣人贵精。” 故素也者，谓其无所与杂也；纯也者，谓其不亏其神也。能体纯素， 谓之真人\n"},{"id":146,"href":"/posts/literature/%E5%90%9B%E5%AD%90/","title":"君子","section":"文学","content":"天子无妻，告人无匹也。四海之内无客礼，告无适也。足能行，待相者然后进；口能言，待官人然后诏。不视而见，不听而聪，不言而信，不虑而知，不动而功，告至备也。天子也者，势至重，形至佚，心至愈；志无所诎，形无所劳，尊无上矣。《诗》曰：“普天之下；莫非王土；率土之滨，莫非王臣。”此之谓也。 圣王在上，分义行乎下，则士大夫无流淫之行，百吏官人无怠慢之事，众庶百姓无奸怪之俗，无盗贼之罪，莫敢犯上之禁。天下晓然皆知夫盗窃之人不可以为富也，皆知夫贼害之人不可以为寿也，皆知夫犯上之禁不可以为安也。由其道则人得其所好焉，不由其道则必遇其所恶焉。是故刑罚綦省而威行如流，世晓然皆知夫为奸则虽隐窜逃亡之由不足以免也，故莫不服罪而请。《书》曰：“凡人自得罪。”此之谓也。 故刑当罪则威，不当罪则侮；爵当贤则贵，不当贤则贱。古者刑不过罪，爵不逾德。故杀其父而臣其子，杀其兄而臣其弟。刑罚不怒罪，爵赏不逾德，分然各以其诚通。是以为善者劝，为不善者沮；刑罚綦省而威行如流，政令致明而化易如神。传曰：“一人有庆，兆民赖之。”此之谓也。乱世则不然：刑罚怒罪，爵赏逾德，以族论罪，以世举贤。故一人有罪而三族皆夷，德虽如舜，不免刑均，是以族论罪也。先祖当贤，后子孙必显，行虽如桀、纣，列从必尊，此以世举贤也。以族论罪，以世举贤，虽欲无乱，得乎哉！《诗》曰：“百川沸腾，山冢崒崩，高岸为谷，深谷为陵。哀今之人，胡憯莫惩！”此之谓也。 论法圣王，则知所贵矣；以义制事，则知所利矣。论知所贵，则知所养矣；事知所利，则知所出矣。二者，是非之本，得失之原也。故成王之于周公也，无所往而不听，知所贵也。桓公之于管仲也，国事无所往而不用，知所利也。吴有伍子胥而不能用，国至于亡，倍道失贤也。故尊圣者王，贵贤者霸，敬贤者存，慢贤者亡，古今一也。故尚贤使能，等贵贱，分亲疏、序长幼，此先王之道也。故尚贤使能，则主尊下安；贵贱有等，则令行而不流；亲疏有分，则施行而不悖；长幼有序，则事业捷成而有所休。故仁者，仁此者也；义者，分此者也；节者，死生此者也；忠者，惇慎此者也；兼此而能之，备矣；备而不矜，一自善也，谓之圣。不矜矣，夫故天下不与争能而致善用其功。有而不有也，夫故为天下贵矣。《诗》曰：“淑人君子，其仪不忒；其仪不忒，正是四国。”此之谓也。\n虽小道,必有可观者焉;致远恐泥,是以君子不为也 不知，无害为君子，知之无损为小人 诚于中，形于外，故君子必慎其独也 欲掩其恶，而卒不可掩;欲诈为善，而卒不可诈，则亦何益之有哉?此君子所以重以为戒，而必谨其独也 君子不妄动，动必有道 君子不徒语，语必有理 君子不苟求，求必有义 君子不虚行，行必有正 君子有九思：视思明，听思聪，色思温，貌思恭，言思忠，事思敬，疑思问，忿思难，见得思义 君子周而不比，小人比而不周 君子喻于义，小人喻于利 君子爱财，取之有道.贞妇爱色，纳之以礼 君子坦荡荡，小人常戚戚 君子道者三，我无能焉：仁者不忧，知者不惑，勇者不惧 君子义以为上。君子有勇而无义为乱；小人有勇而无义为盗 君子中庸，小人反中庸 君子之交淡如水 君子一言，驷马难追 天行健，君子以自强不息；地势坤，君子以厚德载物 君子之学，非为通也。为穷而不困，忧而意不衰也，知祸福终始而心不惑也 君子固穷，小人穷斯滥矣 富与贵，是人之所欲也，不以其道得之，不处也；贫与贱，是人之所恶也，不以其道得之，不去也。君子去仁，恶乎成名？君子无终食之间违仁，造次必于是，颠沛必于是 君子以同道为朋，小人以同利为朋\n君子于其所不知，盖阙如也。名不正，则言不顺；言不顺，则事不成；事不成，则礼乐不兴；礼乐不兴，则刑罚不中；刑罚不中，则民无所措手足。故君子名之必可言也，言之必可行也，君子于其言，无所苟而已矣 酒中不语真君子，财上分明大丈夫。 贼是小人，智过君子。君子固穷，小人穷斯滥矣 君子爱财，取之有道。 君子安贫，达人知命。 小人肥口，君子肥身。 君子千钱不计较，小人一钱恼人心。 门为小人而设，锁乃君子之防。 能言不是真君子，善处方为大丈夫！ 君子千里同舟，小人隔墙易宿。 强盗口内出赦书，君子口中无戏言。 栽树要栽松柏，结交要结君子。 门内有君子，门外君子至；门内有小人，门外小人至。 君子之交淡以成，小人之交甘以坏。 贤者不炫已之长，君子不夺人所好。 君子修其道德，不为穷困而改节。\n君子无过行，小人嫉之亦不能容。可知君子处小人，必平其气以待之，不可稍形激切也。 风俗日趋于奢淫靡所底止，安得有敦古朴之君子，力挽江河。 大丈夫处事，论是非不论祸福。士君子立言，贵平正尤贵精详。 浪子回头，仍不惭为君子。贵人失足，便贻笑于庸人。 闻人誉言，加意奋勉，闻人谤语，加意警惕，此君子修己之功也。 君子存心但凭忠信，而妇孺皆敬之如神，所以君子落得为君子。 君子以名教为乐，岂如稽阮之逾闲。圣人以悲悯为心，不取沮溺之忘世。 知过能改，便是圣人之徒。恶恶太严，终为君子之病。 数虽有定，而君子但求其理，理既得，数亦难违。变固宜防，而君子但守其常，常无失，变亦能御。 儒者多文为富，其文非时文也。君子疾名不称，其名非科名也。 才觉已有不是，便决意改图，此立志为君子也。明知人议其非，偏肆行无忌，此甘心为小人也。 义之中有利，而尚义之君子，初非计及于利也。利之中有害，而趋利之小人，并不顾其为害也。 隐微之衍，即干宪典，所以君子怀刑也。技艺之末，无益身心，所以君子务本也。\n危邦不入，乱邦不居，天下有道则入，无道则隐。邦有道，贫且贱焉，耻也。邦无道，富且贵焉，耻也。 防祸于先而不致于后伤情。知而慎行，君子不立于危墙之下，焉可等闲视之。 苍蝇附骥 捷则捷矣 难辞处后之羞；茑萝依松 高则高矣 未免仰扳之耻.所以君子宁以风霜自挟 毋为鱼鸟亲人。 士君子之涉世，於人不可轻为喜怒，喜怒轻，则心腹肝胆皆为人所窥；于物不可重为爱憎，爱憎重，则意气精神悉为物所制。 一点不忍的念头，是生民生物之根芽；一段不为的气节，是撑天撑地之柱石。故君子于一虫一蚁不忍伤残，一缕一丝勿容贪冒，便可为万物立命、天地立心矣。 情之同处即为性，舍情则性不可见，欲之公处即为理，舍欲则理不可明。故君子不能灭情，惟事平情而已；不能绝欲，惟期寡欲而已。 好丑心太明，则物不契；贤愚心太明，则人不亲。士君子须是内精明而外浑厚，使好丑两得其平，贤愚共受其益，才是生成的德量。 伺察以为明者，常因明而生暗，故君子以恬养智；奋迅以为速者，多因速而致迟，故君子以重持轻。士君子济人利物，宜居其实，不宜居其名，居其名则德损；士大夫忧国为民，当有其心，不当有其语，有其语则毁来。 遇大事矜持者，小事必纵弛；处明庭检饰者，暗室必放逸。君子只是一个念头持到底，自然临小事如临大敌，处密室若坐通衢。 膻秽则蝇蚋丛嘬，芳馨则蜂蝶交侵。故君子不作垢业，亦不立芳名。只是元气浑然，圭角不露便是持身涉世一安乐窝也。 落落者，难合亦难分；欣欣者，易亲亦易散。是以君子宁以刚方见惮，毋以媚悦取容。 君子严如介石而畏其难亲，鲜不以明珠为怪物而起按剑之心；小人滑如脂膏而喜其易合，鲜不以毒螫为甘饴而纵染指之欲。 君子好名，便起欺人之念；小人好名，犹怀畏人之心。故人而皆好名，则开诈善之门。使人而不好名，则绝为善之路。此讥好名者，当严责君子，不当过求于小人也。 廉官多无后，以其太清也；痴人每多福，以其近厚也。故君子虽重廉介，不可无含垢纳污之雅量。虽戒痴顽，亦不必有察渊洗垢之精明。 君子之心事，天青日白，不可使人不知；君子之才华，玉韫珠藏，不可使人易知。 待小人不难于严，而难于不恶；待君子不难于恭，而难于有礼。 念头浓者自恃厚，待人亦厚，处处皆厚；念头淡者自待薄，待人亦薄，事事皆薄。故君子居常嗜好，不可太浓艳，亦不宜太枯寂。 彼富我仁，彼爵我义，君子故不为君相所牢笼；人定胜天，志壹动气，君子亦不受造化之陶铸。 肝受病则目不能视，肾受病则耳不能听。病受于人所不见，必发于人所共见。故君子欲无得罪于昭昭，先无得罪于冥冥。 栖守道德者，寂寞一时；依阿权势者，凄凉万古。达人观物外之物，思身后之身，宁受一时之寂寞，毋取万古之凄凉。 春至时和，花尚铺一段好色，鸟且啭几句好音。士君子幸列头角，复遇温饱，不思立好言、行好事，虽是在世百年，恰似未生一日。 天之机缄不测，抑而伸、伸而抑，皆是播弄英雄、颠倒豪杰处。君子只是逆来顺受、居安思危，天亦无所用其伎俩矣。 十语九中未必称奇，一语不中，则愆尤骈集；十谋九成未必归功，一谋不成则訾议丛兴。君子所以宁默毋躁、宁拙毋巧。 地之秽者多生物，水之清者常无鱼，故君子当存含垢纳污之量，不可持好洁独行之操。 风来疏竹，风过而竹不留声；雁度寒潭，雁过而潭不留影。故君子事来而心始现，事去而心随空。 贫家净扫地，贫女净梳头。景色虽不艳丽，气度自是风雅。士君子当穷愁寥落，奈何辄自废弛哉！ 君子而诈善，无异小人之肆恶；君子而改节，不若小人之自新。 淡薄之士，必为浓艳者所疑；检饬之人，多为放肆者所忌。君子处此固不可少变其操履，亦不可太露其锋芒。 老来疾病都是壮时招得；衰时罪孽都是盛时作得。故持盈履满，君子尤兢兢焉。 士君子不能济物者，遇人痴迷处，出一言提醒之，遇人急难处，出一言解救之，亦是无量功德矣。 勤者敏于德义，而世人借勤以济其贪；俭者淡于货利，而世人假俭以饰其吝。君子持身之符，反为小人营私之具矣，惜哉！ 士君子处权门要路，操履要严明，心气要和易。毋少随而近腥膻之党，亦毋过激而犯蜂虿之毒。 休与小人仇雠，小人自有对头；休向君子谄媚，君子原无私惠。\n"},{"id":147,"href":"/posts/literature/%E5%9C%A3%E7%9A%87%E4%B9%8B%E5%AF%86%E4%BB%A4/","title":"圣皇之密令","section":"文学","content":"看似繁华绚烂，实则空洞无物\n为什么我们渴求秩序的撒拉，却总被奈落眷顾。\n　为什么我们书上说神佑人类，人却总被寇德玩弄\n有时，为了信仰，你必须违背你的信仰。”\n吾乃净化者，是为驱离所有阴影之明光。 吾乃解结者，是为无法缠持之松绳。 吾乃流放者，是为吹熄最後烛火之恶意。 吾乃狂想者，是为吞噬肉体之激情。 吾乃给养者，是为使饥饿者复苏之食肴\u0026hellip;\u0026hellip;”\n每个生物都把自己的神想象得无比美好，而我却终于发现，圣地中的污秽，同样是污秽\n我们出生在一个错误的年代，所以，我们成了英雄\n多少次风起云涌，群星毕现，多少次舍命奋战，浴血荒原，多少次岌岌可危，异军突起\n要想成为勇者，首先就要有成为懦夫的勇气\n不要因为魔物未曾威胁你而怜悯，也不要因为魔物威胁了你而冲动。”\n而毫无信仰的的魔族更是不受影响地充实的生活\n“正如实与虚彼此相生，光与暗亦是永恒相连。 世间万物，古今大道，从未有过孤妄而独立的存在。 是的，从未有过\n没有尽头的黑夜，死亡的恐惧像噩梦一样扼住了咽喉，人们只有颤抖地蜷缩在一起，祈祷着第一缕曙光的到　在这刹那的黎明之间，天地静默、万物无声，连圣山神殿的光辉都不复存在，它沐浴于一弯血红的冷月之下，静静俯视着这片大陆上的风云动荡与万千苍生\n。自身力量越是强大、自我意识越是清醒，这种情绪就越是旺盛，仿佛火山口下封印千年的炽热岩浆，终有冲破阻碍、劫掠四野的一天。\n“圣皇之密令，所言极是。 我族本乃圣山众神之血亲，自当受命于众神之下，发令于众生之前。 奈何众神为争一己之私利，悍然相斗，终致魔魂水晶损毁、世界破碎。 千余年来，我族退回魔界大陆，隐遁辞世、自谋复兴，未曾与他族图谋相争。 然近来则有一众神族余孽，假借众神名义，为凡人授以神格，助其对我族之亚特大陆遗民大肆屠杀。我族遗民之血泪哭号，常入我梦，不忍卒听。 而今我族励精图治，已重振神威，加之圣物暗十字封印现世，更为先辈诸神授意我族清扫余孽、重返故土之天兆也。 故此，余当以一己之身、率全族之力，助圣皇及先辈诸神，遂我族千年之夙愿。 余万死而不辞也！”\n“若你放弃奢望，你将远离凡人的哀伤。因你的心已覆上黑暗的坚甲，伤无可伤。”\n"},{"id":148,"href":"/posts/literature/%E5%A2%A8%E8%8F%B2%E5%AE%9A%E5%BE%8B/","title":"墨菲定律","section":"文学","content":"墨菲定律是一种[心理学效应]，由爱德华·墨菲（Edward A. Murphy）提出的，亦称墨菲法则、墨菲定理。原文为如果有两种或两种以上的方式去做某件事情，而其中一种选择方式将导致灾难，则必定有人会做出这种选择。根本内容是：如果事情有变坏的可能，不管这种可能性有多小，它总会发生。\n定律来源\r#\r\r1949年，一位名叫爱德华·墨菲的空军上尉工程师，对他的某位运气不太好的同事随口开了句玩笑：“如果一件事有可能被做坏，让他去做就一定会更坏。” 一句本无恶意的玩笑话最初并没有什么太深的含义，只是说出了坏运气带给人的无奈。或许是这世界不走运的人太多，或许是人们总会犯这样那样错误的缘故，这句话被迅速扩散，最后竟然演绎成：如果坏事情有可能发生，不管这种可能性有多小，它总会发生，并引起最大可能的损失\n这一结论被爱德华·墨菲应用于安全管理，他指出：做任何一件事情，如果客观上存在着一种错误的做法，或者存在着发生某种事故的可能性，不管发生的可能性有多小，当重复去做这件事时，事故总会在某一时刻发生。也就是说，只要发生事故的可能性存在，不管可能性多么小，这个事故迟早会发生的。\n具体定律\r#\r\r墨菲定律（Murphy\u0026rsquo;s Law）主要内容有四个方面： 一、任何事都没有表面看起来那么简单； 二、所有的事都会比你预计的时间长； 三、会出错的事总会出错； 四、如果你担心某种情况发生，那么它就更有可能发生。 “墨菲定律”的根本内容是“凡是可能出错的事有很大几率会出错”，指的是任何一个事件，只要具有大于零的机率，就不能够假设它不会发生。\n警示作用\r#\r\r墨菲定律是一种客观存在。要在企业管理、日常工作和生活中防范墨菲定律可能导致的恶性后果，必须从行为、技术、机制、环境等多方面因素入手，而对其在思想心理上的重视无疑要放到首位。 防微杜渐，小的隐患若不消除，就有可能扩大增长，其造成事故的几率也会慢慢增加。这对于巨大、复杂的技术系统来说尤为可怕。 看淡压力，持平常心。因面临压力太大而心态失常，这是导致悲剧发生的最常见原因之一。 守正安分，不图侥幸。侥幸心理是一种不想遵循客观规律、只想依靠机会或运气等偶然因素实现成功愿望或消灾免难的心理。它使得人们投机取巧、明知故犯、不讲因果、不守规则，变得懒惰懈怠、好走捷径。因其只依赖偶然因素，所以它必然不遵循因果规律，轻视或放纵隐患，在现实中往往如墨菲定律预言的那样事与愿违。[5]借鉴意义\r#\r\r在心理学上有一定根据，即负面心理暗示会对人的心态及行为造成不良影响。要打破墨菲定律的“诅咒”，就要有坚定的自信，稳定的心态，积极的心理暗示，以肯定式的语言做表述，对自卑感等负面情绪或不良念头采取零容忍策略，一旦察觉立即打消。即便遭遇挫折，也要有“尽人事听天命”的觉悟，充分发挥自身潜力勇敢应对，始终以正面、阳光的心态面对生活。\n预防方法\r#\r\r1.尽量避免感情用事。控制情绪，抵制烦恼。在处理烦恼问题时可以遵循以下四个要诀: （1）照着正确的解决方法去做; （2）尽量收集资料，找出让你烦恼的原因; （3）衡量资料的重要性，并找出对付的方法; （4）观察事情进行得是否顺利。 2.不要冲动地去做一件事，把问题和其他有关系的事情再慎重考虑一遍，如果没有比立刻行动更重要的事，那就立刻去实行。 3.压力太大的时候，稍微休息一下。 4.为了切合实际，不要嫌麻烦，再检查一遍。 5.按部就班地从事情发生的过程中找出解决办法，不要妄下断言。 6.和自己的意愿对照一下，看看自己所做的决定是否违背心意。\n衍生版本\r#\r\r 别试图教猫唱歌，这样不但不会有结果，还会惹猫不高兴。 别跟傻瓜吵架，不然旁人会搞不清楚，到底谁是傻瓜。 不要以为自己很重要，因为没有你，太阳明天还是一样从东方升上来。 笑一笑，明天未必比今天好。 好的开始，未必就有好结果；坏的开始，结果往往会更糟。 东西久久都派不上用场，就可以丢掉；东西一丢掉，往往就必须要用它。 你丢掉了东西时，最先去找的地方，往往也是可能找到的最后一个地方。 你往往会找到不是你正想找的东西。 你出去买爆米花的时候，银幕上偏偏就出现了精彩镜头。 另一排总是动的比较快；你换到另一排，你原来站的那一排，就开始动的比较快了；你站的越久，越有可能是站错了排。 一分钟有多长？ 这要看你是蹲在厕所里面，还是等在厕所外面  "},{"id":149,"href":"/posts/literature/%E5%A4%A7%E5%AD%A6%E4%B9%8B%E9%81%93/","title":"大学之道","section":"文学","content":"大学之道，在明明德，在亲民，在止于至善。 知止而后有定；定而后能静；静而后能安；安而后能虑；虑而后能得。 物有本末，事有终始。知所先后，则近道矣。 古之欲明明德于天下者，先治其国；欲治其国者，先齐其家； 欲齐其家者，先修其身；欲修其身者，先正其心；欲正其心者， 先诚其意；欲诚其意者，先致其知；致知在格物。 物格而后知至；知至而后意诚；意诚而后心正；心正而后身 修；身修而后家齐；家齐而后国治；国治而后天下平。 自天子以至于庶人，壹是皆以修身为本。其本乱而末治者 否矣。其所厚者薄，而其所薄者厚，未之有也\n大学的宗旨在于弘扬光明正大的品德，学习和应用于生活，使人达到最完善的境界。 知道应达到的境界才能够志向坚定；志向坚定才能够镇静不躁；镇静不躁才能够心安理得；心安理得才能够思虑周详；思虑周详才能够有所收获。每样东西都有根本有枝末，每件事情都有开始有终结。明白了这本末始终的道理，就接近事物发展的规律了。 古代那些要想在天下弘扬光明正大品德的人，先要治理好自己的国家；要想治理好自己的国家，先要管理好自己的家庭和家族；要想管理好自己的家庭和家族，先要修养自身的品性；要想修养自身的品性，先要端正自己的心思；要想端正自己的心思，先要使自己的意念真诚；要想使自己的意念真诚，先要使自己革除不好的思想；认识最真的本心。 通过伏灭革除内心不好的私欲、物欲，而彰显明德，认识本心，表里如一。意念才能真诚；意念真诚后心思才能端正；心思端正后才能修养品性；品性修养后才能管理好家庭和家族；管理好家庭和家族后才能治理好国家；治理好国家后天下才能太平。上自国家元首，下至平民百姓，人人都要以修养品性为根本。若这个根本被扰乱了，家庭、家族、国家、天下要治理好是不可能的。不分轻重缓急，本末倒置却想做好事情，这也同样是不可 能的。\n"},{"id":150,"href":"/posts/literature/%E5%A4%A9%E4%B8%8B/","title":"天下","section":"文学","content":"天下之治方术者多矣，皆以其有为不可加矣！古之所谓道术者，果恶乎在？曰：“无乎不在。”曰：神何由降？明何由出？\u0026ldquo;\u0026ldquo;圣有所生，王有所成，皆原于一。\u0026ldquo;不离于宗，谓之天人；不离于精，谓之神人；不离于真，谓之至人。以天为宗，以德为本，以道为门，兆于变化，谓之圣人；以仁为恩，以义为理，以礼为行，以乐为和，熏然慈仁，谓之君子；以法为分，以名为表，以参为验，以稽为决，其数一二三四是也，百官以此相齿；以事为常，以衣食为主，蕃息畜藏，老弱孤寡为意，皆有以养，民之理也。古之人其备乎！配神明，醇天地，育万物，和天下，泽及百姓，明于本数，系于末度，六通四辟，小大精粗，其运无乎不在。其明而在数度者，旧法、世传之史尚多有之；其在于《诗》、《书》、《礼》、《乐》者，邹鲁之士、缙绅先生多能明之。《诗》以道志，《书》以道事，《礼》以道行，《乐》以道和，《易》以道阴阳，《春秋》以道名分。其数散于天下而设于中国者，百家之学时或称而道之。 天下大乱，贤圣不明，道德不一。天下多得一察焉以自好。譬如耳目鼻口，皆有所明，不能相通。犹百家众技也，皆有所长，时有所用。虽然，不该不遍，一曲之士也。判天地之美，析万物之理，察古人之全。寡能备于天地之美，称神明之容。是故内圣外王之道，暗而不明，郁而不发，天下之人各为其所欲焉以自为方。悲夫！百家往而不反，必不合矣！后世之学者，不幸不见天地之纯，古人之大体。道术将为天下裂。 不侈于后世，不靡于万物，不晖于数度，以绳墨自矫，而备世之急。古之道术有在于是者，墨翟、禽滑厘闻其风而说之。为之大过，已之大顺。作为《非乐》，命之曰《节用》。生不歌，死无服。墨子泛爱兼利而非斗，其道不怒。又好学而博，不异，不与先王同，毁古之礼乐。黄帝有《咸池》，尧有《大章》，舜有《大韶》，禹有《大夏》，汤有《大濩》，文王有辟雍之乐，武王、周公作《武》。古之丧礼，贵贱有仪，上下有等。天子棺椁七重，诸侯五重，大夫三重，士再重。今墨子独生不歌，死不服，桐棺三寸而无椁，以为法式。以此教人，恐不爱人；以此自行，固不爱己。未败墨子道。虽然，歌而非歌，哭而非哭，乐而非乐，是果类乎？其生也勤，其死也薄，其道大闇觳。使人忧，使人悲，其行难为也。恐其不可以为圣人之道，反天下之心。天下不堪。墨子虽独能任，奈天下何！离于天下，其去王也远矣！墨子称道曰：“昔禹之湮洪水，决江河而通四夷九州也。名山三百，支川三千，小者无数。禹亲自操橐耜而九杂天下之川。腓无胈，胫无毛，沐甚雨，栉疾风，置万国。禹大圣也，而形劳天下也如此。”使后世之墨者，多以裘褐为衣，以屐蹻为服，日夜不休，以自苦为极，曰：“不能如此，非禹之道也，不足谓墨。”相里勤之弟子，五侯之徒，南方之墨者若获、已齿、邓陵子之属，俱诵《墨经》，而倍谲不同，相谓别墨。以坚白同异之辩相訾，以奇偶不仵之辞相应，以巨子为圣人。皆愿为之尸，冀得为其后世，至今不决。墨翟、禽滑厘之意则是，其行则非也。将使后世之墨者，必以自苦腓无胈、胫无毛相进而已矣。乱之上也，治之下也。虽然，墨子真天下之好也，将求之不得也，虽枯槁不舍也，才士也夫！ 不累于俗，不饰于物，不苟于人，不忮于众，愿天下之安宁以活民命，人我之养，毕足而止，以此白心。古之道术有在于是者，宋銒、尹文闻其风而悦之。作为华山之冠以自表，接万物以别宥为始。语心之容，命之曰“心之行”。以聏合欢，以调海内。请欲置之以为主。见侮不辱，救民之斗，禁攻寝兵，救世之战。以此周行天下，上说下教。虽天下不取，强聒而不舍者也。故曰：上下见厌而强见也。虽然，其为人太多，其自为太少，曰：“请欲固置五升之饭足矣。”先生恐不得饱，弟子虽饥，不忘天下，日夜不休。曰：“我必得活哉！”图傲乎救世之士哉！曰：“君子不为苛察，不以身假物。”以为无益于天下者，明之不如己也。以禁攻寝兵为外，以情欲寡浅为内。其小大精粗，其行适至是而止。 公而不党，易而无私，决然无主，趣物而不两，不顾于虑，不谋于知，于物无择，与之俱往。古之道术有在于是者，彭蒙、田骈、慎到闻其风而悦之。齐万物以为首，曰：\u0026ldquo;天能覆之而不能载之，地能载之而不能覆之，大道能包之而不能辩之。\u0026ldquo;知万物皆有所可，有所不可。故曰：\u0026ldquo;选则不遍，教则不至，道则无遗者矣。\u0026ldquo;是故慎到弃知去己，而缘不得已。泠汰于物，以为道理。曰：\u0026ldquo;知不知，将薄知而后邻伤之者也。\u0026ldquo;奚髁无任，而笑天下之尚贤也；纵脱无行，而非天下之大圣；椎拍輐断，与物宛转；舍是与非，苟可以免。不师知虑，不知前后，魏然而已矣。推而后行，曳而后往。若飘风之还，若羽之旋，若磨石之隧，全而无非，动静无过，未尝有罪。是何故？夫无知之物，无建己之患，无用知之累，动静不离于理，是以终身无誉。故曰：“至于若无知之物而已，无用贤圣。夫块不失道。”豪桀相与笑之曰：“慎到之道，非生人之行，而至死人之理。”适得怪焉。田骈亦然，学于彭蒙，得不教焉。彭蒙之师曰：“古之道人，至于莫之是、莫之非而已矣。其风囗窢然，恶可而言。”常反人，不见观，而不免于魭断。其所谓道非道，而所言之韪不免于非。彭蒙、田骈、慎到不知道。虽然，概乎皆尝有闻者也。 以本为精，以物为粗，以有积为不足，澹然独与神明居。古之道术有在于是者，关尹、老聃闻其风而悦之。建之以常无有，主之以太一。以濡弱谦下为表，以空虚不毁万物为实。关尹曰：“在己无居，形物自著。”其动若水，其静若镜，其应若响。芴乎若亡，寂乎若清。同焉者和，得焉者失。未尝先人而常随人。老聃曰：“知其雄，守其雌，为天下溪；知其白，守其辱，为天下谷。”人皆取先，己独取后。曰：“受天下之垢”。人皆取实，己独取虚。“无藏也故有余”。岿然而有余。其行身也，徐而不费，无为也而笑巧。人皆求福，己独曲全。曰：“苟免于咎”。以深为根，以约为纪。曰：“坚则毁矣，锐则挫矣”。常宽容于物，不削于人。虽未至于极，关尹、老聃乎，古之博大真人哉！ 寂漠无形，变化无常，死与？生与？天地并与？神明往与？芒乎何之？忽乎何适？万物毕罗，莫足以归。古之道术有在于是者，庄周闻其风而悦之。以谬悠之说，荒唐之言，无端崖之辞，时恣纵而不傥，不奇见之也。以天下为沈浊，不可与庄语。以卮言为曼衍，以重言为真，以寓言为广。独与天地精神往来，而不敖倪于万物。不谴是非，以与世俗处。其书虽环玮，而连犿无伤也。其辞虽参差，而諔诡可观。彼其充实，不可以已。上与造物者游，而下与外死生、无终始者为友。其于本也，弘大而辟，深闳而肆；其于宗也，可谓稠适而上遂矣。虽然，其应于化而解于物也，其理不竭，其来不蜕，芒乎昧乎，未之尽者。 惠施多方，其书五车，其道舛驳，其言也不中。历物之意，曰：“至大无外，谓之大一；至小无内，谓之小一。无厚，不可积也，其大千里。天与地卑，山与泽平。日方中方睨，物方生方死。大同而与小同异，此之谓‘小同异’；万物毕同毕异，此之谓‘大同异’。南方无穷而有穷。今日适越而昔来。连环可解也。我知天之中央，燕之北、越之南是也。泛爱万物，天地一体也。”惠施以此为大，观于天下而晓辩者，天下之辩者相与乐之。卵有毛。鸡有三足。郢有天下。犬可以为羊。马有卵。丁子有尾。火不热。山出口。轮不蹍地。目不见。指不至，至不绝。龟长于蛇。矩不方，规不可以为圆。凿不围枘。飞鸟之景未尝动也。镞矢之疾，而有不行、不止之时。狗非犬。黄马骊牛三。白狗黑。孤驹未尝有母。一尺之棰，日取其半，万世不竭。辩者以此与惠施相应，终身无穷。桓团、公孙龙辩者之徒，饰人之心，易人之意，能胜人之口，不能服人之心，辩者之囿也。惠施日以其知与之辩，特与天下之辩者为怪，此其柢也。然惠施之口谈，自以为最贤，曰：“天地其壮乎，施存雄而无术。”南方有倚人焉，曰黄缭，问天地所以不坠不陷，风雨雷霆之故。惠施不辞而应，不虑而对，遍为万物说。说而不休，多而无已，犹以为寡，益之以怪，以反人为实，而欲以胜人为名，是以与众不适也。弱于德，强于物，其涂袄矣。由天地之道观惠施之能，其犹一蚊一虻之劳者也。其于物也何庸！夫充一尚可，曰愈贵，道几矣！惠施不能以此自宁，散于万物而不厌，卒以善辩为名。惜乎！惠施之才，骀荡而不得，逐万物而不反，是穷响以声，形与影竞走也，悲夫！\n译文 天下搞学术的人很多，都认为自己的学问达到了顶峰。古代所谓的道术，究意在哪里？回答说：“无所不在。”问：“神由何而降？明从何而生？”回答说：“神圣自有其由来，王业自有其成因，都渊源于一。” 不离根本，称为天人。不离精纯，称为神人。不离本真，称为至人。以天为宰，以德为根本，以道为门径，能够预示变化，称为圣人。以仁布施恩惠，以义作为道理，以礼规范行为，以乐调和性情，温和慈爱，称为君子。以法律为尺度，以名号为标志，以比较为验证，以考核来判断，等级之数像一二三四那样明白，百官以此为序列，以职事为常务，以衣食为主旨，生产储藏，关心老弱孤寡，使其皆有所意养，这是养民的常理。 古代的圣人是很完备的啊！合于神明，效法自然，养育万物，泽及百姓，以天道为根本，以法度为末节，六合通达而四时顺畅，无论小大精粗，其作用无所不在。古时候的道术和法规制度，很多还保存在传世的史书中。保存《诗》《书》《礼》《乐》中的，邹鲁一带的学者和缙绅先生们大都知晓。《诗》用来表达志，《书》用来记载事情，《礼》用来规范行为。《乐》用来调和，《易》用来说明阴阳，《春秋》用来正名分。其散布于天下百设立于中国的，百家之学还常常引用它。 天下大乱，贤王不显，道德分岐，天下人多各得一孔之见而自我欣赏。譬如耳目鼻口，它们各有其功能，但却不能互相通用。犹如百家众技，各有所长，时有所用。虽然如此，但不完备和全面，都是孤陋寡闻的人。割裂天地的完美，离析万物之理，把古人完美的道德弄得支离破碎，很少能具备天地的完美，相称于神明之容。所以，内圣外王之道暗而不明，抑郁而不发挥，天下的人各尽所欲而自为方术。可悲啊！百家各行其道而不回头，必定不能相合。后世的学者，不幸不能见到天地的纯真和古人的全貌，道术将被天下所割裂！ 不以奢侈影响后世，不糜费万物，不炫耀礼法，用规矩自我勉励，以应付社会的危难，这是古代道术的内涵之一。墨翟、禽滑厘对这种道术很喜欢，但他们实行得太过分，局限性太大。提倡非乐，主张节用，生不作乐，死不眼丧。墨子倡导博爱兼利而反对战争，主张和睦相处；又好学而渊博，不立异，不与先王相同，毁弃古代的礼乐。 黄帝有《大韶》之乐，尧有《大章》之乐，禹有《大夏》之乐，汤有《大蓡》之乐，文王有《辟雍》武王、周公作《武》乐。古代的丧礼，贵贱有仪法，上下有等级，天子的棺椁七层，诸候五层，大夫三层，士两层。现在墨子独自主张生不歌乐，死不服丧，只用3寸厚的桐木棺而没有椁，作为标准。以此来教导人，恐怕不是爱人之道；自己去实行，实在是不爱惜自己。墨子的学说尽管是成立的，然而应该歌唱而不歌唱，应该哭泣而不哭泣，应该作乐而不作乐，这合乎人情常理吗？生前辛勤劳苦，实行起来简单薄葬，这种主张太苛刻了。使人忧劳，使人悲苦，实行起来是很困难的，恐怕不能够成为圣人之道，违反了天下人的心愿，天下人是不堪忍受的。墨子虽然独自能够做到，但对天下的人却无可奈何！背离了天下的人，也就远离了王道。 墨子称道说：“从前禹治理洪水，疏异江河而沟通四夷九州，大川300，支流3000，小河无数。禹亲自持筐操铲劳作，汇合天下的河川，辛苦得连腿上的汗毛都磨光了，风里来雨里去，终于安定了天下。禹是大圣人，为了天下还如此劳苦。”从而使后世的墨者，多用兽皮粗布为衣，穿着木屐草鞋，白天黑夜都不休息，以自苦为准则，并说：“不能这样，就不是禹之道，不足以称为墨者。” 墨翟、禽滑厘的用意是很好的，具体做法却太过分。这将使后世的墨者，以极端劳苦的方式互相竞进。这种做法乱国有余，治国不足。尽管如此，墨子还是真心爱天下的，这样的人实在是难以求得，即使辛苦得形容枯槁也不舍弃自己的主张，真是有才之士啊！ 不为世俗牵累，不用外物矫饰，不苛求于人，不与众人发生矛盾，希望天下安宁使人民活命，生活上以饱暖为满足，以此来表白心愿，这是古代道术的内涵之一。宋鈃、尹文对这种道术很喜欢，制作了形状像华山一样的帽子以表示上下均平主张，应接万物以不带偏见为先；谈论内心的思维，称之为心理活动，以柔和的态度投合别人的喜欢，以调和天下，希望树立上述主张作为行动的主导思想。受到欺侮不以为耻辱，调解人民的争斗，禁止攻伐平息干戈，将天下从战火中拯救出来。用这种主张周行天下，但他们仍然不停地对劝说，所以说人们都讨厌而他们还是硬要宣扬自己的主张。 尽管如此，他们还是替别人考虑得太多，为自己打算得太少，说：“我们只想要5升米的饭就够了。”不仅先生们吃不饱，弟子们也常常处在饥饿之中，但他们仍然不忘天下，日夜不休，说：“君子不苛刻计较，不使自身被外物所利用。”认为对天下没有益处的，与其提示它不如禁止它。以禁攻息兵为外在活动，以清心寡欲为内在修养，无论从大的方面说还是从细微的方面说，他们的所为也就到些为止了。 公正而不阿党，平易而无偏私，排除主观的先入之见，随物变化而不三心二意，没有顾虑，不求智谋，对万物毫无选择地随顺，和它一起变化，这是古代道术的内涵之一。彭蒙、田骈、慎到对这种道术很喜欢，以齐同万物为首要，说：“天能覆盖万物却不能承载，地能承载万物却不能覆盖，大道能包容万物却不能分辨。”知道万物都有所能，有所不能，所以说：“选择则不普遍，教导则有所不及，大道则无所遗漏。” 所以慎到抛弃智慧去除己见而随任于不得已，听任于物作为道理，他说：“强求知其所不知，就会为知所迫而受到损伤。”随便任用人，而讥笑天下推崇贤人；放任不羁不拘形迹，而非议天下的大圣。刑罚之轻重，随着事态的发展而相应地变化，抛弃了是非，才可以免于刑罚。不依赖智巧谋虑，不瞻前顾后，巍然独立。推动而往前走，拖拉而向后退，像飘风的往返，像羽毛的飞旋，像磨石的转动，完美而无错，动静适度而无过失，未曾有罪。这是什么原因，没有知觉的东西，就不会有标榜自己的忧患，不会有运用智谋的牵累，动静合于自然之理，所以终生不会受到毁誉。所以说：“达到像没有知觉的东西就行了，不需要圣贤，土块不会失于道。”豪杰们相互嘲笑他说：“慎到的道对活人没有用而只适用于死人，实在怪异。” 田骈也是这样，受学于彭蒙，得到不言之教。彭蒙的老师说：“古时候得道的人，达到了无所谓是非的境界。他们的道术像风吹过一样迅速，怎么能够用语言表达出来呢？”常常违反人意，不受人们所尊敬，仍不免于随物变化。他们所说的道并不是直正的道。然而，他们都还大概地听闻过一点道。 以无形无为的道为精微，以有形有为的物为粗鄙，以积蓄为不足，恬谈地独自与神明共处，这是古代道术的内涵之一。关尹、老聃对这种道术很喜欢，主张建立在常无与常有的基础上，以太一为核心，以柔弱谦下为外表， 以空虚不毁伤万物为实质。 关尹说：“自己不存私意，有形之物各自彰显。动如流水，静如平镜，反应如回响。忽然如无有，寂静如清虚。相同则和谐，有得则有失。未曾争先而常常随顺别人。” 老聃说：“知道雄强，持守雌柔，愿成为天下的沟壑；知道明亮，持守暗昧，愿成为天下的山谷。”人人都争先，独自甘愿居后，说承受天下的垢辱；人人都务实，独自甘愿守虚，不使敛藏所以有余，多如高山堆积。他立身行事，从容不迫，无为而嘲笑机巧；人人都求福，独自甘愿委曲求全，说姑且免于受罪。以深藏为根本，以俭约为纲纪，说坚硬的易于毁坏，锐利的易于挫折。常常宽容待物，从不侵削别人，可以说达到了顶点。 关尹、老聃啊！真是古代的博大真人！ 寂寞无形，变化无常，死死生生，与天地并存，与神明同往！茫然何往，忽然何去，包罗万物，不知归属，这是古代道术的内涵之一。庄子对这种道术很喜欢，以虚远不可捉模的理论，广大不可测度的言论，不着边际的言辞，放纵而不拘执，不持一端之见。认为天下沉浊，不能讲庄重的话，以危言肆意推衍，以重言体现真实，以寓言阐发道理。独自与天地精神往来而不傲视万物，不拘泥于是非，与世俗相处。他的书虽然奇伟却宛转随和，言辞虽然变化多端却奇异可观。他内心充实而思想奔放，上与造物者同游，下与忘却死生不分终始的人为友。他论述道的根本，博大而通达，深广而畅达；他论述道的宗旨，和谐妥贴而上达天意。然而，他对于事物变化的反应和解释，没有止境，不离于道，茫然暗昧，未能穷尽。 惠施的学问广博，他的书多达五车，道术杂乱无章，言辞多有不当。他分析事物之一，说：“大到极点而没有边际的，称为‘大一’；小到极点而没有内核的，称为‘小一’。没有厚度，不可累积，但能扩大到千里。天和地一样低，山和泽一样平。太阳刚刚正中的时候就偏斜，万物刚刚生出就向死亡转化。大同和小同相差异，这叫‘小同异’；万物完全相同也完全相异，这叫‘大同异’。南方既没有穷尽也有穷尽，今天到越国去而昨天已来到。连环可以解开。我所知的天下的中央，在燕国之北越国之南。泛爱万物，天地合为一体。” 惠施认为这些是大道理，炫耀于天下而引导辩士，天下的辩士也乐于和他辩论。鸡蛋有毛；鸡有三只脚；郢都包有天下；犬可以变为羊；马有卵；青蛙有尾巴；火不热；山有口；车轮不着地；眼睛看不见东西；物指的概念不相称，相称也没有止境；龟比蛇长；矩不方，规划出的不圆；凿孔不能围住榫头；飞鸟的影子未曾移动；疾飞的箭头有不走也有不停的时候；狗不是犬；黄马、骊牛是三个；白狗是黑的；孤驹不曾有母；一尺长的木棍，每天截掉一半，永远也截不完。辩士们用这些辩题与惠施相辩论，终身无穷。 桓团、公孙龙这些好辩之徒，迷惑人心，改变人意，能够用口舌战胜人，却不能服人之心，这是辩者的局限。惠旆每天靠他的智慧与人辩论，专门和天下的辩士一起制造怪异之说，这就是他们的根本。 然而惠施口若悬河，自认为最能干，说天地果真就伟大吗！惠施有雄心而没有道术。南方有个名叫黄缭的怪异之人，问天地为什么不坠不陷，风雨雷霆是怎么回事。惠施毫不推辞地接受提问，不加思索地应对，广泛解说天地万物，滔滔不绝，没完没了，还嫌说得太少，又增加了一些怪异的说法。把违反人之常情的事说成是真实的，想通过辩赢别人而获取名声，所以与众不合。轻视道德修养，努力追逐外物，他走的是歪门邪道。从天地之道来看惠施的才能，他就像一只蚊虫那样徒劳。对于万物有什么用处！做为一家之说还可以，如果能进一步奠崇大道，那就差不多了！惠施不安于道，分散心思于万物而乐上不疲，终于以善辩出名。可惜啊！惠施的才能，放荡而不行于正道，追逐万物而不知回头，这就像用声音去追逐回响，用形体和影子况走一样。可悲啊\n"},{"id":151,"href":"/posts/literature/%E5%A5%BD%E5%AD%A6/","title":"好学","section":"文学","content":"学习是儒家的一大话题，这里收集了《论语》关于好学的论述。\n【原文】子曰：“君子食无求饱，居无求安，敏于事而慎于言，就有道而正焉，可谓好学也已。”《学而》 【翻译】孔子说：“君子不追求饮食的饱足，不追求居住的安逸，做事勤敏而说话谨慎，亲近有德之人来匡正自己，这就算得上是好学了\n【原文】子曰：“笃信好学，守死善道。危邦不入，乱邦不居。天下有道则见，无道则隐。邦有道，贫且贱焉，耻也；邦无道，富且贵焉，耻也。”（《泰伯》） 【翻译】孔子说：“坚定信念并努力学习，誓死守卫并完善治国与为人的大道。不进入政局不稳的国家，不居住在动乱的国家。天下有道就出来做官；天下无道就隐居不出。国家有道而自己贫贱，是耻辱；国家无道而自己富贵，也是耻辱。”\n【原文】子贡问曰：“孔文子何以谓之文也？”子曰：“敏而好学，不耻下问，是以谓之文也。”（《公冶长》） 【翻译】子贡问道：“为什么给孔文子一个‘文’的谥号呢?”孔子说：“他聪敏勤勉而好学,不以向他地位卑下的人请教为耻,所以给他谥号叫‘文'。”\n【原文】哀公问：“弟子孰为好学？”孔子对曰：“有颜回者好学，不迁怒，不贰过。不幸短命死矣！今也则亡，未闻好学者也。”（《雍也》） 【翻译】鲁国国君问孔子：“你的学生中谁是最爱学习的?”孔子回答说：“有个叫颜回的学生最爱学习,他从不把脾气发到别人的身上,也不重犯同样的错误。不幸年纪轻轻死了,现在没有像颜回那样好学的人了。”\n【原文】季康子问：“弟子孰为好学？”孔子对曰：“有颜回者好学，不幸短命死矣！今也则亡。”（《先进》） 【翻译】季康子问孔子：“你的学生中谁是好学的?”孔子回答说：“有一个叫颜回的学生很好学，不幸短命死了。现在再也没有像他那样爱学习的了。”\n【原文】子曰：“由也，女闻六言六蔽矣乎？”对曰：“未也。”“居！吾语女。好仁不好学，其蔽也愚；好知不好学，其蔽也荡；好信不好学，其蔽也贼；好直不好学，其蔽也绞；好勇不好学，其蔽也乱；好刚不好学，其蔽也狂。”（《阳货》） 【翻译】孔子说：“由呀，你听说过六种品德和六种弊病了吗?”子路回答说：“没有。”孔子说：“坐下，我告诉你。爱好仁德而不爱好学习，它的弊病是受人愚弄；爱好智慧而不爱好学习，它的弊病是行为放荡；爱好诚信而不爱好学习，它的弊病是危害亲人；爱好直率却不爱好学习，它的弊病是说话尖刻；爱好勇敢却不爱好学习，它的弊病是犯上作乱；爱好刚强却不爱好学习，它的弊病是狂妄自大。”\n【原文】子夏曰：“日知其所亡，月无忘其所能，可谓好学也已矣。”（《子张》） 【翻译】子夏说:“每天都能懂得以前不懂的知识，每月都能不忘掉已经学会的东西，这就可以说是好学的了。”\n"},{"id":152,"href":"/posts/literature/%E5%AD%94%E5%AD%90/","title":"孔子","section":"文学","content":"孔子出生在鲁国昌平乡的陬（ｚōｕ,邹）邑。他的祖先是宋国人，叫孔防叔。防叔生伯夏，伯夏生了叔梁纥（ｈé，禾）。叔梁纥年老时娶颜姓少女才生了孔子，那是他们到尼丘山向神明祷告后而得孔子的。鲁襄公二十二年（前551）孔子诞生。他刚出生时头顶是凹下去的，所以就给他取名叫丘。字仲尼，姓孔氏。 孔子出生不久叔梁纥就死了，埋葬在防山。防山在鲁国东部，因此孔子无法确知父亲的坟墓在何处，是母亲没有把父亲埋葬的地方告诉他。孔子小时候做游戏，常常摆起各种祭器，学做祭祀的礼仪动作。孔子的母亲死后，就把灵柩暂且停放在五父之衢，这是出于慎重没有马上埋葬。陬邑人輓父的母亲把孔子父亲的葬地告诉了他，然后孔子才把母亲迁去防山同父亲葬在一起。 孔子腰间还系着孝麻带守丧时，季孙氏举行宴会款待名土，孔子前往参加。季孙氏的家臣阳虎阻挠说：“季氏招待名士，没有请你啊。”孔子因此而退了回来。 孔子十七岁那年，鲁国大夫釐子病危，临终前告诫儿子懿子说：“孔丘这个人，是圣人的后代，他的祖先在宋国灭败。他的先祖弗父何本来继位做宋国国君，却让位于他的弟弟厉公。到他的另一个先祖正考父时，历佐宋戴公、宋武公、宋宣公三朝，三次受命一次比一次恭敬，所以正考父鼎的铭文说：‘第一次任命鞠躬而受，第二次任命时弯腰而受，第三次任命时俯首而受。走路时避开道路中央，靠墙而行，也没人敢欺侮我；我就在这个鼎中做些面糊粥以糊口度日。’他就是这般恭谨节俭。我听说圣人的后代，虽不一定做国君执政，但必定会有才德显达的人出现。如今孔子年少而好礼，他不就是才德显达的人吗？如果我死了，你一定要以他为师。等到孟釐子死后，孟懿子和鲁国人南宫敬叔便前往孔子处学礼。这一年，季武子死了，由平子继承了卿位。 孔子家境贫穷，社会地位低下。到长大之后，曾给季氏做过管理仓库的小吏，出纳钱粮算得公平准确；也曾提任过管理牧场的小吏，牲畜蕃息。因此他又升任主管营建工程的司空。过了不多久，他离开了鲁国，在齐国受到排斥，在宋国、卫国遭遇到驱逐，又在陈国和蔡国之间被围困，最后又返回了鲁国。孔子身高九尺六寸，人们都称他为“长人”，觉得他与一般人不一样。鲁国后来对他好了，所以他终于返回了鲁国。 鲁国人南宫敬叔对鲁昭公说：“请让我与孔子一起到周去。”鲁昭公就给了他一辆车子、两匹马，一名童仆，随他出发，到周去学礼，据说是见到了老子。告辞时，老子送他们时说：“我听说富贵的人是用财物送人，品德高尚的人是用言辞送人。我不是富贵的人，只能窃用品德高尚人的名号，用言辞为您送行。这几句话是：‘聪明深察的人常常受到死亡的威胁，那是因为他喜欢议论别人的缘故；博学善辩识见广大的人常遭困厄危及自身，那是因为他好揭发别人罪恶的缘故。做子女的忘掉自己而心想父母，做臣下的要忘掉自己而心存君主。’孔子从周回到鲁国之后，跟从他学习的弟子就渐渐多起来了。 在这个时候，晋平公yín乱无道，韩氏、赵氏、魏氏、中行氏、范氏、知氏六家大臣把持国政，不断出兵攻打东边的侯国，楚灵王军队强大，也时常侵犯中原各国；齐是大国又靠近鲁国。鲁国既小又弱，归附楚国就惹怒晋国；归附晋国就招致楚国来讨伐；对于齐国如果奉事不周到，齐国的军队就侵犯鲁国。 鲁昭公二十年（前522），这时孔子大是三十岁了。齐景公带着婴来到鲁国，景公问孔子说：“从衣秦公国家小而又处于偏僻的地方，他能够称霸，这是什么原因呢？”孔子回答说：“秦国虽小，志向却很大；所处地方虽然偏僻，但施政却很恰当。秦穆公亲自拔用五张黑公羊皮赎来的百里奚，授给他大夫的官爵，把他从拘禁中一解救出来，就与他一连谈了三天的话，随后就把执政大权交给他了。用这种精神来治理国家，就是统治整个天下也是可以的，他当个霸主还算是小的呢。”景公听了很高兴。 孔子三十五岁的时候，季平子因为与郈昭伯斗鸡怨的事得罪了鲁昭公，昭公率军队攻打平了，平子和孟孙氏、叔孙氏三家联合攻打昭公，昭公的军队吃了败仗，逃奔到齐国，齐国把昭公安置在乾侯这个地方。其后过了不久，鲁国发生了变乱。孔子来到齐国，做了高昭子的家臣，想借高昭子的关系接近景公。他与齐国的乐官谈论音乐，听到了舜时的《韶》乐，就学习了起来，有三个月的时间竟尝不出肉的味道，齐国人都称赞他。 齐景公向孔子请教如何为政，孔子说：“国君要像国君的样子，臣子要像臣子的样子，父亲要像父亲的样子，儿子要像儿子的样子。”景公听了后说：“对极了！假如国君不像个国君，臣子不像个臣子，父亲不像个父亲，儿子不像个儿子，即使有很多的粮食，我怎么能吃得着呢！”改日景公又向孔子请教为政的道理，孔子说：“管理国家最重要的是节约开支，杜绝浪费。”景公听了很高兴，打算把尼谿的田地封赏给孔子。晏婴劝阻说：儒者这种人，能说会道，是不能用法来约束他们的；他们高傲任性自以为是，不能任为下臣使用；他们重视丧事，竭尽哀情，为了葬隆重而不惜倾家荡产，不能让这种做法形成风气；他们四处游说乞求官禄，不能用他们来治理国家。自从那些圣贤相继下世以后，周王室也随之衰微下去，礼崩乐坏已有好化时间了。现在孔子讲究仪容服饰，详定繁琐的上朝下朝礼节，刻意于快步行走的规矩，这些繁文缛节，就是几代人也学习不完，毕生也搞不清楚。您如果想用这套东西来改变齐国的风俗，恐怕这不是引导老百姓的好办法。”之后，齐景公虽然很有礼貌地接见孔子，可不再问起有关礼的问题了。有一天，景公慰留孔子说：“用给季氏那样高的待遇给您，我做不到。”所以就用上卿季孙氏、下卿孟孙氏之间的待遇给孔子。齐国的大夫中有人想害孔子，孔子听到了这个消息。景公对孔子说：“我已年老了，不能作用你了。”孔子于是就离开齐国，返回了鲁国。 孔子四十二岁那年，鲁昭公死在齐国的乾侯，鲁定公继位。定公继位的第五年夏天，季平子死了，季恒子继立为上卿。季桓子气掘井时掘得一个腹大口小的陶器，里面有个像羊的东西，告诉孔子时却谎称“得到一只狗”。孔子说：“据我所知，那里面是羊。我听说，山林中的怪物是一种叫‘夔’的单足兽和会学人声的山精‘罔阆’，水中的怪物是神龙和叫‘罔象’的水怪，泥土中的怪物是一种雌雄未明的‘坟羊’。” 吴国攻打越国，把越国的国都会稽摧毁了，得到一节骨头，有一辆车长。吴国派使者来问孔子：“什么骨头最大？”孔子说：“大禹召集群神到会稽山，防风氏迟到，大禹就把他杀死并陈尸示众，他的骨头一节就有一车长，这就是最大的骨头了。”吴国的使者又问：“那神又是谁呢？”孔子说：“山川的神灵能兴云致雨足可造福天下，负责监守山川按时祭祀的就是神。守土地和谷物的就是公侯，他们都隶属于王者”。吴使又问：“防风氏是监守什么的？”孔子说：“汪罔氏的君长监守封山和禺山一带的祭祀，是釐姓。在虞、夏、商三叫汪罔，在周叫长翟，现在叫做大人。”吴使问：“人的身高有多少？”孔子回答说：“僬侥氏身高三尺，是最矮的了；高的不过三丈，数得上是最高的了。”吴国使者听了之后说：“了不起呀圣人！” 季桓子有个宠臣叫仲梁怀，与阳虎有怨仇。阳虎想要驱逐仲梁怀，季氏家臣公山不狃阻止了他。这年秋天，仲梁怀更加骄横了，阳虎把捉了起来。季桓子对此很恼怒，阳虎就把季桓子也囚禁了起来，直到季桓认输订立了盟约才把他释放出来。阳虎从此以后更加看不起季氏。季氏办事也竟然凌驾于鲁君之上，鲁国出现了大臣专权的局面。因此鲁国自大夫以下都不守礼分，超越职权违背了正道。所以孔子不愿意再在鲁国做官了，退闲在家，专心研究整理《诗》、《书》、《礼》、《乐》这些典籍，学生们越来越多，有的甚至来自远方，无不虚心向孔子求教。 鲁定公八年（前502），公山不狃在季桓子手下感到不如意，就利用阳虎作乱，打算废掉季孙氏、孟孙氏、叔孙氏三家的嫡生嗣子，另立平日为阳虎所喜欢的庶子，于是就把季桓子抓了起来。桓子用计骗子他，才得以逃脱出来。鲁定公九年（前501），阳虎作乱失败，逃奔到了齐国。这时，孔子五十岁。 公山不狃凭借费城反叛季氏，他派人来召请孔子去帮忙。孔子探索所依循的治国之道已经很久了，但抑郁不得志，无处可以施展，没有人能任用自己，就说：“当初周文王、周武王兴起于丰、镐而建立了王业，现在费城虽然小，该也差不多吧！”想要应召前去，子路不高兴，阻止孔子。孔子说：“他们请我去，难道会让我白白跑一趟吗？如果重用了我，我将在东方建立一个像周那样的王朝！”然而最终也没能成行。 以后鲁定公任命孔子做了中都长官，一年后，各地都效法他的治理办法。孔子便由中都长官提升为司空，又由司空提升为大司寇。 鲁定公十年（前500）的春天，鲁国与齐国和解。到了夏天，齐国大夫黎对景公说：“鲁国起用了孔丘，势必危及齐国”。于是齐景公就派使者告诉鲁国，说要与鲁定公行友好会晤，约定会晤的地点在夹谷。鲁定公准备好车辆随从，毫无戒备地前去赴约。孔子以大司寇的身份，兼办会晤典礼事宜，他对定公说：“我听说办理外交必须要有武装准备，办理武事也必须有外交配合。从前侯出了自己的疆界，一定要带齐必要的官员随从。请求您安排左、右司马一起去。”定公说：“好的。”就带了左、右司马一道去。定公在夹谷与齐侯相会。在那里修筑了盟坛，坛上备好席位，设置了三级登坛的台阶，用国君相遇的简略节相见，拱手揖让登坛。彼此馈赠应酬的仪式行过之后，齐国管事的官员快步上前请示说：“请开始演奏四方各族的舞乐”。齐景公说：“好的。”于是齐国的乐队以旌旗为先导，有的头戴羽冠，射披皮衣，有的手执矛、戟、剑、楯等武器也跟着上台了，喧闹着一涌而上。孔子见状赶忙跑过来，一步一阶快步登台，还差一级台阶时，便扬起衣袖一挥，说道：“我们两国国君为和好而来相会，为什么在这里演奏夷狄的舞乐，请命令管事官员叫他们下去！”主管官员叫乐队退下，他们却不肯动，左右看看婴与齐景公的眼色。齐景公心里很惭愧，挥手叫乐队退下去。过了一会儿，齐国的管事官员又跑来说道：“请演奏宫中的乐曲”。景公说：“好的。”于是一些歌舞杂技艺人和身材矮小的侏儒都前来表演了。孔子看了又急跑过来。一步一阶往台上走，最后一阶还没有迈上就说：“普通人敢来胡闹迷惑诸侯，论罪当杀！请命令主事官员去执行！”于是主事官员依法将他们处以腰斩，叫他们来个手足异处。齐景公大为恐惧，深深触动，知道自己道理上不如他，回国之后很是慌恐，告诉他的大臣们说：“鲁国是用君子的道理来辅佐他们的国君，而你们却仅拿夷狄的办法教我，使我得罪了鲁国国君，这该怎办呢？”主管官员上前回答说：“君子有了过错，就用实际行动来向人家道歉认错；小人有了过错，就用花言巧语来谢罪。您如果痛心，就用具体行动来表示道歉吧。”于是齐景公就退还了从前所侵夺的鲁国郓、汶阳、龟阴的土地，以此来向鲁国道歉并悔过。 鲁定公十三年（前497）的夏天，孔子对定公说：“臣下的家中不能收藏武器，大夫的封邑不能筑起高一丈长三百丈的城墙。”于是就派仲由去当季氏的管家，打算拆毁季孙、孟孙、叔孙三家封邑的城墙。这时，叔孙氏首先把郈邑的城墙拆了。季孙氏也准备拆费邑的城墙，公山不狃和叔孙辄就带领费邑的人袭击鲁国。鲁定公和季孙、孟孙、叔孙三人就躲进了季孙的住宅，登上了季孙武子的高坛。公山不狃率领的费邑人进攻他们，没有能打进去，但有的人已经突入鲁定公所登高坛的近侧。孔子命令申句须、乐颀下台来攻打他们，费邑人失败逃走，鲁国人乘胜追击，在姑蔑把他们彻底击溃。公山不狃、叔孙辄两人逃到了齐国，费邑的城墙终于被拆毁了。接着准备拆成城，孟孙氏的家臣公敛处父告诉孟孙说：“拆除了成邑的城墙，齐国人必将进逼到我们的北大门。且成城又是你们孟氏的屏障，没有成城也就等于没有孟氏。我不打算拆毁”。十二月，鲁定公率兵包围了成城，没有攻下来。 鲁定公十四年（前496），孔子五十六岁，他由大司寇理国相职务，脸上露出喜悦神色。他的弟子说：“听说郡子大祸临头不恐惧，大福到来也不喜形于色”。孔子说：“有这句话，但不是还有一句‘乐在身居高位而礼贤下士’的话吗？”于是就把扰乱国政的大夫少正卯杀了。孔子参预国政三个月，贩卖猪、羊的商人就不敢漫天要价了；男女行人都分开走路；掉在路上的东西也没人捡走；各地的旅客来到鲁国的城邑，用不着向官员们求情送礼，都能得到满意的照顾，好像回到了家中一样。 齐国听到了这个消息就害怕了起来，说：“孔子在鲁国执政下去，一定会称霸，一旦鲁国称霸，我们靠它最近，必然会首先来吞并我们。何不先送一些土地给他们呢？”黎说：“我们先试着阻止他们一下，如果不成，再送给他们土地，这难道还算迟吗！”于是就从齐国挑选了八十个美貌女子，都穿上华丽的衣服，教她他学会跳《康乐》的舞蹈，身上有花纹的马一百二十匹，一起送给鲁君。先把女乐和纹马彩车安置在鲁城南面的高门外。季桓子身着便服前往观看再三，打算接受下来，就告诉鲁君以外出到各地周游视察为名，乘机整天到南门观齐国的美女和骏马，连国家的政事也懒得去管理了，子路看到这种情形便对孔子说：“老师，我们可以离开这里了吧。”孔子说：“鲁国现在就要在郊外祭祀，如果能按照法把典礼后的烤肉分给大夫们，那么我还可以留下不走”。季桓子终于接了齐国送来的女子乐团，一连三天不过问政务；在郊外祭祀束后，又违背常礼，没把烤肉分给大夫们。孔子于是离开了鲁国，当天就在屯地住宿过夜。鲁国一个名叫师己的乐师来为他送行，说道：“先生您是没有过错的。”孔子说：“我唱一首歌，好不好？”于是唱道：“那些妇人的口，可以把大臣和亲信撵走；接近那些妇女，可以使人败事亡身。悠闲啊悠闲，我只有这样安度岁月！”师己返回后，桓子问他说：“孔子说了些什么？”师己如实相告。桓子长叹一声，说“先生是怪罪我们接受了齐国那一群女乐的缘故啊！” 孔子于是到了卫国，寄住在子路妻子的兄长颜浊邹家中。卫灵公问孔子：“你在鲁国得到的俸禄是多少？”孔子回答说：“俸米六斗。”卫国也照样给了他俸米六万斗。过了不多久，有人向卫灵公说了孔子的坏话，卫灵公就派公孙余假用兵仗监视孔子的出入。孔子害怕在这里获罪，居住了十个月，就离开了卫国。 孔子将要到陈国去，经过一个叫匡的地方，弟子颜刻替他赶车，颜刻用马鞭子指着说：“从前我进入过这个城，就是由那缺口进去的”。匡人听说，误以为是鲁国的阳虎来了，阳虎曾经残害过匡人，于是匡人就围困了孔子。孔子的模样很像阳虎，所以被困在那里整整五天。颜渊后来赶到，孔子说：“我还以为你死了。”颜渊说：“老师您活着，我怎么敢死！”匡人围攻孔子越来越急，弟子们都很害怕。孔子说：“周文王已经死去，周代的礼乐制度不就在我们这里吗？上天如果要毁灭这些礼乐制度的话，就不会让我们这些后死的人承提起维护它的责任。上天并没有要消灭周代的这些礼乐，匡人又能把我怎么样呢！”孔子派子一个跟从他的人到宁武子那里称臣，然后才得以离开匡地。 孔子离开匡地之后就到了一个叫蒲的地方，过了一多月，又返回了卫国，寄住在蘧伯玉家。卫灵公有个叫南子的夫人，派人对孔子说：“各国的君子，凡是看得起我们国君，愿意与我们国君建立像兄弟一样交情的，必定会来见见我们南子夫人的，我们南子夫人也愿意见见您”。孔子开始还推辞谢绝一番，最后不得已才去见她。南子夫人坐在葛布做的帷帐中等待。孔子进门后，面朝北叩头行礼。南子夫人在帷帐中拜了两拜，她披戴的环佩玉器首饰发出了叮当撞击的清声响。事后孔子说：“我来就不愿见她，现在既然不得已见了，就得还她以礼。”子路不高兴。孔子发誓说：“我假若不对的话，上天一定厌弃我！上天一定厌弃我！”在卫国住了一个多月，灵公与夫人南同坐了一辆车子，宦官雍渠陪待车右，出宫后，让孔子坐在第二辆车子上跟从，大摇大摆地从市上走过。孔子说：“我没有见过喜好道德像这样喜欢美色的人啊。”于是对卫灵公的所作所为感到厌恶，就离开卫国，往曹国去了。这一年，鲁定公死了。 孔子离开曹国到达宋国，与弟子们在大树下演习礼仪。宋国的司马桓魋想杀死孔子，就把树砍掉了。孔子只得离开这个地方。弟子们催促说：“我们可以快点走了。”孔子说：“上天既然把传道德的使命赋予我，桓魋他又能把我怎么样！” 孔子到了郑国，与弟子们走失散了，孔子一个人站在外城的东门。郑国人有看见了就对子贡说：“东门有个人，他的额头像唐尧，脖子像皋陶，肩膀像郑子产，可是从腰部以下比禹短子三寸，一副狼狈不堪、没精打采的样子，真像一条丧家狗。”子贡见面把原话如实地告诉了孔子。孔子高兴地说道：“他形容我的相貌，不一定对，但说我像条丧家狗，对极了！对极了。” 孔子于是到达陈国，寄住在司城贞子家里。过了一年多，吴王夫差来攻打陈国，夺取了三个城邑才退兵。赵鞅攻打朝歌。楚国包围了蔡国，蔡国迁移到吴地。吴国在会稽打败了越王勾践。 有一天，许多只隼（ｓǔｎ，损）落在陈国的宫廷中死了，有隼（ｈù,户）木做的箭穿在身上，箭头是石头制做的，箭长一尺八寸。陈湣公派使者向孔子请教，孔子说：“这些隼是从很远的地方飞来的，这是肃慎部族的箭。从前周武王伐纣灭商，沟通了与各少数民族的民族的联系，让九夷百蛮各族都贡献各自的地方特产，叫他们不能忘记自己的职责和义务。于是肃慎部族献来楛木做的箭和石头制作的箭头，长一尺八寸。周武王为了显示他的美德，就把肃慎部族的箭分给长女太姬，后来太姬嫁给了虞胡公，虞胡公又封在陈国。当初王室分珍宝玉器给同姓诸侯，是为了表示重视亲族；把远方的贡品分赠给姓诸侯，是为了表示重视亲族；把远方的贡品分赠给姓诸侯，是为了让他们不要忘服从周王朝。所以把肃慎部族的箭分给陈国。”陈湣公听了叫人到过去收藏各方贡物的仓库中去找一找，果然找到了这种箭。 孔子在陈国居住了三年，正好遇上晋国、楚国争霸，两国轮番攻打陈国，直到吴国攻打陈国为止，陈国常常遭受侵犯。孔子说：“回去吧，回去吧！我家乡的那些弟子，志气很大，只是行事阔一些，他们都很有进取心，也没有忘记自己的初衷。”于是孔子就离开了陈国。 孔子路过一个叫蒲的地方，正好遇上公叔氏据蒲反叛卫国，蒲人扣留了孔子。弟子中有个叫公良孺的，自己带了五辆车子跟随孔子周游各地。他这个人身材高大，有才德，且有勇力，对孔子说：“我从前跟随老师周游在匡地遇到危难，如今又在这里遇到危难，这是命里注定的吧。我和老师一再遭难，可搏斗而死。”公良孺跟蒲人打得很激烈，蒲人害怕了，对孔子说：“如果你不到卫国去，我就放你们走。”孔子与他们订立了盟约，这才放孔子他们从东门出去。孔子是到了卫国。子贡说：“盟约可以违背吗？”孔子说：“在要挟下订立的盟约，神是不会认可的。” 卫灵公听说孔子到来，很高兴，亲自赶到郊外迎接。灵公问孔子说：“蒲这个地方可以讨伐吗？”孔子回答说：“可以。”灵公说：“我的大夫却认为不可以讨伐，因为现在的蒲是防御晋，楚的屏障，用我们卫国的军队去攻打，恐怕是不可以的吧？”孔子说：“蒲地的男子有誓死效忠卫国的决心，妇女有守卫西河这块地方的愿望。我所说要讨伐的，只是四、五个领头叛乱的人罢了。”卫灵公说：“很好。”但是没有出兵去讨伐的叛乱。 卫灵公年纪老了，懒得处理政务，也不起用孔子。孔子长叹了一声说：“如果有人起用我，一年时间就差不多了，三年就会在大见成效。”孔子只好离开。 佛肸（ｘī，西)做中牟的长官。晋国的赵简子攻打范氏、中行氏，讨伐中牟。佛肸就占据中牟，反叛赵简子，并派人招请孔子孔子打算去。子路说：“我听老师说过：‘亲自做坏事的人那里，君子是不去的’。现在佛肸自己占据中牟反叛，您想前去，这是为什么呢？”孔子说：“我是说过这句话。但我不也说过，坚硬的东西是磨不薄的；不也说过洁白的东西，是染不黑的。我难道是只中看不能吃的匏瓜吗，怎么可以老是挂着却不给人吃呢？” 有一次孔子正敲着磬，有个背着草筐的人路过门口，说道：“有心思啊，这个击磬人，磬敲得又响又急，既然人家不赏识自己，那就算了吧！” 孔子向师襄子学习弹琴，一连学了十天，也没增学新曲子。师襄子说：“可以学些新曲了。”孔子说：“我已经熟习乐曲了，但还没有熟练地掌握弹琴的技法。”过了些时候，师襄子又说：“你已熟习弹琴的技法了，可以学些新曲子了。”孔子说：“我还没有领会乐曲的感意蕴，可以学些新曲了。”孔子说：“我还没有体会出作曲者是怎样的一个人。”过了些时候，孔子肃穆沉静，深思着什么，接着又心旷神怡，显出志向远大的样子。说：“我体会出作曲者是个什么样的人了，他的肤色黝黑，身材高大，目光明亮而深邃，好像一个统治四方侯的王者，除了周文王又有谁能够如此呢！”师襄子恭敬地离开位给孔子拜了两拜，说：“我老师原来说过，这是《文王操》呀”。 孔子既然得不到卫国的重用，打算西游去见赵简子。到了黄河边，听到窦鸣犊、舜华被杀的消息。就面对着黄河感慨地叹气说：“壮美啊黄河水，浩浩荡荡多么盛大，我所以不能渡过黄河，也是命运的安排吧！”子贡赶上前去问：“冒 昧地请问老师，这话是什么意思？”孔子说：“窦鸣犊、舜华两个人，都是晋国有才德的大夫。当赵简子还没有得志的时候，是依靠这两个人才得以从政的；等到他得志了，却杀了他们来执掌政权。我听说过，一个地方剖腹取胎杀害幼兽，麒麟就不来到它的郊野，排干了池塘水抓鱼，那么龙就不调合阴阳来兴致雨了，倾覆鸟巢毁坏鸟卵，凤凰就不愿来这里飞翔。这是为什么呢？君子忌讳伤害他的同类。那些鸟兽对于不义的行为尚且知道避开，何况是我孔丘呢！”于是便回到老家陬乡休息，创作了《陬操》的琴曲来哀掉窦鸣犊、舜华两们贤人。随后又回到卫国，寄住在蘧伯玉家。 有一天，卫灵公向孔子问起军队列阵作战的事。孔子回答说：“祭祀的事我倒曾经听说过，排兵布阵的事，我还不曾学过呢。”第二天，卫灵公与孔子谈话的时候，看见空中飞来大雁，就只顾抬头仰望，神色不在孔了身上。孔子于是就离开了卫国，再往陈国。 这年夏天，卫灵公死了，他的孙子辄立为国君，这就是卫出公。六月间，赵鞅把流亡在外的姨灵公太子蒯聩接纳到戚地。阳虎让太子蒯聩穿上孝服，又让八个人空麻带孝，装扮成是从卫国来接太子回去奔丧的样子，器着进了戚城，就在那里住了下来。冬天，蔡国迁都到州来。这一年是鲁哀公三年，孔子已六十岁了。齐国帮助卫国包围了戚城，是因为卫太子蒯聩在那儿的缘故。 还是这一年夏天，鲁桓公、釐公的庙堂起火烧了起来。南宫敬叔去救火。孔子在陈国听到了这个消息，就说：“火灾一定在桓公、釐公的庙堂吧？”不久证实，果然如他所言。 这年秋天，季桓子病重乘着辇车望见鲁城，感慨地长叹一声说：“从前这个国家几乎兴旺了，因为我得罪了孔子，所以没有兴旺起来。”回头又对他的嗣子季康子说：“我要是死了，你一定会接掌鲁国的政权佐国君；你佐国君之后，一定要召回孔子。”过了几天，季桓子死了，季康子继承了他的职位。丧事办完之后，想如回了孔子。大夫公之鱼说：“从前我们的国鲁定公曾经任用过他，没能有始有终，最后被诸侯耻笑。现在你再任用他，如果也不能善终，这会再次招来诸侯的耻笑。”季康子说：“那么召谁才好呢？”公之鱼说：“一定要召冉求。”于是就派人召回了冉求。冉求准备起身前往，孔子说：“这次鲁国召冉求回去，不会小用，该会重用他。”就在这一天，孔子说：“回去吧，回去吧！我家乡的那些弟子志向高远而行事疏阔，为文富有文采，我真不知从何下手来教育他们才好。”子贡知道孔子思念家乡想回去，在送冉求时，叮嘱过他“你要是被重用了，要想着把老师请回去”之类的话。 冉求离去之后，第二年，孔子从陈国移居蔡国。蔡昭公准备到吴国去，是吴国召他去的。从前昭公欺骗他的大臣，把国都迁到了州来，这次将要前往，大夫们提心他又要迁都，公孙翩就在路上把蔡昭公射死了。接着，楚军就来侵犯蔡国。同年秋天，齐景公死了。 第二年，孔子从蔡国前往叶地。叶公问孔子为政的道理，孔子说：“为政的道理在于招纳远方的贤能，使近处的人归服”。有一天。叶公向子路问孔子的情况，子路不回答。孔子听说这件事后就对子路说：“仲由，你为什么不对他说：‘他这个人呀，学习起道理来不知疲倦，教导人全不厌烦，发愤学习时忘记了吃饭，快乐时忘记了忧愁，以致于连衰老就将到来也不知道’。” 孔子离开楚国的叶地回到蔡国。在路上遇见长沮、桀溺两人并肩耕田，孔子以为他们是隐士，就叫子路前去打听渡口在什么地方。长沮说：“那个拉着马缰强的人是谁？”子路回答说：“是孔丘。”长沮又问：“是鲁国的孔丘吧？”子路说：“是的。”长沮说：“那他应该知道渡口在哪儿了。”桀溺又问子路：“你是谁？”子路说：“我是仲由。”桀溺说：“你是孔丘的门徒吗？”子路说：“是的。”桀溺说：“天下到处都在动荡不安，而谁能改变这种现状呢？况且你与跟着那逃避暴乱臣的人四处奔走，还不如跟着我们这些躲避乱世的人呢？”说完，就继续不停地耕田。子路把此话告诉了孔子，孔子失望地说：“我们不能居住在山林里与鸟兽同群，要是天下太平，我也用不着到处奔走想改变这个局面了”。 有一天，子路一个人行走的时候，路遇一位肩扛除草工具的老人。子路问他：“您看见过我的老师吗？”老人说：“你们这些人四肢不勤劳，五谷分辨不清，谁是你的老师我怎么会知道？”说完就拄着拐杖拔草去了。事后子路把这些经过告诉了孔子，孔子说：“这是位隐士。”叫子路再到那里看看，老人已经走了。 孔子迁居到蔡国三年，吴国攻打陈国。楚国救援陈国，军队驻扎在城父。听说孔子住在陈国和蔡国的边境上，楚国便派人去聘请孔子。孔子正要前往拜见接受聘礼，陈国、蔡国的大夫商议说：“孔子是位有才德的贤人，他所指责讽刺的都切中诸侯的弊病。如今长久地停留在我们陈国和蔡国之间，大夫们的施政施、所做所为都不合仲尼的意思。如今的楚国，是个大国，却来聘请孔子。如果孔子在楚国被重用，那么我们陈蔡两国掌权的大夫们就危险了。”于是他们双方就派了一些服劳役的人把孔子围困在野外。孔子和他的弟子无法行动，粮食也断绝了。跟从的弟子饿病了，站都站不起来。孔子却还在不停地给大家讲学，朗诵诗歌、歌唱、弹琴。子路很生气地来见孔子：“君子也有困究的时候吗？”孔子说：“君子在困窘面前能坚节操不动摇，人小遇到困窘就会不加节制，什么过火的事情都做得出来。” 这时子贡的脸色也变了。孔子说：“赐啊，你认为我是博学强记的人吗？”子贡回答说：“是的。难道不对吗？”孔子说：“不是的。我是用一种基本原则贯穿于全部知识之中的。” 孔子知道弟子们心中不高兴。便叫来子路问道：“《诗经》上说‘不是犀牛也不是老虎，然而它却排徊在旷野上’，难道是我们学说有什么不对吗？我们为什么会落到这种地步呢？”子路说：“大概是我们的德还不够吧？所以人家不信任我们；想必是我们的智谋还不够吧？所以人家不放我们通行。”孔子说：“有这样的话吗？仲由啊，假使有仁德的人必定能使人信任，哪里还会有伯夷、叔齐饿死在首阳山呢？假使有智谋的人就能早行无阻，哪里会有王子比干被剖心呢？” 子路退出，子贡进来见孔子。孔子对子贡说：“赐啊，《诗经》上说‘不是犀牛也不是老虎，然而它却徘徊在旷野上’。难道是我们的学说有有什么不对吗？我们为什么落到这种地步呢？“子贡说：“老师的学说博大到极点了，所以天下没有一个国家能容纳老师。老师何不稍微降低一些您的要求呢？”孔子说：“赐啊，好的农夫虽然善于耕种，但他却不一定有好的收获；好的工匠虽然不精巧的手艺，但他的所作却未必能使人们都称心如意。有修养的人能研修自己的学说，就像网一样，先构出基本的大纳统绪，然后再依疏理扎，但不一定被世人所接受。现在你不去研修自己的学说，反而想降格来敬合取容。赐啊，你的志向太不远大了。” 子贡出去之后，颜回进来见孔子。孔子说：“回啊，《诗经》说‘不是犀牛也不是老虎，然而它却徘徊在旷野上’。难道是我们的说学有什么不对吗？我们为什么落到这种地步呢？”颜回说：“老师的学说博大到极点了，所以天下没有一个国家能容纳老师。虽然是这样，老师还是要推行自己的学说，不被天下接受又有什么关系呢？不被接受，这样才能出君子的色！一个人不研修自己的学说，那才是自己的耻辱。至于已下大力研修的学说不被人所用，那是当权者的耻辱了。不被天下接又有什么关系呢？不被接受，这样才能显出君子的本色！”孔子听了欣慰地笑着说：“是这样的啊，姓颜的小伙子！假使你有很多钱财，我愿意给你做管家。” 于是派子贡到楚国去。楚昭王调动军队来迎接孔子，这才除了这场灾祸。 楚昭王想把有户籍登记的七百里地方封给孔子。楚国的令尹子西阻止说：“大王派往各侯国的使臣，有像子贡这样的吗？”昭王说：“没有。”子西又问：“大王的左右辅佐大臣，有像颜回这样的吗？”昭王说：“没有。”子西又问：“大王的将帅，有像子路这样的吗？”昭王回答说：“没有。”子西还问：“大王的各部主事官员，有像宰予这样的吗？”昭王回答说：“没有。”子西接着说：“况且我们楚国的祖先在受周天子分封时，封号是子爵，土地跟男爵相等，方圆五十里。现在孔丘讲述三皇五帝的治国方法，申明周公旦、召公奭辅佐周天子的事业，大王如果任用了他，那么楚国还能世世代代保有方圆几千里的土地吗？想当年文王在丰邑、武王在镐京，作为只有百里之地的主，最终能统治天下。现在如让孔丘拥有那七百城土地，再加上那些有才能的弟子辅佐，这不是楚国的福音啊。“昭王听了就打消了原来的想法。这年秋天，楚昭死在城父。 楚国的狂人接舆有一天唱着歌走过孔子的车子，说：“凤凰呀，凤凰呀，你的美德为什么这么不景气？过去的不能再挽回，未来的还可以再赶得上，算了吧，算了吧！现在从政的人都是很危险的啊！”孔子下了车，想和他谈谈，但他却快步走开了，没能跟他说上话。 于是孔子从楚国返回了卫国。这一年，孔子六十三岁，是鲁哀公六年（前489）。 第二年，吴国和鲁国在一个叫缯的地方会盟，吴国要求鲁国提供百牢的祭品。吴国的太宰嚭（ｐǐ,匹）召见季康子。季康子就派子贡前往交涉，然后鲁国才纳百牢祭品。 孔子说：“鲁国、卫国的政治情况，如同兄弟一般相似。”这个时候，卫出公辄的父亲蒯聩没有继位做国君，流亡在外，诸侯对此事屡加指责。而孔子的弟子很多在卫国做官，卫出公辄也想请孔子出来执政。子路问孔子说：“卫国国想请您出来执政，您打算首先做什么呢？”孔子回答说：“那我一定首先正名分！”子路说：“有这样的事吗，老师您太迂阔了！为什么要首先正名份呢？”孔子说：“鲁莽啊，仲田！要知道，名分不正，说出的话来就不顺当；说话不顺当，那么事情就办不成；辐情办不成，那么礼乐教化就不能兴盛；乐教化不兴盛，那么刑罚不准确适度，那么老百姓就年足无措，不知怎么办才好。所以君子办事必须符合名分，说出来的话，一定要切实可行。君子对于他所说出来的话，应该毫不苟且随便才行啊。” 第二年（前484），冉有为季氏统率军队，在郎地同齐国作战，打败了齐国的军队。季康子对冉求说：“您的军事才能，是学来的呢？还是天生的呢？”冉有回答说：“我是从孔子那里学来的。”季康子又问：“孔子是怎样的一个人呢？”冉有回答说：“任用他要符合名分，他的学说不论是传布到百姓中，还是对质于鬼神前，都是没有遗憾的。我对于军事，虽然有功而累计封到二千五百户人家，而孔子却会毫不动心的。”康子说：“我想召请他回来，可以吗？”冉有说：“你想召请他回来，只要不让小人从中阻碍他，就可以了。”当时，卫国大夫孔文子准备攻打太叔，向孔子问计策。孔子推辞说不知道，他回到住处便立即吩咐备车离开了卫国，说道：“鸟能选择树木栖息，树木怎能选择鸟呢？”孔文子坚决拘留他。恰好季康子派来公华、公宾、公林，带着礼物迎接迎孔子，孔子就回鲁国去了。 孔子离开鲁国一共经过十四年又回到鲁国。 鲁哀公向孔子问为政的道理，孔子回答说：“为政最重要的是选择好大臣。”季康子也向孔子问为政的道理，孔子说：“要举用正直的人，抛弃邪曲的人，那样就使邪曲的人变为正直的人了。”季康子忧虚盗窃，孔子说：“如果你自己没有欲的话，就是给奖赏，人们也是不会去偷窃的。”但是鲁国最终也不能重用孔子，孔子也不要求出来做官。 孔子的时代，周王衰微，礼崩乐坏，《诗》、《书》也殊缺不全了。孔子探究夏、商、西周三代的礼仪制度，编定了《书传》的篇次，上起唐尧、虞舜之时，下至秦穆公，依照事情的先后，加以整理编排。孔子说：“夏代的礼仪制度我还能讲出来，只是夏的后代杞国没有留下足够证明这些的文献了。殷商的礼仪制度我也能讲出来，只是殷商的后宋国没有留下足够证明这些制度的文献了。如果杞、宋两国有足够的文献，我就能证明这些制度了。”孔子考察了殷代继承夏代对礼仪制度所作的增减之后说：“将来即使经过一百，那增减的也是可以预知的，因为一种是重视文采，另一种是重视朴实。周代的礼仪制度是在参照了夏代和殷代的基础上制定的，多么丰富多采呀，我主张用周代的礼仪”所以《书传》、《礼记》都是孔子编定的。 孔子曾对鲁国的乐官太师说：“音乐是可以通晓的。刚开始演奏的时候要互相配合一致，继续下去是节奏和谐，声音清晰，连续不断，这样直到整首乐曲演奏完成。”孔子又说：“我从卫国返回鲁国之后，就开始订正诗乐，使《雅》、《颂》都恢复了原来的曲调。” 古代留传下来的《诗》有三千多篇，到孔子时，他把重复的删掉了，选 取中合于义的用于礼义教化，最早的是追述殷始祖契、周始祖后稷，其次是叙述殷、周两代的兴盛，直到周幽王、周厉王的政治缺失，而开头的则是叙述男女夫妇关系和感情的诗篇，所以说：“《关睢》这一乐章作为《国风》的第一篇，《鹿鸣》作为《小雅》的第一篇；《文王》作为《大雅》的第一篇；《清庙》作为《颂》的第一篇”。三百零五篇诗孔子都能将演奏歌唱，以求合于《韶》、《武》、《雅》《颂》这些乐曲的音调。先王的乐制度从此才恢复旧观而得以称述，王道 完备了，孔子也完成了被称为“六艺”的《诗》、《书》、《乐》、《易》、《春秋》的编修。 孔子晚年喜欢钻研《周易》，他详细解释了《彖辞》、《锡辞》、《卦》、《文言》等。孔子读《周易》刻苦勤奋，以致把编穿书简的牛皮绳子也弄断了多次。他还说：“再让我多活几年，这样的话，我对《周易》的文辞和义理就能够充分掌握理解了。” 孔子用《诗》、《书》、《礼》、《乐》作教材教育弟子，就学的弟子大约在三千人，中能精通礼、乐、射、御、数、术这六种技艺的有七十二人。至于像颜浊邹那样的人，多方面受到孔子的教诲却没有正式入籍的弟子就更多了。 孔子教育弟子有四个方面：学问、言行、忠恕、信义。为弟子订四条禁律：不揣测、不武断、不固执、不自以为是。他认为应当特别谨慎处理的是：斋戒、战争、疾病。孔子很少谈到利，如果谈到，就与命运、仁德联系起来。他教育弟子的时候，不到人家真正遇到困难，烦闷发急的时候，不去启发开导他。他出一个道理，弟子不能触类旁通地推演出似的道理，他就不再重复讲述了。 孔子在自己的乡里，谦恭得像个不善言谈的人。他在宗庙祭祀和朝廷议政这些场合，却能言善辩，言辞明晰而又通达，然而又很恭谨小心。上朝时，与上大夫交谈，态度和悦，中正自然；与下大夫交谈，就显得和乐安详了了。 孔子进入国君的公门，低头弯腰，恭敬谨慎，进门后急行而前，恭有礼。国命他迎接宾客，容色庄重认真。国君召见他，不等待车驾备好，就动身起行。 鱼不新鲜，肉有变味，或不按规矩切割，孔子不吃。席位不正，不就坐。在有丧事的人旁边吃饭，从来没有吃饱过。 在一天内哭泣过，就不会再歌唱。看见穿孝服的人和盲人，即使是是个小孩，也必定改变面容以示同情。 孔子说：“三个人同行，中心有可做我老师的。”又说：“不去修明道德，不去探求学业，听到正直的道理又不前往学习，对缺点错误又不能改正，这些是我是忧虑提心的问题。”孔子请人唱歌，要是唱得好，就请人再唱一遍，然后自己也和唱起来。 孔子不谈论怪异、暴力、鬼神的事情。 子贡说：“老师在文献方面的成绩很显著，我们是知道的。老师讲论有关天道与人的命运的深微见解我们就不知道了。”颜渊感慨地长叹一声说：“我越是仰慕老师的学问，越得它无比崇高，越是钻研探讨，越觉得它坚实深厚。看见它是在前面，忽然间又在后面了。老师善于循序渐进地诱导人，用典籍来丰富我的知识，用礼仪来规范我的言行，使我想停止学习都不可能。已经竭尽了我的才力，我现在也好像有所建树，但老师的学问却依然高立在我的面前。虽然我也想追赶上去，但是不可能追得上。”达巷这个地方的人对我说：“伟大啊孔子，他博学多才却不专一名家。”孔子听了这话之后说：“我要专于什么呢？是专于驾车？还是专于射箭？我看还是专于驾车吧。”子牢说：“老师曾说：‘我没有被世所用，所以才学会了这许多的技艺’。” 鲁哀公十四年（前481）的春天，在大野这个地方狩猎。给叔孙氏驾车的商猎获了一头怪兽，他们以为这是不祥之兆。孔子看了后说：“这是麒麟。”于是便将它取走了。孔子说：“黄河上再不见神龙负图出现，洛水上再不见神龟负洛书出现，我也就快要完啦！”渊死了，孔子说：“这是老天要我死呀！”等到他西去大野狩猎见到麒麟，说：“我的主张到尽头了！”感慨地说：“没有人能了解我了！”子贡说：“为什么说没有人了解您？”孔子回答说：“我不抱怨天，也不怪罪人，下学人事，上通天理，能了解我的，只有上天了吧！” 孔子说：“不降低自己的志向，不使自己的人格受到侮辱，只有伯夷、叔齐丙人吧！”又说：“柳下惠、少连降低了自己的志向，使人格受到了侮辱”。又说“虞仲、夷逸隐居，不言世务，行为合干清高纯洁，自我废弃合于权变“。又说：”我就跟他们不同了，既不降志辱身以求进取，也不隐居避世脱离尘俗，没有绝对的可以，也没有绝对的不可以”。 孔子说：“不成啊，不成啊！君子最提忧的就是死后没有留下好的名声。我的主张不能实行，我用什么贡献给社会留下好名呢？”于是就根据鲁国的史书作了《春秋》，上起鲁隐公元年（前722），下止鲁哀公十四年（前481），共包 括鲁国十二个国君。以鲁国为中心记述，尊奉周王室为正统，以殷商的旧为借鉴，推而上承夏、商、周在法统，文辞简约而旨意广博。所以吴、楚的国自称为王的，在《春秋》中仍贬称为子爵；晋文公在践土与诸侯会盟，实际上是召周襄王入会的，而《春秋》中却避讳说“周天子巡狩来到到河阳”。依此类推，《春秋》就是用这一原则，来褒贬当时的各种事件，后有的国君加以称推广开来，使《春秋》的义法在天下通行，天下那些乱臣奸贼就都害怕起来了。 孔子任司寇审理诉讼案件时，文辞上有可与别人商的时候，他从不独自决断。到了写《春秋》时就不同了，应该写的一定写上去，应当删的一定删掉，就连子夏这些长于文字的弟子，一句话也不能给他增删。弟子们学习《春秋》， 孔子说：“后人了解我将因为《春秋》，后人怪罪我也将因为《春秋》。” 第二天，子路死在卫国。孔子生病了，子贡请求看望他。孔子正拄着拐杖在口修闲散步，说：“赐，你为什么来得这样迟啊？”孔子于是就叹息，随即唱道：“泰山要倒了！梁柱要断了，哲人要死了！”他边唱边流下了眼泪。对子贡说：“天下失去常道已经很久了，没有人能奉我的主张。夏人死了停棺在东厢的台阶，周人死了停棺在西厢的台阶，殷人死了停棺在堂屋的两柱之间。昨天晚上我梦见自己坐在两柱之间受人祭奠，我原本就是殷商人啊。”过了七天孔子就死了。 孔子享年七十三岁，死在鲁哀公十六年（前479）四月的己丑日。 鲁哀公为他作了一篇悼词说：“老天爷不仁慈，不肯留下这位老人，使他扔下我，孤零零一人在位，我孤独而又伤痛。啊！多么痛！尼父啊，没有人可以作为我学习的楷模了！”子贡说：“鲁君他难道不能终老在鲁国吗？老师的话说：‘法丧失就会昏乱，名分丧失就会产生过失。丧失了意志就会昏乱，失去所宜就会出现过错。’老师活着的时候不能用他，死了作祭文哀悼他，这是不合礼的。以诸侯身份称‘余一人’，是不合名分的啊。” 孔子死后葬在鲁城北面的泗水岸边，弟子们都在心里为他服丧三年。三年心丧完毕，大家道别离去时，都相对而哭，又各尽哀；有的就又留了下来。只有子贡在墓旁搭子一间小房住下，守墓总共六年，然后才离去。弟子及鲁国他人，相率前往墓旁居住的一百多家。因而就把这里命名为“孔里”。鲁国世世代代相传，每年都定时到孔子墓前祭拜，而儒生们也在这时来这里讲习礼仪，行乡学业考校的饮酒礼，以及比射等仪式。孔子的墓地有一顷大。孔子故居的堂屋以及弟子们所居住的内室，后来就改成庙，借以收藏孔子生前穿过的衣服，戴过的帽子，使用过的琴、车子、书籍等，直到汉代，二百多年间没有废弃。高皇帝高皇帝刘邦经过鲁地，用牛羊猪三牲俱全的太牢祭祀孔子。诸侯、卿大夫、宰相一到任，常是先去拜谒孔子墓，然后才去就职处理政务。 孔子生了鲤，字伯鱼。伯鱼享年五十岁，死在孔子之前。 伯鱼生了伋，字子思，郭年六十二岁。曾经受困于宋国。子思作了《中庸》。 子思生了白，字子上，享年四十七岁。子上生了求，字子家，享年四十五岁。子家生了箕，字子京，享年四十六岁。子京生了穿，字子高，享年五十一岁。子高生了慎，享年五十七岁，曾经做过魏国的相。 子慎生了鲋，享年五十七岁，做过陈胜王的博士，死在陈这个地方。 鲋的弟弟叫子襄，享年五十七岁。曾经做过汉孝惠皇帝的博士，后被提升为长沙郡的太守。身高九尺六寸。 子襄生了忠，享年五十七岁。忠生了武，武生了延年和安国。安国做了当今孝武皇帝的博士，官至临淮郡太守，寿短早死。安国生了卬，卬了生。 太史公说：《诗》中有这样的话：“像高山一般令人瞻仰，像大道一般让人遵循。”虽然我不能达到这种境地，但是心里却向往着他。我读孔子的著作，可以想见到他的为人。到了鲁地，参观了孔子的庙堂、车辆、衣服、礼器，目睹了读书的学生们按时到孔子旧宅中演习礼仪的情景。我怀着崇敬的心情徘徊留恋不愿离去。自古以来，天下的君王直到贤人也够多的了，当活着的时候都显贵荣耀，可是一死什么也就没有了。孔子是一个平民，他的名声和学说已经传了十几，读书的人仍然崇他为宗师。从天子王侯一直到全国谈六艺的人，都把孔子的学说来做为判断衡的最高准则，可以说孔子是至高无上的圣人了。\n"},{"id":153,"href":"/posts/literature/%E5%B0%A7%E6%88%92/","title":"尧戒","section":"文学","content":"战战栗栗，日慎一日；人莫蹪于山，而蹪于蛭\n战战栗栗，一天比一天谨慎。人不会被大山绊倒，而往往被小土堆绊倒。\n"},{"id":154,"href":"/posts/literature/%E5%B1%B1%E6%9C%A8/","title":"山木","section":"文学","content":"庄子行走于山中，看见一棵大树枝叶十分茂盛，伐木的人停留在树旁却不去动手砍伐。问他们是什么原因，说：“没有什么用处。”庄子说：“这棵树就是因为不成材而能够终享天年啊！”庄子走出山来，留宿在朋友家中。朋友高兴，叫童仆杀鹅款待他。童仆问主人：“一只能叫，一只不能叫，请问杀哪一只呢？”主人说：“杀那只不能叫的。”第二天，弟子问庄子：“昨日遇见山中的大树，因为不成材而能终享天年，如今主人的鹅，因为不成材而被杀掉；先生你将怎样对待呢？” 庄子笑道：“我将处于成材与不成材之间。处于成材与不成材之间，好像合于大道却并非真正与大道相合，所以这样不能免于拘束与劳累。假如能顺应自然而自由自在地游乐也就不是这样。没有赞誉没有诋毁，时而像龙一样腾飞时而像蛇一样蜇伏，跟随时间的推移而变化，而不愿偏滞于某一方面；时而进取时而退缩，一切以顺和作为度量，优游自得地生活在万物的初始状态，役使外物，却不被外物所役使，那么，怎么会受到外物的拘束和劳累呢？这就是神农、黄帝的处世原则。至于说到万物的真情，人类的传习，就不是这样的。有聚合也就有离析，有成功也就有毁败；棱角锐利就会受到挫折，尊显就会受到倾覆，有为就会受到亏损，贤能就会受到谋算，而无能也会受到欺侮，怎么可以一定要偏滞于某一方面呢！可悲啊！弟子们记住了，恐怕还只有归向于自然吧！” 市南宜僚拜见鲁侯，鲁诸正面带忧色。市南宜僚说：“国君面呈忧色，为什么呢？”鲁侯说：“我学习先王治国的办法，承继先君的事业；我敬仰鬼神尊重贤能，身体力行，没有短暂的止息，可是仍不能免除祸患，我因为这个缘故而忧虑。” 市南宜僚说：“你消除忧患的办法太浅薄了！皮毛丰厚的大狐和斑斑花纹的豹子，栖息于深山老林，潜伏于岩穴山洞，这是静心；夜里行动，白天居息，这是警惕；即使饥渴也隐形潜踪，还要远离各种足迹到江湖上觅求食物，这又是稳定；然而还是不能免于罗网和机关的灾祸。这两种动物有什么罪过呢？是它们自身的皮毛给它们带来灾祸。如今的鲁国不就是为你鲁君带来灾祸的皮毛吗？我希望你能剖空身形舍弃皮毛，荡涤心智摈除欲念，进而逍遥于没有人迹的原野。遥远的南方有个城邑，名字叫做建德之国。那里的人民纯厚而又质朴，很少有私欲；知道耕作而不知道储备，给与别人什么从不希图酬报；不明白义的归宿，不懂得礼的去向；随心所欲任意而为，竟能各自行于大道；他们生时自得而乐，他们死时安然而葬。我希望国君你也能舍去国政捐弃世俗，从而跟大道相辅而行。” 鲁侯说：“那里道路遥远而又艰险，又有江河山岭阻隔，我没有可用的船和车，怎么办呢？”市南宜僚说：“国君不要容颜高傲，不要墨守滞留，便可以此作为你的车子。”鲁侯说：“那里道路幽暗遥远而又无人居住，我跟谁是邻居？我没有粮，我没有食物，怎么能够到达那里呢？” 市南宜僚说：“减少你的耗费，节制你的欲念，虽然没有粮食也是充足的。你渡过江河浮游大海，一眼望去看不到涯岸，越向前行便越发不知道它的穷尽。送行的人都从河岸边回去，你也就从此离得越来越远了！所以说统治他人的人必定受劳累，受制于别人的人必定会忧心。而唐尧从不役使他人，也从不受制于人。我希望能减除你的劳累，除去你的忧患，而独自跟大道一块儿遨游于太虚的王国。并合两条船来渡河，突然有条空船碰撞过来，即使心地最偏狭、性子最火急的人也不会发怒；倘若有一个人在那条船上，那就会人人大声呼喊喝斥来船后退；呼喊一次没有回应，呼喊第二次也没有回应，于是喊第三次，那就必定会骂声不绝。刚才不发脾气而现在发起怒来，那是因为刚才船是空的而今却有人在船上。一个人倘能听任外物、处世无心而自由自在地遨游于世，谁能够伤害他！” 北宫奢替卫灵公征集捐款铸造钟器，在外城门设下祭坛，三个月就造好了钟并编组在上下两层钟架上。王子庆忌见到这种情况便向他问道：“你用的是什么样的办法呀？” 北宫奢说：“精诚专一而又顺其自然，不敢假设有其他什么好办法。我曾听说，‘既然已细细雕刻细细琢磨，而又要返归事物的本真。’纯朴无心是那样无知无识，忘却心智是那样从容不疑；财物汇聚而自己却茫然无知，或者分发而去或者收聚而来；送来的不去禁绝，分发的不去阻留；强横不讲理的就从其自便，隐委顺和的加以随应，依照各自的情况而竭尽力量，所以早晚征集捐款而丝毫不损伤他人，何况是遵循大道的人呢！” 孔子被围困在陈国、蔡国之间，七天七夜不能生火煮饭。太公任前去看望他，说：“你快要饿死了吧？”孔子说：“是的。”太公任又问：“你讨厌死吗？”孔子回答：“是的。” 太公任说：“我来谈谈不死的方法。东海里生活着一种鸟，它的名字叫意怠。意怠作为一种鸟啊，飞得很慢，好像不能飞行似的；它们总是要有其他鸟引领而飞，栖息时又都跟别的鸟挤在一起；前进时不敢飞在最前面，后退时不敢落在最后面；吃食时不敢先动嘴，总是吃别的鸟所剩下的，所以它们在鸟群中从不受排斥，人们也终究不会去伤害它，因此能够免除祸患。长得很直的树木总是先被砍伐，甘甜的井水总是先遭枯竭。你的用心是装扮得很有才干以便惊吓普通的人，注重修养以便彰明别人的浊秽，毫不掩饰地炫耀自己就像是举着太阳和月亮走路，所以总不能免除灾祸。从前我听圣德宏博的老子说过：‘自吹自擂的人不会成就功业；功业成就了而不知退隐的人必定会毁败，名声彰显而不知韬光隐晦的必定会遭到损伤。’谁能够摈弃功名而还原跟普通人一样！大道广为流传而个人则韬光隐居，道德盛行于世而个人则藏誉匿耀不处其名；纯朴而又平常，竟跟愚狂的人一样；削除形迹捐弃权势，不求取功名。因此不会去谴责他人，别人也不会责备自己。道德修养极高的人不求闻名于世，你为什么偏偏喜好名声呢？” 孔子说：“说得实在好啊！”于是辞别朋友故交，离开众多弟子，逃到山泽旷野；穿兽皮麻布做成的衣服，吃柞树和栗树的果实；进入兽群兽不乱群，进入鸟群鸟不乱行。鸟兽都不讨厌他，何况是人呢！ 孔子问桑雽道：“我两次在鲁国被驱逐，在宋国受到伐树的惊辱，在卫国被人铲除足迹，在商、周之地穷愁潦倒，在陈国和蔡国间受到围困。我遭逢这么多的灾祸，亲朋故交越发疏远了，弟子友人更加离散了，这是为什么呢？” 桑雽回答说：“你没有听说过那假国人的逃亡吗？林回舍弃了价值千金的璧玉，背着婴儿就跑。有人议论：‘他是为了钱财吗？初生婴儿的价值太少太少了；他是为了怕拖累吗？初生婴儿的拖累太多太多了。舍弃价值千金的璧玉，背着婴儿就跑，为了什么呢？’林回说：‘价值千金的璧玉跟我是以利益相合，这个孩子跟我则是以天性相连。’以利益相合的，遇上困厄、灾祸、忧患与伤害就会相互抛弃；以天性相连的，遇上困厄、灾祸、忧患与伤害就会相互包容。相互收容与相互抛弃差别也就太远了。而且君子的交谊淡得像清水一样，小人的交情甜得像甜酒一样；君子淡泊却心地亲近，小人甘甜却利断义绝。大凡无缘无故而接近相合的，那么也会无缘无故地离散。”孔子说：“我会由衷地听取你的指教！”于是慢慢地离去，闲放自得地走了回来，终止了学业丢弃了书简，弟子没有一个侍学于前，可是他们对老师的敬爱反而更加深厚了。 有一天，桑雽又说：“舜将死的时候，用真道晓谕夏禹说：‘你要警惕啊！身形不如顺应，情感不如率真。顺应就不会背离，率真就不会劳苦；不背离不劳神，那么也就不需要用纹饰来装扮身形；无须纹饰来矫造身形，当然也就不必有求于外物。’” 庄子身穿粗布衣并打上补钉，工整地用麻丝系好鞋子走过魏王身边。魏王见了说：“先生为什么如此疲惫呢？” 庄子说：“是贫穷，不是疲惫。士人身怀道德而不能够推行，这是疲惫；衣服坏了鞋子破了，这是贫穷，而不是疲惫。这种情况就是所谓生不逢时。大王没有看见过那跳跃的猿猴吗？它们生活在楠、梓、豫、章等高大乔木的树林里，抓住藤蔓似的小树枝自由自在地跳跃而称王称霸，即使是神箭手羿和逢蒙也不敢小看它们。等到生活在柘、棘、枳、枸等刺蓬灌木丛中，小心翼翼地行走而且不时地左顾右盼，内心震颤恐惧发抖；这并不是筋骨紧缩有了变化而不再灵活，而是所处的生活环境很不方便，不能充分施展才能。如今处于昏君乱臣的时代，要想不疲惫，怎么可能呢？这种情况比干遭剖心刑戮就是最好的证明啊！” 孔子受困于陈国、蔡国之间，整整七天不能生火就食，左手靠着枯树，右手敲击枯枝，而且还唱起了神农时代的歌谣，不过敲击的东西并不能合符音乐的节奏，有了敲击的声响却没有符合五音的音阶，敲木声和咏歌声分得清清楚楚，而且恰如其分地表达了唱歌人的心意。 颜回恭敬地在一旁侍立，掉过脸去偷偷地看了看。孔子真担心他把自己的道德看得过于高远而达到最了不起的境界，爱惜自己因而至于哀伤，便说：“颜回，不受自然的损害容易，不接受他人的利禄则较困难。世上的事没有什么开始不同时又是终了的，人与自然原本也是同一的。至于现在唱歌的人又将是谁呢？” 颜回说：“我冒昧地请教什么叫做不受自然的损害容易。”孔子说：“饥饿、干渴、严寒、酷暑，穷困的束缚使人事事不能通达，这是天地的运行，万物的变迁，说的是要随着天地、万物一块儿变化流逝。做臣子的，不敢违拗国君的旨意。做臣子的道理尚且如此，何况是用这样的办法来对待自然呢！” 颜回又问：“什么叫做不接收他人的利禄则较困难呢？”孔子说：“初被任用办什么事都觉得顺利，爵位和俸禄一齐到来没有穷尽，外物带来的好处，本不属于自己，只不过是我的机遇一时存在于外物。君子不会做劫盗，贤人也不会去偷窃。我若要获取外物的利益，为了什么呢？所以说，鸟没有比燕子更聪明的，看见不适宜停歇的地方，绝不投出第二次目光，即使掉落了食物，也舍弃不顾而飞走。燕子很害怕人，却进入到人的生活圈子，不过只是将它们的巢窠暂寄于人的房舍罢了。” 颜回又问：“什么叫做没有什么开始不同时又是终了的？”孔子说：“变化无穷的万物不可能知道是谁替代了谁而谁又为谁所替代，这怎么能知道它们的终了？又怎么能知道它们的开始？只不过谨守正道随应变化而已。” 颜回又问：“什么叫做人与自然原本也是同一的？”孔子说：“人类的出现，是由于自然；自然的出现，也是由于自然。人不可能具有自然的本性，也是人固有的天性所决定的，圣人安然体解，随着自然变化而告终！” 庄子在雕陵栗树林里游玩，看见一只奇异的怪鹊从南方飞来，翅膀宽达七尺，眼睛大若一寸，碰着庄子的额头而停歇在果树林里。庄子说：“这是什么鸟呀，翅膀大却不能远飞，眼睛大视力却不敏锐？”于是提起衣裳快步上前，拿着弹弓静静地等待着时机。这时突然看见一只蝉，正在浓密的树荫里美美地休息而忘记了自身的安危；一只螳螂用树叶作隐蔽打算见机扑上去捕捉蝉，螳螂眼看即将得手而忘掉了自己形体的存在；那只怪鹊紧随其后认为那是极好的时机，眼看即将捕到螳螂而又丧失了自身的真性。庄子惊恐而警惕地说：“啊，世上的物类原本就是这样相互牵累、相互争夺的，两种物类之间也总是以利相召引！”庄子于是扔掉弹弓转身快步而去，看守栗园的人大惑不解地在后面追着责问。 庄子返回家中，整整三天心情很不好。弟子蔺且跟随一旁问道：“先生为什么这几天来一直很不高兴呢？”庄子说：“我留意外物的形体却忘记了自身的安危，观赏于混浊的流水却迷惑于清澈的水潭。而且我从老聃老师那里听说：‘每到一个地方，就要遵从那里的习惯与禁忌。’如今我来到雕陵栗园便忘却了自身的安危，奇异的怪鹊碰上了我的额头，游玩于果林时又丧失了自身的真性，管园的人不理解我又进而侮辱我，因此我感到很不愉快。” 阳朱到宋国去，住在旅店里。旅店主人有两个妾，其中一个漂亮，一个丑陋，可是长得丑陋的受到宠爱而长得漂亮的却受到冷淡。阳朱问他的缘故，年青的店主回答：“那个长得漂亮的自以为漂亮，但是我却不觉得她漂亮；那个长得丑陋的自以为丑陋，但是我却不觉得他丑陋。”阳子转对弟子说：“弟子们记住！品行贤良但却不自以为具有了贤良的品行，去到哪里不会受到敬重和爱戴啊！”\n"},{"id":155,"href":"/posts/literature/%E5%B7%A7%E8%A8%80/","title":"巧言","section":"文学","content":"悠悠昊天，曰父母且。无罪无辜，乱如此幠。昊天已威，予慎无罪。昊天大幠，予慎无辜。 乱之初生，僭始既涵。乱之又生，君子信谗。君子如怒，乱庶遄沮。君子如祉，乱庶遄已。 君子屡盟，乱是用长。君子信盗，乱是用暴。盗言孔甘，乱是用餤。匪其止共，维王之邛。 奕奕寝庙，君子作之。秩秩大猷，圣人莫之。他人有心，予忖度之。跃跃毚兔，遇犬获之。 荏染柔木，君子树之。往来行言，心焉数之。蛇蛇硕言，出自口矣。巧言如簧，颜之厚矣。 彼何人斯？居河之麋。无拳无勇，职为乱阶。既微且尰，尔勇伊何？为犹将多，尔居徒几何？\n译文： 高高远远那苍天，如同人之父与母。没有罪也没有过，竟遇大祸难免除。苍天已经大发威，但我确实没错处。苍天不察太疏忽，但我确实是无辜。 祸乱当初刚生时，谗言已经受宽容。祸乱再次发生时，君子居然也听从。君子闻谗如怒责，祸乱速止不严重；君子如能任贤明，祸乱难成早已终。 君子屡次立新盟，祸乱因此便增长。君子相信那盗贼，祸乱因此势暴狂。盗贼谗人话甜蜜，祸乱因此得滋养。谗人哪能尽职守，只能为王酿灾殃。 巍然宫室与宗庙，君子将它来建起。典章制度有条理，圣人将它来订立。他人有心想谗毁，我能揣测能料及。蹦跳窜行那狡兔，遇上猎狗被击毙。 娇柔袅娜好树木，君子自己所栽培。往来流传那谣言，心中辨别识真伪。夸夸其谈说大话，口中吐出力不费。巧言动听如鼓簧，厚颜无耻行为卑。 究竟那是何等人？居住河岸水草边。没有勇力与勇气，只为祸乱造机缘。腿上生疮脚浮肿，你的勇气哪里见？诡计总有那么多，你的同伙剩几员？\n"},{"id":156,"href":"/posts/literature/%E5%B8%95%E9%87%91%E6%A3%AE%E5%AE%9A%E5%BE%8B/","title":"帕金森定律","section":"文学","content":"帕金森定律（Parkinson\u0026rsquo;s Law）是官僚主义或官僚主义现象, 官场病、组织麻痹病、大企业病的一种别称，被称为二十世纪西方文化三大发现之一。也可称之为“官场病”、“组织麻痹病”或者“大企业病”，源于英国著名历史学家诺斯古德·帕金森1958年出版的《帕金森定律》一书的标题。帕金森定律常常被人们转载传诵，用来解释官场的形形色色。帕金森在书中阐述了机构人员膨胀的原因及后果：一个不称职的官员，可能有三条出路，第一是申请退职，把位子让给能干的人；第二是让一位能干的人来协助自己工作；第三是任用两个水平比自己更低的人当助手。这第一条路是万万走不得的，因为那样会丧失许多权利；第二条路也不能走，因为那个能干的人会成为自己的对手；看来只有第三条路最适宜。于是，两个平庸的助手分担了他的工作，他自己则高高在上发号施令，他们不会对自己的权利构成威胁。两个助手既然无能，他们就上行下效，再为自己找两个更加无能的助手。如此类推，就形成了一个机构臃肿，人浮于事，相互扯皮，效率低下的领导体系。帕金森得出结论：在行政管理中，行政机构会像金字塔一样不断增多，行政人员会不断膨胀，每个人都很忙，但组织效率越来越低下。这条定律又被称为“金字塔上升”现象。\n出现背景\r#\r\r诺斯古德·帕金森，英国历史学博士，曾在哈佛大学担任教授。1957年，他在马来西亚一个海滨度假时，悟出了一个定律，后来他将自己思考的结果发表在伦敦的《经济学家》期刊上，一举成名。《帕金森定律》一书出版以后，被翻译成多国语言，在美国更是长踞畅销书排行榜榜首\n产生条件\r#\r\r帕金森定律要发生作用，必须同时满足下面四个缺一不可条件： 第一：必须要有一个组织，这个组织必须有其内部运作的活动方式，其官员人浮于事，节后不能进入状态 官员人浮于事，节后不能进入状态 中管理要在这个组织中占有一定的地位。这样的组织很多，大的来讲，各种行政部门；小的来讲，只有一个老板和一个雇员的小公司，都存在着管理的组织。\n第二：寻找助手以达到自己目的的不称职的管理者本身不具有对权力的垄断性。这就是说权力对这个管理者而言，可能会因为做错某件事情或者其他人事的原因而轻易丧失。这个条件是不可少的，否则就不能解释何以要找两个不如自己的人做助手而不选择一个比自己强的人，这样也就不会产生“鲜花”插在 “牛粪”上的现象。\n第三：这个管理者能力极其平庸，他在组织中的角色扮演不称职，如果称职就不必寻找助手，否则就不能解释他何以要找几个助手来协助。\n第四：这个组织一定是一个不断自我要求完善的组织，正因为如此，才能不断地吸收新人来补充管理队伍，也才能符合帕金森关于人员编制增长的公式。\n可见帕金森定律，必须在一个拥有管理职能，不断追求完善的组织中，担负着和自身能力不相匹配的平庸的管理角色]，且不具备权力垄断的人群中才起作用。那么反弹琵琶，一个没有管理职能的组织，比如网络虚拟学术组织，兴趣小组之类，不存在帕金森定律阐释的可怕顽症。一个不思进取，抱守陈规的组织，不必要引进新人，自然也没有帕金森定律的困扰。一个拥有绝对权力的人，他不害怕别人攫取权力，也不会去找比他平庸的人做助手。一个能够承担他的管理角色的人，没有必要找一个助手，也不存在帕金森定律的情况。\n具体定律\r#\r\r定律一 冗员增加原理：官员数量增加与工作量并无关系，而是由两个源动因帕金森定律中反映的官僚主义现象造成的。每一个官员都希望增加部属而不是对手（如“投票”）；官员们彼此为对方制造工作（如行政审批，工商、税务、审计、公安，既得利益驱使）\n定律二 中间派决定原理：中间派是指对决定的内容不十分清楚的、意志薄弱、耳朵不大灵光的人，他们在组织的“票决制”议程中具有举足轻重的作用。为了争取中间派的支持，双方颇费心机进行争取，特别是双方势均力敌的情况下。所以，不是竞争对手而是中间派成了主角。\n定律三 鸡毛蒜皮定律：大部分官员由不懂得百万、千万元而只懂得千元的人组成，以至于讨论各种财政议案所费的时间与涉及的金额呈反比，即涉及的金额越大，讨论的时间越短，反之时间则越长，越是鸡毛蒜皮的事情越花费很多时间。\n定律四 无效率系数：由于复杂的利益关系，决策性委员会多的非必要成员愈来愈多，以至于会议开始变质，变得效率低下。于是，不得不在委员会重新设立核心决策委员会或核心决策团体。[6]定律五 人事遴选庸才：人们设计了许多的人事遴选方法，但大部分测试都是徒劳无功的，最终不得不靠偶然性标准遴选。\n定律六\n办公场合的豪华程度与机关的事业和效率呈反比：事业处于成长期的机关一般没有足够的兴趣和时间设计完美无缺的总部。所以，“设计完美乃是凋零的象征”，“完美就是结局，结局就是死亡”。[5]定律七 鸡尾酒会公式：会议与鸡尾酒会（饭局）同在，不同重要性的人物参加鸡尾酒会，会在不同的时间出现，并站在不同的位置上。把会场从左到右分为A-F六段，从进门处到最远端分为1-8八段，则可划分出48个区域；在假定酒会开始的时间为H，且最后一名客人离开的时间是最初一名客人进场后2小时20分钟，则，重要人物都会在H+75至H+90的时间在E/7区域集合，最重要的人物自然会在其中。\n定律八 嫉妒症（分三个时期）：在嫉妒症流行的机关里，高级主管辛苦而迟钝，中层干部勾心斗角，底层人员垂头丧气而不务正业。 第一阶段，出现了既无能又好嫉妒的人物，即患上了“庸妒症（平庸而嫉妒）”； 第二阶段，这些庸妒症患者不幸进入或原本就在高层，尽一切可能手段排斥比自己强的人，拒绝提升能力强的人；“愚蠢比赛”； 第三阶段，机关仿佛被喷了DDT，凡才智者一概不得入内，机关病入膏肓，此时的机关已经无药可救了。[5]定律九 财不外露。\n定律十 退休混乱（50岁现象）：一般退休的年龄是R，在前3年（R-3）人的精力会开始减退；问题在于如何挑选合适的接替者，工作表现越优秀，任职时间越长，越难寻得合适的接替者，而在位者总会设法阻止职位较低的人接近自己的职位，以至不得不延长自己的退休时间。\n举例分析 帕金森还发现，在一个组织中，机构和人员的增加并不完全来自现实工作的需要，而是有它自身的需要，有它自身的法则。管理活动本身会制造工作，增加人手会制造出功能重叠、互相扯皮的管理体系，从而使工作目标不明确、不紧凑、进而导致工作效率低下。这是帕金森定律中最著名的阐述，概括为： “雇员的数量和实际工作量之间根本不存在任何联系。”[8]帕金森举例说：当官的A君感到工作很累很忙时，一定要找比他级别和能力都低的C先生和D先生当他的助手，把自己的工作分成两份分给C、D，自己掌握全面。C 和D还要互相制约，不能和自己竞争。当C工作也累也忙时，A就要考虑给C配二名助手；为了平衡，也要给D配两名助手，于是一个人的工作就变成七个人干，A 君的地位也随之抬高。当然，七个人会给彼此制造许多工作，比如一份文件需要七个人共同起草圈阅，每个人的意见都要考虑、平衡，绝不能敷衍塞责，下属们产生了矛盾，他要想方设法解决；升级调任、会议出差、恋爱插足、工资住房、培养接班人……哪一项不需要认真研究，工作愈来愈忙，甚至七个人也不够了……\n至上而下，一级比一级庸人多，产生出机构臃肿的庞大管理机构。由于对于一个组织而言，管理人员或多或少是注定要增长的。那么这个帕金森定律，注定要起作用。也就是有这样一个公式：X=[100(2K^M+L)/yn]100%，其中K表示一个要求派助手从而达到个人目的人。从这个人被任命一直到他退休，这期间的年龄差别用L来表示。M是部门内部行文通气而耗费的劳动时数。N是被管理的单位。用这个公式求出的X就是每年需要补充的新职工人数。数学家们当然懂得，要找出百分比只要用X乘100,再除以上一年的总数Y就可以了。不论工作量有无变化，用这个公式求出来的得数总是处在5.17-6.56%之间。显然，如此类推，就形成了一个机构重叠、人浮于事、互相扯皮、效率低下的领导体系。\n作用意义\r#\r\r1.帕金森定律是[时间管理中的一个概念。\n2.帕金森定律表明：只要还有时间，工作就会不断扩展，直到用完所有的时间。\n3.帕金森定律是帕金森为揭露和嘲讽英国政治社会制度中官僚主义组织结构的弊端而提出的。\n4.帕金森定律是帕金森在对组织机构的无效活动进行调查和分析中提出的关于组织机构臃肿低效的形成原因的定律。\n警示作用\r#\r\r帕金森定律说明这样一个道理：不称职的行政首长一旦占据领导岗位，庞杂的机构和过多的冗杂便不可避免，庸人占据着高位的现象也不可避免，整个行政管理系统就会形成恶性膨胀，陷入难以自拔的泥潭。\n宁夏西海固地区同心县，曾经是以“苦甲天下”而闻名的，但就是在那里，这种帕金森现象十分常见，在同心县部分干部违法乱纪，有能力的人才得不到重用，而那些能力平庸的人又大量超编进入行政机构，致使这个国家级贫困县吃“ 皇粮”的人数畸形膨胀。冗员吃空了财政预算、补贴，就连专项资金也被挪用……这种“贫困的腐败”，引发了一连串的咄咄怪事——在这个仅有33万人口的贫困县里，吃“皇粮”者高达1.1万人，全县超编人员高达2800多人。让人匪夷所思的是，在这支超编大军中，有大批“拿着俸禄不上朝”的”挂职干部”，轮流上班的“轮岗干部”， 10来岁的“娃娃干部”，四五岁的“学龄前儿童干部”。县烈士陵园只有3座墓碑，但却供养着20名管理人员。机构、人员过多过滥而造成的效率低下，几乎成了一些地方的通病，而少数“懒和尚”当住持而产生的“食客者众”，更成了这些部门的“痼疾”。\n在历史上，朱元璋以疯狂屠杀功臣元勋著称。对于这种疯狂，后世最有代表性的解释是，朱元璋看到皇太子懦弱，担心自己死后强臣压主，所以事先消除隐患。有一则轶闻可为佐证：有一天，皇太子劝说父亲不要杀人太多，朱元璋把一根长满了刺的棍子丢在地上，命皇太子用手拾起来。皇太子一把抓住刺棍，结果给扎破了手掌，并连声呼痛。朱元璋说：“我事先为你拔除棍上的毒刺，你难道不明白我的苦心吗?”朱元璋的逻辑很简单：作为管理者，如果自己强，就成为所有分工的权威；如果自己弱，那就让所有分工都没有权威。看得出来，他根本没有意识到协作权威的存在和价值。 许多管理者赞同朱元璋逻辑。他们要么投入巨大精力以获取和维持分工权威，要么只欢迎对他的分工权威构不成挑战的人。帕金森定律，就是朱元璋逻辑的一个西方残缺版本。在我看来，一个管理者，如果不明白协作权威的存在和价值，那么，无论他是“不称职的官员”还是“能干的人”，都算不上真正的管理者。因为，他发挥不出分工协作的力量。 朱元璋逻辑的本质是什么？一元思维。所谓“一元思维”，就是在一个组织内，权威有且只能有一个。一元思维的人深信“一山不容二虎”。他们相信组织需要且只需要一个权威。当没有自信时，他们会相信并拥护他人成为那个唯一。当自信满满时，他们会理所应当地将自己视为那个唯一。\n帕金森详细研究了1914年到1954年间英国海军舰艇、官兵数量与海军部官员人数间的逆向变化，发现行政机构的膨胀与海军事业的发展没有必然联系，因此讥讽这种“宏伟的陆地海军”现象。而在“委员和委员会”一节中，帕金森归纳数十个国家内阁组成情况，得出5人内阁最为理想，9人内阁必然有人仅是点缀，20人内阁难免派系之争，超过20人则阁员人数再难控制（会议本来就是浪费时间，与人数多少无关）的结论。帕金森同时提出一个非常有趣的“低效能系数”，即一个委员会的成员超过20人或21人，组织的工作效率开始降低。这一观点对许多官方的、半官方的、民间的委员会、理事会、研究会、学会等组织应该有所借鉴。\n权力的危机感，是产生帕金森现象的根源。恩格斯曾经说过：“自从阶级社会产生以来，人的恶劣的情欲、贪欲和权势欲就成为历史发展的杠杆。”人作为社会性和动物性的复合体，因利而为，是很正常的行为。假设他的既有利益受到威胁，那么本能会告诉他，一定不能丧失这个既得利益，这也正是帕金森定律起作用的内因。一个既得权力的拥有者，假如存在着权力危机，不会轻易让渡自己的权力，也不会轻易的给自己树立一个对手。在不害人为标准的良心监督下，会选择两个不如自己的人作为助手，这种行为是自然而然，无可谴责。\n帕金森定律并非是老调重弹，缺乏新意，这个定律把一些行政机关用人现状刻画得入木三分。一些心术不正的首长，以权谋私，“举贤不避亲”，竟把那些缺乏基本业务素质的亲属故旧，或欺上瞒下，或弄虚作假，或交换提携弄到自己所任职把掌的部门。于是乎，“七姑八舅”一个个执掌了“帅印”，亲属嫡系一个个占据着要害岗位，而一个个有能力的干才，或因有些“野心”，或因有些真本领“气焰”有点“嚣张”，而受到轻用、不用，甚至倍受压制，其结果，干的不如看的，看的不如捣蛋的。一个私欲膨胀的行政首长，为一个个低能儿开启了大门，却把一批批有为之人拒之门外，于是平庸战胜了才俊，“牛粪”得到了“鲜花”。\n概念定性\r#\r\r管理学者孙继滨在《卓有成效：管理者的职业习惯》一书中认为，**“帕金森定律”是一元思维的表现方式之一，其本质是管理者对分工和协作这两种权威的混淆。**他对帕金森定律做出了如下阐述： 对于管理来说，权威是必须的。权威又可以分为两种，分工权威和协作权威。我们知道，协作是建立在多分工基础上的。这就是说，一个协作权威，总会对应多个分工权威。举例来说，在刘邦团队中，刘邦就是协作权威，萧何张良韩信就是分工权威。 本书以为，管理者可以不是分工权威，但是，管理者一定要是协作权威。对于管理者来说，权威认同是必须的。同时，需要明确指出的是，真正必须的权威认同，是协作权威认同。真正的管理者，应该行使的是协作权威，而不是分工权威。在这方面，刘邦是值得效仿的光辉榜样。 令人不安的是，绝大多数人分不清协作权威和分工权威的不同。他们常常将两种权威混为一谈，或者严重低估协作权威的价值，或者试图鱼和熊掌兼得。 在职场上，相当多的管理者具有突出的一元思维行为特征。他们或者投入巨大精力以维持自己的技术优势，或者只欢迎对他的技术权威构不成挑战的团队成员。这似乎不难理解。管理者的前身是技术者。成为技术权威是他们有所作为的最好证明，是他们建立自尊形象的必然要求。多年的专业奋斗之下，“分工权威”的自我认同便瓜熟蒂落水到渠成了。幸运的是，多年的专业奋斗，让他们走到了管理者的位置；不幸的是，“分工权威”的自我认同，让他们迟迟进入不了“协作权威”的角色。\n"},{"id":157,"href":"/posts/literature/%E5%B9%B8%E5%AD%98%E8%80%85%E5%81%8F%E5%B7%AE/","title":"幸存者偏差","section":"文学","content":"幸存者偏差（Survivor bias），另译为 “生存者偏差” 或 “存活者偏差”，是一种常见的逻辑谬误。指的是只能看到经过某种筛选而产生的结果，而没有意识到筛选的过程，因此忽略了被筛选掉的关键信息。日常表达为 “沉默的数据”、“死人不会说话” 等。可以用对照试验和贝叶斯公式来消除幸存者偏差。\n"},{"id":158,"href":"/posts/literature/%E5%BD%BC%E5%BE%B7%E5%8E%9F%E7%90%86/","title":"彼德原理","section":"文学","content":"《彼得原理》劳伦斯·彼得的著作。为我们清楚地描绘了职业晋升的瓶颈问题，他指出，每个人在层级组织里都会得到晋升，直到不能胜任为止。换句话说，一个人，无论你有多大的聪明才智，也无论你如何努力进取，总会有一个你胜任不了的职位在等待着你，并且你一定会达到那个位置 在各种组织中，雇员总是趋向于晋升到其不称职的地位。彼得原理有时也被称为“向上爬”原理。 这种现象在现实生活中无处不在：一名称职的教授被提升为大学校长后，却无法胜任；一个优秀的运动员被提升为主管体育的官员，而无所作为。 对一个组织而言，一旦相当部分人员被推到其不称职的级别，就会造成组织的人浮于事，效率低下，导致平庸者出人头地，发展停滞。 因此，这就要求改变单纯的“根据贡献决定晋升”的企业员工晋升机制，不能因某人在某个岗位上干得很出色，就推断此人一定能够胜任更高一级的职务。将一名职工晋升到一个无法很好发挥才能的岗位，不仅不是对本人的奖励，反而使其无法很好发挥才能，也给企业带来损失。\n"},{"id":159,"href":"/posts/literature/%E6%88%B4%E6%98%8E%E7%8E%AF%E7%90%86%E8%AE%BApdca/","title":"戴明环理论 Pdca","section":"文学","content":"美国质量管理专家戴明博士首先提出的，它是全面质量管理所应遵循的科学程序。全面质量管理活动的全部过程，就是质量计划的制订和组织实现的过程，这个过程就是按照PDCA循环，不停顿地周而复始地运转的。\nPDCA是英语单词Plan(计划)、Do(执行)、Check(检查)和Act(纠正)的第一个字母\n"},{"id":160,"href":"/posts/literature/%E6%94%AF%E5%85%AC%E5%A5%BD%E9%B9%A4/","title":"支公好鹤","section":"文学","content":"支公好鹤，住剡东峁山，有人遗其双鹤，少时翅长欲飞。支意惜之，乃铩其翮。鹤轩翥不复能飞，乃反顾翅，垂头视之，如有懊丧意。林曰：“既有凌霄之姿，何肯为人作耳目近玩？”养令翮成，置使飞去。\n支道林特别喜欢养鹤。他在浙江东部的峁山住的时候，有人送了他一对小鹤。过了一些时候，小鹤渐渐长出羽翼，时时想起飞。支公舍不得鹤飞走，就剪断了鹤的羽根。鹤想举翅高飞却没办法再飞，于是回头看自己的翅膀，然后低下头来，看上去就像人一样沮丧。支道林说：“鹤生来是应该翱翔在天空的，哪里会甘心当人的宠物被眷养玩耍！”经过一段时间调养，等到鹤的羽毛重新长出来，让它们飞走了\n"},{"id":161,"href":"/posts/literature/%E6%95%8C%E6%88%92/","title":"敌戒","section":"文学","content":"皆知敌之仇，而不知为益之尤；皆知敌之害，而不知为利之大。 秦有六国，兢兢以强；六国既除，訑訑乃亡。晋败楚鄢，范文为患；厉之不图，举国造怨。孟孙恶臧，孟死臧恤，“药石去矣，吾亡无日”。智能知之，犹卒以危，矧今之人，曾不是思。 敌存而惧，敌去而舞，废备自盈，祗益为愈。敌存灭祸，敌去召过。有能知此，道大名播。惩病克寿，矜壮死暴；纵欲不戒，匪愚伊耄。我作戒诗，思者无咎\n人人都知道敌人有作为自己仇敌的一面，却不一定懂得对自己还有有益的一面；人人都知道敌人对自己有危害的一面，却不一定懂得对自己还有有利的一面。 秦国有六国为敌，因此能够兢兢业业，使国家强盛起来；六国已经除灭之后，秦朝骄傲自得，不久就灭亡了。晋国军队大败楚军于鄢陵，晋国大夫范文子感到忧虑。晋厉公不考虑范文子应知戒惕的意见，越发骄横，搞得全国上下冤声沸腾，最后被人杀死。鲁国大夫孟孙速憎恨大夫臧孙纥，孟孙速死后，臧孙纥感到忧虑；臧孙纥去孟孙速家里吊丧，哭得很悲伤，说孟孙速憎恶我，这就好像是能够帮助我治病的良药，现在孟孙速死了，没有了药物，我也活不长了。明智的人懂得这个道理，最终还可能遇到危害；何况当今某些人根本不去思量这个道理呢！ 敌人存在就害怕，敌人没了就得意忘形，解除戒备，自满自足，这恰恰会造成更大的祸患。敌人存在，能够提高自己的警惕，可以免除祸患；敌人不存在了，思想懈怠，反而会招致错误。能够懂得这个道理的人，他的德行就会光大，名声就会远扬。能够预防疾病的人，才能够长寿；自恃强壮的人，容易死于暴病；纵情逞欲而不知警戒的人，不是傻瓜就是混蛋。我写下这篇《敌戒》诗，能够思考其中道理的人可以免除过错和灾祸。\n有道是：祸兮福之所倚；福兮祸之所伏\n"},{"id":162,"href":"/posts/literature/%E6%97%A0%E5%BF%83%E4%B9%8B%E5%AD%A6/","title":"无心之学","section":"文学","content":"之所以很多学习不能持续太久，我猜测是学习的时候人太想把东西记住，感觉当时没理解和记忆的总想反复使其记住，越是重要更是如此，给大脑过多压力，大脑的本能遇到压力就会抗拒，体现为人的烦躁，昏昏欲睡。我尝试了几次看东西不想着记住，一遍过去不回头，如此我看了很久也不觉得压抑。 可以把这种状态称为无心之学，人在生活中很多事物我们并没有刻意去记忆，遭遇多了自然而然的熟悉，人也不至于讨厌生活，感觉有压力多半是强求的东西过多了，心力承受不了。 跑步跑的越快，坚持的时间越短，最好的状态是和自身能量输出的平衡，行的最远的还是步行。 强求记住，劳心伤神，坚持困难也打击信心，学不成是必然的，经过磨练的人可以比常人更有耐力，大概就是这样的。\n"},{"id":163,"href":"/posts/literature/%E6%B4%AA%E8%8C%83/","title":"洪范","section":"文学","content":"武王胜殷，杀受，立武庚，以箕子归。作《洪范》。 惟十有三祀，王访于箕子。王乃言曰：“呜呼！箕子。惟天阴骘下民，相协厥居，我不知其彝伦攸叙。” 箕子乃言曰：“我闻在昔，鲧堙洪水，汩陈其五行。帝乃震怒，不畀洪范九畴，彝伦攸斁。鲧则殛死，禹乃嗣兴，天乃锡禹洪范九畴，彝伦攸叙。 初一曰五行，次二曰敬用五事，次三曰农用八政，次四曰协用五纪，次五曰建用皇极，次六曰乂用三德，次七曰明用稽疑，次八曰念用庶征，次九曰向用五福，威用六极。 一、五行：一曰水，二曰火，三曰木，四曰金，五曰土。水曰润下，火曰炎上，木曰曲直，金曰従革，土爰稼穑。润下作咸，炎上作苦，曲直作酸，従革作辛，稼穑作甘。 二、五事：一曰貌，二曰言，三曰视，四曰听，五曰思。貌曰恭，言曰从，视曰明，听曰聪，思曰睿。恭作肃，从作乂，明作晢，聪作谋，睿作圣。 三、八政：一曰食，二曰货，三曰祀，四曰司空，五曰司徒，六曰司寇，七曰宾，八曰师。 四、五纪：一曰岁，二曰月，三曰日，四曰星辰，五曰历数。 五、皇极：皇建其有极。敛时五福，用敷锡厥庶民。惟时厥庶民于汝极。锡汝保极：凡厥庶民，无有淫朋，人无有比德，惟皇作极。凡厥庶民，有猷有为有守，汝则念之。不协于极，不罹于咎，皇则受之。而康而色，曰：‘予攸好德。’汝则锡之福。时人斯其惟皇之极。无虐茕独而畏高明，人之有能有为，使羞其行，而邦其昌。凡厥正人，既富方谷，汝弗能使有好于而家，时人斯其辜。于其无好德，汝虽锡之福，其作汝用咎。无偏无陂，遵王之义；无有作好，遵王之道；无有作恶，尊王之路。无偏无党，王道荡荡；无党无偏，王道平平；无反无侧，王道正直。会其有极，归其有极。曰：皇极之敷言，是彝是训，于帝其训，凡厥庶民，极之敷言，是训是行，以近天子之光。曰：天子作民父母，以为天下王。 六、三德：一曰正直，二曰刚克，三曰柔克。平康，正直；强弗友，刚克；燮友，柔克。沈潜刚克；高明柔克。惟辟作福，惟辟作威，惟辟玉食。臣无有作福、作威、玉食。臣之有作福、作威、玉食，其害于而家，凶于而国。人用侧颇僻，民用僭忒。 七、稽疑：择建立卜筮人，乃命卜筮。曰雨，曰霁，曰蒙，曰驿，曰克，曰贞，曰悔，凡七。卜五，占用二，衍忒。立时人作卜筮，三人占，则従二人之言。汝则有大疑，谋及乃心，谋及卿士，谋及庶人，谋及卜筮。汝则従，龟従，筮従，卿士従，庶民従，是之谓大同。身其康强，子孙其逢吉，汝则従，龟従，筮従，卿士逆，庶民逆，吉。卿士従，龟従，筮従，汝则逆，庶民逆，吉。庶民従，龟従，筮従，汝则逆，卿士逆，吉。汝则従，龟従，筮逆，卿士逆，庶民逆，作内吉，作外凶。龟筮共违于人，用静吉，用作凶。 八、庶征：曰雨，曰旸，曰燠，曰寒，曰风。曰时五者来备，各以其叙，庶草蕃庑。一极备，凶；一极无，凶。曰休征：曰肃，时雨若；曰乂，时旸若；曰晰，时燠若；曰谋，时寒若；曰圣，时风若。曰咎征：曰狂，恒雨若；曰僭，恒旸若；曰豫，恒燠若；曰急，恒寒若；曰蒙，恒风若。曰王省惟岁，卿士惟月，师尹惟日。岁月日时无易，百谷用成，乂用明，俊民用章，家用平康。日月岁时既易，百谷用不成，乂用昏不明，俊民用微，家用不宁。庶民惟星，星有好风，星有好雨。日月之行，则有冬有夏。月之従星，则以风雨。 九、五福：一曰寿，二曰富，三曰康宁，四曰攸好德，五曰考终命。六极：一曰凶、短、折，二曰疾，三曰忧，四曰贫，五曰恶，六曰弱。”\n"},{"id":164,"href":"/posts/literature/%E6%B8%85%E5%B8%9D%E9%80%80%E4%BD%8D%E8%AF%8F%E4%B9%A6/","title":"清帝退位诏书","section":"文学","content":"奉旨朕钦奉隆裕皇太后懿旨： 前因民军起事，各省相应，九夏沸腾，生灵涂炭，特命袁世凯遣员与民军代表讨论大局，议开国会，公决政体。两月以来，尚无确当办法，南北暌隔，彼此相持，商辍於途，士露於野，徒以国体一日不决，故民生一日不安。今全国人民心理，多倾向共和，南中各省既倡议于前，北方诸将亦主张于后，人心所向，天命可知，予亦何忍因一姓之尊荣，拂兆民之好恶？是用外观大势，内审舆情，特率皇帝，将统治权公诸全国，定为共和立宪国体，近慰海内厌乱望治之心，远协古圣天下为公之义 。袁世凯前经资政院选举为总理大臣，当兹新旧代谢之际，宜有南北统一之方，即由袁世凯以全权组织临时共和政府，与民军协商统一办法，总期人民安堵，海宇乂安，仍合满、汉、蒙、回、藏五族完全领土，为一大中华民国，予与皇帝得以退处宽闲，优游岁月，长受国民之优礼，亲见郅治之告成，岂不懿欤？钦此。\n"},{"id":165,"href":"/posts/literature/%E7%9C%81%E5%BF%83%E5%BD%95/","title":"省心录","section":"文学","content":"礼义廉耻，可以律己，不可以绳人。 律己则寡过，绳人则寡合，寡合则非涉世之道。故君子责己，小人责人。 为善易，避为善之名难；不犯人易，犯而不校难。涉世应物，有以横逆加我者，譬犹行草莽中，荆棘之在衣，徐行缓解而已，所谓荆棘者，亦何心哉！如是则方寸不劳，而怨可释。 责人者不全交，自恕者不改过。自满者败，自矜者愚，自贼者害。多言获利，不如默而无害。 务名者害其身，多财者祸其后。善恶报缓者非天网疏，是欲成君子而灭小人也。祸福者天地所以爱人也，如雷雨雪霜，皆欲生成万物。故君子恐惧而畏，小人侥幸而忽。畏其祸则福生，忽其福则祸至，《传》所谓「祸福无门，惟人所召」也。 必出世者，方能入世，不则世缘易堕；必入世者，方能出世，不则空趣难持。 士君子尽心利济，使海内少他不得，则天亦少他不得，即此便是立命。 如今休去便休去，若觅了时了无时。 事有急之不白者，宽之或自明，毋躁急以速其忿；人有切之不从者，纵之或自化，毋操切以益其顽。 人胜我无害，彼无蓄怨之心；我胜人非福，恐有不测之祸。 士君子贫不能济物者，遇人痴迷处，出一言提醒之；遇人急难处，出一言解救之，亦是无量功德。 情尘既尽，心镜遂明，外影何如内照；幻泡一消，性珠自朗，世瑶原是家珍。 凡夫迷真而逐妄，智慧化为识神，譬之水涌为波，不离此水；圣人悟妄而归真，识神转为智慧，譬之波平为水，当体无波。 常有小不快事，是好消息。若事事称心，即有大不称心者在其后，知此理可免怨尤。 勿以人负我而隳为善之心，当其施德，第自行吾心所不忍耳，未尝责报也。纵遇险徒，止付一笑。 正人之言，明知其为我也，感而未必悦；邪人之言，明知其佞我也，笑而未必怒。于此知从善之难。 面有点污，人人匿笑，而已不知，有告之者，无不忙忙拭去。若曰：点污在我，何与若事？必无此人情。至告以过者，何独不然？ 事后论人，局外论人，是学者大病。事后论人，每将智人说得极愚；局外论人，每将难事说得极易，二者旨从不忠不恕生出。 读古人书，与贤人交游，最不可苟为同，又不可苟为异。二者之失，总是胸无定力，学问中便有时势趋附，非谄即矫耳。 人于横逆来时，愤怒如火，忽一思及自己原有不是，不觉怒情燥火涣然冰消。乃知自反二字真是省事、养气、讨便宜、求快乐最上法门，切莫认作道学家虚笼头语看过。 人作事极不可迂滞，不可反复，不可烦碎；代人作事又极要耐得迂滞，耐得反复，耐得烦碎。 己所有者，可以望人，而不敢责人也；己所无者，可以规人，而不敢怒人也。故恕者推己以及人，不执己以量人。 能知足者，天不能贫；能无求者，天不能贱；能外形骸者，天不能病；能不贪生者，天不能死；能随遇而安者，天不能困；能造就人才者，天不能孤；能以身任天下后世者，天不能绝。\n"},{"id":166,"href":"/posts/literature/%E7%A8%B7%E4%B8%8B%E5%AD%A6%E5%AE%AB/","title":"稷下学宫","section":"文学","content":"稷下学宫是世界上最早的官办高等学府和我国最早的社会科学院、政府智库。 始建于齐桓公田午。位于齐国国都临淄(今山东省淄博市)稷门附近。 “稷”是齐国国都临淄城(今山东省淄博市)一处城门的名称。“稷下”即齐都临淄城的稷门附近，齐国君主在此设立学宫。故因学宫地处稷门附近而得名为“稷下学宫”(这与东汉时期的“鸿都门学”得名由来相同)。 稷下学宫是世界上第一所由官方举办、私家主持的特殊形式的高等学府。中国学术思想史上这场不可多见、蔚为壮观的“百家争鸣”，是以齐国稷下学宫为中心的，官学为黄老之学。它作为当时百家学术争鸣的中心园地，有力地促成了天下学术争鸣局面的形成。 在此期间，学术著作相继问世。有《宋子》、《田子》、《蜗子》、《捷子》等，今已亡佚。另《管子》、《晏子春秋》、《司马法》、《周官》等书之编撰，亦有稷下之士的参与。由于不少人是善于把学术和政治结合起来游说当权者的能手，故在宣王时受上大夫称号之稷下士多达七十六人。稷下学宫的存在，曾为当时百家争鸣开创了良好的社会环境，促进了先秦时期学术文化的繁荣。\n"},{"id":167,"href":"/posts/literature/%E7%BA%AF%E7%99%BD%E4%B9%8B%E9%81%93/","title":"纯白之道","section":"文学","content":"有机械者必有机事，有机事者必有机心。机心存于胸中则纯白不备。纯白不备，则神生不定；神生不定者，道之所不载也。 执道者德全，德全者形全，形全者神全。神全者，圣人之道也。托生与民并行而不知其所之，汒乎淳备哉！功利机巧必忘夫人之心。若夫人者，非其志不之，非其心不为。虽以天下誉之，得其所谓，謷然不顾；以天下非之，失其所谓，傥然不受。天下之非誉，无益损焉，是谓全德之人哉！ 识其一，不知其二；治其内，而不治其外。夫明白太素，无为复朴，体性抱神，以游世俗。\n有了机械之类的东西必定会出现机巧之类的事，有了机巧之类的事必定会出现机变之类的心思。机变的心思存留在胸中，那么不曾受到世俗沾染的纯洁空明的心境就不完整齐备；纯洁空明的心境不完备，那么精神就不会专一安定；精神不能专一安定的人，大道也就不会充实他的心田。 持守大道的人德行才完备，德行完备的人形体才健全，形体健全的人精神才饱满。精神饱满方才是圣人之道。这样的人他们寄托形骸于世间，悠游自在而不知所往，淳和真朴，功利机巧必定不会放在他们这种人的心上。像那样的人，不同于自己的心志不会去追求，不符合自己的思想不会去做。即使让天下人都称誉他，称誉的言词合乎他的德行，他也孤高而不顾；即使让天下人都非议他，非议使其名声丧失，他也无动于衷不予理睬。天下人的非议和赞誉，对于他们既无增益又无损害，这就叫做德行完备的人啊！ 持守内心的纯一，心神不外分；修养内心，而不求治外在。那明澈白静到如此素洁，清虚无为回返原始的朴质，体悟真性持守精神，优游自得地生活在世俗之中。\n"},{"id":168,"href":"/posts/literature/%E8%83%86%E5%B0%8F%E9%AC%BC%E5%8D%9A%E5%BC%88/","title":"胆小鬼博弈","section":"文学","content":"胆小鬼博弈\r#\r\r斗鸡博弈(Chicken Game)其实是一种误译。Chicken在美国口语中是“懦夫”之意，Chicken Game本应译成懦夫博弈。不过这个错误并不算太严重，非要把chicken game叫作斗鸡博弈，也不是不可以。 模型中，两名车手向对方驱车而行，谁最先让开的一方被耻笑为“胆小鬼”（chicken），让另一方胜出，因此这博弈模型在英文中称为The Game of Chicken，但如果两人拒绝收掣，任由两车相撞，最终谁得无法得益。\n"},{"id":169,"href":"/posts/literature/%E8%87%AA%E6%88%91%E5%89%A5%E5%89%8A/","title":"自我剥削","section":"文学","content":"机会成本，边际成本，边际效用，生产可能曲线 收益与成本 收益最大化容易陷入自我剥削 没有利用好机会是浪费\n"},{"id":170,"href":"/posts/literature/%E8%89%BE%E6%A3%AE%E8%B1%AA%E5%A8%81%E5%B0%94%E5%91%8A%E5%88%AB%E6%BC%94%E8%AF%B4/","title":"艾森豪威尔：告别演说","section":"文学","content":"晚上好，我的美国同胞们。\n首先，我谨感谢电台和电视网络多年来给我的机会，将报道和信息带给我们的国家。我特别感谢他们今晚有机会向你们讲话。\n再过三天，在我爲我国服务半个世纪之后，随着总统的权威按传统的隆重仪式归属我的继任者，本人将卸下公职。……\n我们现在的日期距本世纪中点已过十年，这个世纪经历了大国之间四次大的战争，我们自己的国家卷入其中三次。尽管发生了这些大规模的战祸，当今美国乃是世界上最强大、最有影响、生産力最高的国家。我们自然爲此卓越成就感到自豪，但我们也意识到，美国的领导地位和威信不仅取决于我们举世无双的物质进步、财富和军事力量，而且取决于我们如何爲世界和平与人类福利使用我们的力量。\n\u0026hellip;\u0026hellip;\u0026hellip;\u0026hellip;\n纵观美国在自由政府体制上的探索历程，我们的基本目的始终是维护和平，促进人类进步，在人民中和国家之间增进自由权，提高尊严，宏扬正直的品质。追求较低的目标会辱没一个自由、有虔诚宗教信仰的民族。任何由于骄傲自大或理解力不强或缺乏奉献精神的失败都将在国内外给我们带来严重损害。\n走向这些崇高目标的进程一直受到现在正席卷全球的冲突的威胁。这种冲突迫使我们全神贯注，全力以赴。我们面对一种敌对的意识形态──具有世界性规模和无神论性质，目标残忍，手段阴险。不幸的是，它所造成的危险将长期存在。欲成功地对付它，所要求的与其说是危急关头感情上短暂的痛苦，毋宁说是作出牺牲以使我们能坚定踏实、任劳任怨地承担一场长期复杂斗争的重任──与自由共存亡。只有这样我们才能战胜一次又一次的挑衅，始终朝着世界持久和平和人类美好未来的方向前进。……\n我们的军队是维护和平必不可少的要素。我们的武装力量必须强大，随时准备投入行动，以使任何潜在的侵略者都不敢贸然以卵击石。\n我们今天的军事组织与我的任何一位和平时期前任所了解的，与第二次世界大战或朝鲜战争中的军人所了解的军事组织大相径庭。\n直至最近的一次世界性冲突之前、美国仍没有军事工业。美国的犁铧制造商们在必要时也能制造剑。但是现在我们不能再以临阵磨枪的方式承担国防上的风险；我们已被迫创建一个规模宏大的永久性军事工业。此外，350万男人和妇女直接服务于国防机构。我们每年在军事安全上的开支超过了美国所有的公司的纯收入。\n一支庞大的军队和一个大规模军事工业相结合，在美国是史无前例的。它的全部影响──经济的、政治的，甚至精神的──在每个城市、每座州议会大楼、每一联邦政府机构内都能感觉到。我们承认这种发展绝对必要，但我们不应忽视其重大的影响。它涉及我们的人力、资源、生活，乃至我们社会的结构。\n在政府各部门，我们必须警惕军事─工业联合体取得无法证明是正当的影响力，不论它这样追求与否。极不适当的权力恶性增长的可能性目前已经存在并将继续存在。\n我们决不能让这一联合体的势力危害我们的自由或民主进程。我们不应心存侥幸。只有警觉而明智的美国公民才能强迫庞大的工业和军事的国防机构与我们和平的手段和目标恰当配合，以使安全和自由并驾齐驱，同获成功。\n近几十年的技术革命与我们的工业─军事状况的巨大变化有相似之处，而且对这种巨大变化起了很大作用。\n在这场技术革命中，研究工作已趋于集中；它也变得更正规，更复杂，更昂贵。爲联邦政府而实施，由联邦政府实施，或在联邦政府指导下实施的研究工作份额正逐步增加。\n由联邦政府雇用而形成支配全国学者的局面，以及统一分配项目，统一控制财力，这种前景一直存在，而且应当引起严重关注。\n我们应该尊重科学研究和探索，但与此同时我们必须对这一同样严重的负面危险保持警惕，即政府政策本身可能沦爲一个科学──技术精英阶层的俘虏。\n治国之才的任务，是在我们民主制度的原则范畴内，塑造、平衡和融合这些和其它新旧力量──始终以实现我们自由社会的最高目标爲目的。\n另一个保持平衡的因素涉及时间这一要素。当我们展望社会的未来时，我们──你、我和我国政府──必须避免一种只顾今日生活的冲动，不应爲了我们自己的舒适和便利巧取豪夺明天的宝贵资源。我们不可能以孙儿辈的物质财富作抵押，而又不冒使他们丧失政治和精神遗産的风险。我们要让民主代代相传，它不该成爲明天无力还债的鬼魂。\n展望有待书写的未来历史长卷，美国深知我们这个越来越小的世界决不应变成一个充满恐惧和仇恨的可怕的群体，相反，它应成爲一个相互信任、相互尊重的光辉的联盟。\n这样一个联盟必定是平等国家间的联盟。最弱小的国家一定以与我们相同的自信心来到会议桌旁，和我们一样受到我们的道德、经济和军事力量的保护。那会议桌虽然留下历史坎坷的累累伤痕，但我们不能将它抛弃以换来战场的惨剧。\n以相互尊敬和信任实行裁军仍是一项迫切任务。我们必须一起学习怎样不用武力，而是以理智和公正的意图去解决纷争。因爲裁军的紧迫性如此明显突出，我承认我是怀着某种失望的心情卸下我的总统职责的。作爲一个目睹过战争的恐怖及其难以愈合的创伤的人──深知另一场战争会彻底毁掉历经数千年缓慢而又艰苦地建成的人类文明──我但愿自己今晚能说：持久和平已遥遥在望。\n幸好我可以说，已经避免发生战争了。朝我们的终极目标已迈开坚实的步伐。但是任重而道远。作爲一个普通公民，我将始终不渝地爲推动世界沿着这条道路前进贡献一份绵薄。\n"},{"id":171,"href":"/posts/literature/%E8%A1%8C%E6%94%BF%E5%8C%BA%E5%9F%9F%E7%94%B1%E6%9D%A5/","title":"行政区域由来","section":"文学","content":"我们看电视，学历史，听过各种地域名字，各种郡，州 中华四个个地域划分方式的背景：\n 宗法分封制度（汉之前） 郡县制（郡是秦朝至唐朝的行政区划名） 州县制（至清） 省，市，县 九州：豫州、青州、徐州、扬州、荆州、梁州、雍州、冀州、兖州。 东南为扬州，越也。南方为荆州，楚也。西方为雍州，秦也。北方为幽州，燕也  西汉十三州的范围等同於九州：\r#\r\r冀州∶河东郡、河内郡、魏郡、巨鹿郡、常山郡、清河郡、赵国、广平国、真定国、中山国、信都国、河间国 及涿郡、勃海郡、代郡、上谷郡、渔阳郡、右北平郡、辽西郡、辽东郡、玄菟郡、乐浪郡、广阳国 及太原郡、上党郡、云中郡、定襄郡、鴈门郡 兖州∶东郡、陈留郡、山阳郡、济阴郡、泰山郡、城阳国、淮阳国、东平国 青州∶平原郡、千乘郡、济南郡、齐郡、北海郡、东莱郡、菑川国、高密国、胶东国 徐州∶楚国、泗水国、广陵国、临淮郡、琅邪郡、东海郡 扬州∶庐江郡、九江郡、会稽郡、丹扬郡、豫章郡、六安国 及南海郡、郁林郡、苍梧郡、交趾郡、合浦郡、九真郡、日南郡 荆州∶南阳郡、南郡、江夏郡、桂阳郡、武陵郡、零陵郡、长沙国 豫州∶弘农郡、河南郡、颍川郡、汝南郡、沛郡、梁国、鲁国 梁州∶汉中郡、广汉郡、蜀郡、犍为郡、越嶲郡、益州郡、牂柯郡、巴郡、武都郡 雍州∶朔方郡、五原郡、上郡、西河郡、北地郡、及京兆尹、冯翊郡、扶风郡、 及陇西郡、金城郡、天水郡、安定郡、武威郡、张掖郡、酒泉郡、敦煌郡\n晋朝：\r#\r\r冀州：冀州、平州、幽州、并州 兖州：兖州 青州：青州 徐州：徐州 扬州：扬州、交州、广州 荆州：荆州 豫州：司州、豫州 梁州：梁州、益州、宁州 雍州：雍州、凉州、秦州\n隋朝：\r#\r\r冀州：信都郡、清河郡、魏郡、汲郡、河内郡、长平郡、上党郡、河东郡、绛郡、文城郡、临汾郡、龙泉郡、西河郡、离石郡、雁门郡、马邑郡、定襄郡、楼烦郡、太原郡、襄国郡、武安郡、赵郡、恒山郡、博陵郡、涿郡、上谷郡、渔阳郡、北平郡、安乐郡、辽西郡 兖州：东郡、东平郡、济北郡、武阳郡、渤海郡、平原郡 青州：北海郡、齐郡、东莱郡、高密郡 徐州：彭城郡、下邳郡、鲁郡、琅邪郡、东海郡 扬州：江都郡、钟离郡、淮南郡、弋阳郡、蕲春郡、庐江郡、同安郡、历阳郡、丹阳郡、宣城郡、毗陵郡、吴郡、会稽郡、馀杭郡、新安郡、东阳郡、永嘉郡、建安郡、遂安郡、鄱阳郡、临川郡、庐陵郡、南康郡、宜春郡、豫章郡、南海郡、龙川郡、义安郡、高凉郡、信安郡、永熙郡、苍梧郡、始安郡、永平郡、郁林郡、合浦郡、珠崖郡、宁越郡、交趾郡、九真郡、日南郡、比景郡、海阴郡、林邑郡 荆州：南郡、夷陵郡、竟陵郡、沔阳郡、沅陵郡、武陵郡、清江郡、襄阳郡、舂陵郡、汉东郡、安陆郡、永安郡、义阳郡、九江郡、江夏郡、澧阳郡、巴陵郡、长沙郡、衡山郡、桂阳郡、零陵郡、熙平郡 豫州：河南郡、荥阳郡、梁郡、谯郡、济阴郡、襄城郡、颍川郡、汝南郡、淮阳郡、汝阴郡、上洛郡、弘农郡、淅阳郡、南阳郡、淯阳郡、淮安郡 梁州：汉川郡、西城郡、房陵郡、清化郡、通川郡、宕渠郡、汉阳郡、临洮郡、宕昌郡、武都郡、同昌郡、河池郡、顺政郡、义城郡、平武郡、汶山郡、普安郡、金山郡、新城郡、巴西郡、遂宁郡、涪陵郡、巴郡、巴东郡、蜀郡、临邛郡、眉山郡、隆山郡、资阳郡、泸川郡、犍为郡、越巂郡、牂柯郡、黔安郡 雍州：京兆郡、冯翊郡、扶风郡、安定郡、北地郡、上郡、凋阴郡、延安郡、弘化郡、平凉郡、朔方郡、盐川郡、灵武郡、榆林郡、五原郡、天水郡、陇西郡、金城郡、枹罕郡、浇河郡、西平郡、武威郡、张掖郡、敦煌郡、鄯善郡、且末郡、西海郡、河源郡 西汉有十三州：冀州、幽州、并州、青州、徐州、兑州、豫州、扬州、交州、荆州、益州、朔方及凉州\n唐朝：\r#\r\r河南道：分属豫、徐、青、兖四州之域 河北道：分属冀州之域、兖州之北境 河东道：分属冀州之域 关内道：分属雍州之域 陇右道：分属雍州之域 剑南道：分属梁州之域 山南道：分属荆、梁二州之域 淮南道：分属扬州之域、荆州之东境 江南道：分属扬州之域、荆州之南境 岭南道：分属扬州之南境\n宋朝：\r#\r\r开封府：分属兖、豫、青、徐之域 京东东路：分属兖、豫、青、徐之域 京东西路：分属兖、豫、青、徐之域 京西南路：分属冀、豫、荆、兖、梁五州之域 京西北路：分属冀、豫、荆、兖、梁五州之域 河北路（河北东路、河北西路）：分属兖、冀、青三州之域 河东路：分属冀、雍二州之域 陕西路（永兴军路、秦凤路）：分属雍、梁、冀、豫四州之域 两浙路：分属扬州之域 淮南东路：分属荆、徐、扬、豫四州之域 淮南西路：分属荆、徐、扬、豫四州之域 江南东路：分属扬州之域 江南西路：分属扬州之域 荆湖北路：分属荆州之域 荆湖南路：分属荆州之域 福建路：分属扬州之域 川峡四路（成都府路、梓州路、利州路、夔州路）：分属梁、雍、荆三州之地 广南东路：分属荆、扬二州之域 广南西路：分属荆、扬二州之域\n明朝：\r#\r\r冀州∶顺天府、保定府、河间府、真定府、顺徳府、广平府、大名府部分 、永平府、延庆府、保安州、万全都指挥使司（万全都司）、太原府、平阳府、大同府、潞安府、汾州府、辽州、沁州、泽州、彰徳府、卫辉府、怀庆府、广宁（广宁卫）以西之地 兖州∶兖州府部分 、东昌府、开封府部分 青州∶济南府、青州府、登州府、莱州府、辽东都指挥使司（广宁卫以东之地） 徐州∶徐州、兖州府部分 扬州∶应天府、凤阳府、苏州府、松江府、常州府、镇江府、扬州府、淮安府、庐州府、安庆府、太平府、宁国府、池州府、徽州府、广徳州、和州、滁州、杭州府、嘉兴府、湖州府、严州府、金华府、衢州府、处州府、绍兴府、宁波府、台州府、温州府、南昌府、饶州府、广信府、南康府部分 、九江府部分 、建昌府、抚州府、临江府、吉安府部分 、瑞州府、袁州府、贑州府、南安府、福州府、泉州府、建宁府、延平府、汀州府、兴化府、邵武府、漳州府、福宁州、广州府、韶州府、南雄府、惠州府、潮州府、肇庆府、罗定州、南宁府 及高州府、廉州府、雷州府、琼州府 荆州∶武昌府、汉阳府、承天府、徳安府、黄州府、荆州府、岳州府、长沙府、宝庆府、衡州府、常徳府、辰州府、永州府、郴州、永顺、保靖、韶州府、桂林府、平乐府、梧州府、镇远府、思南府、石阡府、铜仁府、黎平府及南康府部分、九江府部分 、吉安府部分 、襄阳府部分 、施州部分 [127] 、䕫州府部分 、贵阳府部分 雍州：西安府、凤翔府、汉中府部分 、平凉府、巩昌府、临洮府、庆阳府、延安府、宁夏卫、洮州卫军民指挥使司、岷州卫军民指挥使司、河州卫军民指挥使司、靖虏卫、陕西行都指挥使司、郧阳府部分\n"},{"id":172,"href":"/posts/literature/%E8%AE%BA%E5%96%84%E6%81%B6/","title":"论善恶","section":"文学","content":"为何人有善恶之分？ 人本无善恶，所谓善恶，存乎一心尔。\n善恶有报，但实际上却并非如此，世间诸多行善之人，家里却过的穷困潦倒，尔有的作恶多端，却逍遥快活，这是为何？ 何为善，何为恶，皆不是从表面就能轻易判断的，只要有益于他人，有益于世间，就算打人骂人也都是善，反之，若只是为了达到自己目的，即便爱人助人，也变成了巴结讨好，也成了恶。一人行善积德，即便生活贫穷一些，子孙后代往往发迹，而一人投机取巧，纵然得了一时富贵，总归没有好下场。\n何为善，何为恶？ 对己对人皆有利可称为善，对己不利但对他人有利则是大善，相反是恶\n但凡做了利于他人之举，皆可称为善吗？ 不可，有心为善，虽善不赏，带着目的去行善，仅是伪善，发自内心的为善，并不寻求回报，才是真善。\n人善没人欺，为何？ 此等事确实有，然而只是少数，并非常态，以开阔的胸怀包容这些许不公，如此才能证道，若然因而生怨，便会落了下乘。\n世间人，说起道理夸夸其谈，行动时却眼高手低的甚多，具体应该如何应对？ 于一切法，无取无舍，于一切事，无染无执，于一切境，不动不摇，于一切时，常行方便，随顺众生，令皆欢喜。\n"},{"id":173,"href":"/posts/literature/%E8%AF%92%E9%83%91%E5%AD%90%E4%BA%A7%E4%B9%A6/","title":"诒郑子产书","section":"文学","content":"郑人铸刑书。叔向使诒子产书，曰：始吾有虞于子，今则已矣。昔先王议事以制，不为刑辟，惧民之有争心也。犹不可禁御，是故闲之以义，纠之以政，行之以礼，守之以信，奉之以仁，制为禄位以劝其从，严断刑罚以威其淫。惧其未也，故诲之以忠，耸之以行，教之以务，使之以和，临之以敬，莅之以强，断之以刚。犹求圣哲之上，明察之官，忠信之长，慈惠之师，民于是乎可任使也，而不生祸乱。民知有辟，则不忌于上，并有争心，以征于书，而徼幸以成之，弗可为矣。夏有乱政而作《禹刑》，商有乱政而作《汤刑》，周有乱政而作《九刑》，三辟之兴，皆叔世也。今吾子相郑国，作封洫，立谤政，制参辟，铸刑书，将以靖民，不亦难乎？《诗》曰：『仪式刑文王之德，日靖四方。』又曰：『仪刑文王，万邦作孚。』如是，何辟之有？民知争端矣，将弃礼而征于书。锥刀之末，将尽争之。乱狱滋丰，贿赂并行，终子之世，郑其败乎！肸闻之，国将亡，必多制，其此之谓乎！」复书曰：「若吾子之言，侨不才，不能及子孙，吾以救世也。既不承命，敢忘大惠？」\n郑国把刑法铸在鼎上。叔向派人送给子产一封信，说：“开始我对您寄予希望，现在完了。从前先王衡量事情的轻重来断定罪行，不制定刑法，这是害怕百姓有争夺之心。还是不能防止犯罪，因此用道义来防范，用政令来约束，用礼仪来奉行，用信用来保持，用仁爱来奉养。制定禄位，以勉励服从的人，严厉地判罪，以威胁放纵的人。还恐怕不能收效，所以用忠诚来教诲他们，根据行为来奖励他们，用专业知识技艺教导他们，用和悦的态度使用他们，用严肃认真对待他们，用威严监临他们，用坚决的态度判断他们的罪行。还要访求聪明贤能的卿相、明白事理的官员、忠诚守信的乡长、慈祥和蔼的老师，百姓在这种情况下才可以使用，而不致于发生祸乱。百姓知道有法律，就对上面不恭敬。大家都有争夺之心，用刑法作为根据，而且侥幸得到成功，就不能治理了。夏朝有违犯政令的人，就制定禹刑。商朝有触犯政令的人，就制定汤刑。周朝有触犯政令的人，就制定九刑。三种法律的产生，都处于末世了。现在您辅佐郑国，划定田界水沟，设置毁谤政事的条例，制定三种法规，把刑法铸在鼎上，准备用这样的办法安定百姓，不也是很难的吗？诗说：‘效法文王的德行，每天抚定四方。’又说：‘效法文王，万邦信赖。’像这样，何必要有法律？百姓知道了争夺的依据，将会丢弃礼仪而征用刑书。刑书的一字一句，都要争个明白。触犯法律的案件更加繁多，贿赂到处使用。在您活着的时候，郑国恐怕要衰败吧！肸听说，‘国家将要灭亡，必然多订法律’，恐怕说的就是这个吧！”子产复信说：“像您所说的这样。侨没有才能，不能考虑到子孙，我是用来挽救当前的世界。既然不能接受您的命令，又岂敢忘了您的恩惠？\n"},{"id":174,"href":"/posts/literature/%E8%BE%BE%E7%94%9F/","title":"达生","section":"文学","content":"通晓生命实情的人，不会去努力追求对于生命没有什么好处的东西；通晓命运实情的人，不会去努力追求命运无可奈何的事情。养育身形必定先得备足各种物品，可是物资充裕有余而身体却不能很好保养的情况是有的；保全生命必定先得使生命不脱离形体，可是形体没有死去而生命却已死亡的情况也是有的。生命的到来不能推却，生命的离去不能留止。可悲啊！世俗的人认为养育身形便足以保存生命；然而养育身形果真不足以保存生命，那么，世间还有什么事情值得去做呢！虽然不值得去做却不得不去做，内中的操劳或勤苦也就不可避免。\n想要免除操劳形体的情况，不如忘却世事。忘却世事就没有劳苦和拘累，没有劳苦和拘累就算走上了正确的道路，走上了正确的道路就能跟随自然一道生存与变化，跟自然一道生存与变化也就接近于大道了。世俗之事为什么须得舍弃而生命途中的痕迹为什么须得遗忘？舍弃了世俗之事身形就不会劳累，遗忘了生命的涯际精神就不会亏损。身形得以保全而精神得以复本还原，就跟自然融合为一体。天和地，乃是万物（生长、繁育）的父体和母体，（阴阳二气）一旦结合便形成物体，物体一旦离散又成为新的物体产生的开始。形体保全精神不亏损，这就叫做能够随自然的变化而变化；精神汇集达到高度凝聚的程度，返回过来又将跟自然相辅相成。\n列子问[关尹]说：“道德修养臻于完善的至人潜行水中却不会感到阻塞，跳入火中却不会感到灼热，行走于万物之上也不会感到恐惧。请问为什么会达到这样的境界？”\n关尹回答说：“这是因为持守住纯和之气，并不是智巧、果敢所能做到的。坐下，我告诉给你。大凡具有面貌、形象、声音、颜色的东西，都是物体，那么物与物之间又为什么差异很大，区别甚多？又是什么东西最有能耐足以居于他物之先的地位？这都只不过是有形状和颜色罢了。大凡一个有形之物却不显露形色而留足于无所变化之中，懂得这个道理而且深明内中的奥秘，他物又怎么能控制或阻遏住他呢！那样的人处在本能所为的限度内，藏身于无端无绪的混沌中，游乐于万物或灭或生的变化环境里，本性专一不二，元气保全涵养，德行相融相合，从而使自身与自然相通。像这样，他的禀性持守保全，他的精神没有亏损，外物又从什么地方能够侵入呢！\n“醉酒的人坠落车下，虽然满身是伤却没有死去。骨骼关节跟旁人一样而受到的伤害却跟别人不同，因为他的神思高度集中，乘坐在车子上也没有感觉，即使坠落地上也不知道，死、生、惊、惧全都不能进入到他的思想中，所以遭遇外物的伤害却全没有惧怕之感。那个人从醉酒中获得保全完整的心态尚且能够如此忘却外物，何况从[自然之道]中忘却外物而保全完整的心态呢？圣人藏身于自然，所以没有什么能够伤害他。复仇的人并不会去折断曾经伤害过他的宝剑，即使常存忌恨之心的人也不会怨恨那偶然飘来、无心地伤害到他的瓦片，这样一来天下也就太平安宁。没有攻城野战的祸乱，没有残杀戮割的刑罚，全因为遵循了这个道理。\n“不要开启人为的思想与智巧，而要开发自然的真性。开发了自然的真性则随遇而安，获得生存；开启人为的思想与智巧，就会处处使生命受到残害。不要厌恶自然的禀赋，也不忽视人为的才智，人们也就几近纯真无伪了！”\n孔子到楚国去，走出树林，看见一个驼背老人正用竿子粘蝉，就好像在地上拾取一样。\n孔子说：“先生真是巧啊！有门道吗？”驼背老人说：“我有我的办法。经过五、六个月的练习，在竿头累迭起两个丸子而不会坠落，那么失手的情况已经很少了；迭起三个丸子而不坠落，那么失手的情况十次不会超过一次了；迭起五个丸子而不坠落，也就会像在地面上拾取一样容易。我立定身子，犹如临近地面的断木，我举竿的手臂，就像枯木的树枝；虽然天地很大，万物品类很多，我一心只注意蝉的翅膀，从不思前想后左顾右盼，绝不因纷繁的万物而改变对蝉翼的注意，为什么不能成功呢！”\n孔子转身对弟子们说：“运用心志不分散，就是高度凝聚精神，恐怕说的就是这位驼背的老人吧！”\n颜渊问孔子说：“我曾经在觞深过渡，摆渡人驾船的技巧实在神妙。我问他：‘驾船可以学习吗？’摆渡人说：‘可以的。善于游泳的人很快就能驾船。假如是善于潜水的人，那他不曾见到船也会熟练地驾驶船。’我进而问他怎样学习驾船而他却不再回答我。请问他的话说的是什么意思呢？”\n孔子回答说：“善于游泳的人很快就能学会驾船，这是因为他们习以成性适应于水而处之自然。至于那善于潜水的人不曾见到过船就能熟练地驾驶船，是因为他们眼里的深渊就像是陆地上的小丘，看待船翻犹如车子倒退一样。船的覆没和车的倒退以及各种景象展现在他们眼前却都不能扰乱他们的内心，他们到哪里不从容自得！用瓦器作为赌注的人心地坦然而格外技高，用金属带钩作为赌注的人而心存疑惧，用黄金作为赌注的人则头脑发昏内心迷乱。各种赌注的赌博技巧本是一样的，而有所顾惜，那就是以身外之物为重了。大凡对外物看得过重的人其内心世界一定笨拙。”\n田开之拜见周威公。周威公说：“我听说祝肾在学习养生，你跟祝肾交游，从他那儿听到过什么呢？”田开之说：“我只不过拿起扫帚来打扫门庭，又能从先生那里听到什么！”周威公说：“先生不必谦虚，我希望能听到这方面的道理。”田开之说：“听先生说：‘善于养生的人，就像是牧放羊群似的，瞅到落后的便用鞭子赶一赶。’”周威公问：这话说的是什么意思呢？”\n田开之说：“鲁国有个叫单豹的，在岩穴里居住在山泉边饮水，不跟任何人争利，活了七十岁还有婴儿一样的面容；不幸遇上了饿虎，饿虎扑杀并吃掉了他。另有一个叫张毅的，高门甲第、朱户垂帘的富贵人家，无不趋走参谒，活到四十岁便患内热病而死去。单豹注重内心世界的修养可是老虎却吞食了他的身体，张毅注重身体的调养可是疾病侵扰了他的内心世界，这两个人，都不是能够鞭策落后而取其适宜的人。”\n孔子说：“不要进入荒山野岭把自己深藏起来，也不要投进世俗而使自己处处显露，要像槁木一样站立在两者中间。倘若以上三种情况都能具备，他的名声必定最高。使人可畏的道路，十个行人有一个人被杀害，于是父子兄弟相互提醒和戒备，必定要使随行的徒众多起来方才敢于外出，这不是很聪明吗！人所最可怕的，还是枕席上的姿意，还有在饮食间的失度；却不知道为此提醒和戒备，这实在是过错。”\n主持宗庙祭祀的官吏穿好礼服戴上礼帽来到猪圈边，对着栅栏里的猪说：“你为什么要讨厌死呢？我将喂养你三个月，用十天为你上戒，用三天为你作斋，铺垫上白茅，然后把你的肩胛和臀部放在雕有花纹的祭器上，你愿意这样吗？”为猪打算，说是仍不如吃糠咽糟而关在猪圈里，为自己打算，就希望活在世上有高贵荣华的地位，死后则能盛装在绘有文采的柩车上和棺椁中。为猪打算就会舍弃白茅、雕俎之类的东西，为自己打算却想求取这些东西，所不同于猪的原因究竟是什么呢？”\n[齐桓公]在草泽中打猎，[管仲]替他驾车，突然桓公见到了鬼。桓公拉住管仲的手说：“仲父，你见到了什么？”管仲回答：“我没有见到什么。”桓公打猎回来，疲惫困怠而生了病，好几天不出门。\n齐国有个士人叫皇子告敖的对齐桓公说：“你是自己伤害了自己，鬼怎么能伤害你呢？身体内部郁结着气，精魂就会离散而不返归于身，对于来自外界的骚扰也就缺乏足够的精神力量。郁结着的气上通而不能下达，就会使人易怒；下达而不能上通，就会使人健忘；不上通又不下达，郁结内心而不离散，那就会生病。”桓公说：“这样，那么还有鬼吗？”告敖回答：“有。水中污泥里有叫履的鬼，灶里有叫髻的鬼。门户内的各种烦攘，名叫雷霆的鬼在处置；东北的墙下，名叫倍阿鲑蠪的鬼在跳跃；西北方的墙下，名叫攻入阳的鬼住在那里。水里有水鬼罔象，丘陵里有山鬼峷，大山里有山鬼夔，郊野里有野鬼彷徨，草泽里还有一种名叫委蛇的鬼。”桓公接着问：“请问，委蛇的形状怎么样？”告敖回答：“委蛇，身躯大如车轮，长如车辕，穿着紫衣戴着红帽。他作为鬼神，最讨厌听到雷车的声音，一听见就两手捧着头站着。见到了他的人恐怕也就成了霸主了。”\n桓公听了后开怀大笑，说：“这就是我所见到的鬼。”于是整理好衣帽跟皇子告敖坐着谈话，不到一天时间病也就不知不觉地消失了。\n纪渻子为周宣王驯养斗鸡。过了十天周宣王问：“鸡驯好了吗？”纪渻子回答说：“不行，正虚浮骄矜自恃意气哩。”十天后周宣王又问，回答说：“不行，还是听见响声就叫，看见影子就跳。”十天后周宣王又问，回答说：“还是那么顾看迅疾，意气强盛。”又过了十天周宣王问，回答说：“差不多了。别的鸡即使打鸣，它已不会有什么变化，看上去像木鸡一样，它的德行真可说是完备了，别的鸡没有敢于应战的，掉头就逃跑了。”\n孔子在吕梁观赏，瀑布高悬二三十丈，冲刷而起的激流和水花远达四十里，鼋、鼍、鱼、鳖都不敢在这一带游水。只见一个壮年男子游在水中，还以为是有痛苦而想寻死的，派弟子顺着水流去拯救他。忽见那壮年男子游出数百步远而后露出水面，还披着头发边唱边游在堤岸下。孔子紧跟在他身后而问他，说：“我还以为你是鬼，仔细观察你却是个人。请问，游水也有什么特别的门道吗？”那人回答：“没有，我并没有什么特别的方法。我起初是故常，长大是习性，有所成就在于自然。我跟水里的漩涡一块儿下到水底，又跟向上的涌流一道游出水面，顺着水势而不作任何违拗。这就是我游水的方法。”孔子说：“什么叫做‘起初是故常，长大是习性，有所成就在于自然’呢？”那人又回答：“我出生于山地就安于山地的生活，这就叫做故常；长大了又生活在水边就安于水边的生活，这就叫做习性；不知道为什么会这样而这样生活着，这就叫做自然。”\n梓庆能削刻木头做鐻，鐻做成以后，看见的人无不惊叹好像是鬼神的工夫。鲁侯见到便问他，说：“你用什么办法做成的呢？”梓庆回答道：“我是个做工的人，会有什么特别高明的技术！虽说如此，我还是有一种本事。我准备做鐻时，从不敢随便耗费精神，必定斋戒来静养心思。斋戒三天，不再怀有庆贺、赏赐、获取爵位和俸禄的思想；斋戒五天，不再心存非议、夸誉、技巧或笨拙的杂念；斋戒七天，已不为外物所动仿佛忘掉了自己的四肢和形体。正当这个时候，我的眼里已不存在公室和朝廷，智巧专一而外界的扰乱全都消失。然后我便进入山林，观察各种木料的质地；选择好外形与体态最与鐻相合的，这时业已形成的鐻的形象便呈现于我的眼前，然后动手加工制作；不是这样我就停止不做。这就是用我木工的纯真本性融合木料的自然天性，制成的器物疑为神鬼工夫的原因，恐怕也就出于这一点吧！”\n东野稷因为善于驾车而得见鲁庄公，他驾车时进退能够在一条直线上，左右转弯形成规整的弧形。庄公认为就是编织花纹图案也未必赶得上，于是要他转上一百圈后再回来。颜阖遇上了这件事，入内会见庄公，说：“东野稷的马一定会失败的。”庄公默不作声。不多久，东野稷果然失败而回。庄公问：“你为什么事先就知道定会失败呢？”颜阖回答说：“东野稷的马力气已经用尽，可是还要它转圈奔走，所以说必定会失败的。”\n工倕随手画来就胜过用圆规与矩尺画出的，手指跟随事物一道变化而不须用心留意，所以他心灵深处专一凝聚而不曾受过拘束。忘掉了脚，便是鞋子的舒适；忘掉了腰，便是带子的舒适；知道忘掉是非，便是内心的安适；不改变内心的持守，不顺从外物的影响，便是遇事的安适。本性常适而从未有过不适，也就是忘掉了安适的安适。\n有个名叫孙休的人，走到门前就惊叹不已地询问他的老师扁庆子，说：“我安居乡里不曾受人说过道德修养差，面临危难也没有人说过不勇敢；然而我的田地里却从未遇上过好年成，为国家出力也未遇上圣明的国君，被乡里所摈弃，受地方官放逐，而我对于上天有什么罪过呢？我怎么会遇上如此的命运？”\n扁子说：“你不曾听说过那道德修养极高的人的身体力行吗？忘却自己的肝胆，也遗弃了自己的耳目，无心地纵放于世俗尘垢之外，自由自在地生活在不求建树的环境中，这就叫做有所作为而不自恃，有所建树而不自得。如今你把自己打扮得很有才干用以惊吓众人，用修养自己的办法来突出他人的污秽，毫不掩饰地炫耀自己就像在举着太阳和月亮走路。你得以保全形体和身躯，具备了九窍，没有中道上夭折于聋、瞎、跛、瘸而处于寻常人的行列，也真是万幸了，又有什么闲暇抱怨上天呢！你还是走吧！”\n孙休走出屋子，扁子回到房里。不多一会儿，扁子仰天长叹，弟子问道：“先生为什么长叹呢？”扁子说：“刚才孙休进来，我把道德修养极高的人的德行告诉给他，我真担心他会吃惊以至迷惑更深。”弟子说：“不对哩。孙休所说的话是正确的吗？先生所说的话是错误的吗？错误的本来就不可能迷惑正确的。孙休所说的话是不对的吗？先生所说的话是正确的吗？他本来就因迷惑而来请教，又有什么过错呀！”\n扁子说：“不是这样的。从前有只海鸟飞到鲁国都城郊外，鲁国国君很喜欢它，用‘[太牢]来宴请它，奏‘[九韶]，乐来让它快乐，海鸟竟忧愁悲伤，眼花缭乱，不敢吃喝。这叫做按自己的生活习性来养鸟。假若是按鸟的习性来养鸟，就应当让它栖息于幽深的树林，浮游于大江大湖，让它吃泥鳅和小鱼，这本是极为普通的道理而已。如今的孙休，乃是管窥之见、孤陋寡闻的人，我告诉给他道德修养极高的人的德行，就好像用马车来托载小老鼠，用钟鼓的乐声来取悦小鴳雀一样。他又怎么会不感到吃惊啊！\n"},{"id":175,"href":"/posts/literature/%E9%81%93%E8%B7%AF%E4%BB%A5%E7%9B%AE/","title":"道路以目","section":"文学","content":"周朝的土地基本制度是“井田制”，将大块的田地分割成九块，排成“井”字形。中央一块田地由大家合耕，收获归国家所有，为公田；其余八块收获物归各家所有，为私田。井田制下受田的人，平时向授予者交纳贡赋，战时有服兵役的义务。天子是最高的土地所有者，有权向每一位生活在土地上的贵族和庶民取得贡赋，有权向接收土地者收回土地。 朝廷获得税赋的方法有两种，其一，庶民助耕公田；其二，诸侯的朝觐贡献。到周夷王时，已有诸侯不朝。同时，随着私田的不断开发，使西周的井田制度遭到破坏。国人不断依靠从山林湖泽捕鱼、打猎营利，这都对西周朝廷的经济收入造成了巨大的威胁。 西周自周成王、周康王之后，社会矛盾开始激化。到周昭王、周穆王时期，由于贵族内部的分化现象越来越严重，许多失势的贵族和贫困的士阶层，社会地位不断下降，也在城中与一般平民杂处。\n周夷王死后，其子周厉王姬胡继位。为了改变朝廷的经济状况，周厉王任用荣夷公为卿士，实行“专利”政策，将山林湖泽改由天子直接控制，不准国人进入谋生。 周都镐京的国人因不满周厉王的政策，怨声载道。大臣召穆公进谏说：人们已经受不了了，都在议论纷纷。周厉王又命令卫巫监谤，禁止国人谈论国事，违者杀戮。 在周厉王的高压政策下，国人不敢在公开场合议论朝政。人们在路上碰到熟人，也不敢交谈招呼，只用眼色示意一下，然后匆匆地走开，这就是“道路以目”。 周厉王得知后十分满意。对召穆公说：“我有能力制止人们的非议，他们再也不敢议论了！”\n召穆公劝谏周厉王道：“这是用强制的手段来堵住民众的嘴啊！这样堵住人们的嘴，就像堵住了一条河。河一旦决口，要造成灭顶之灾；人们的嘴被堵住了，带来的危害远甚于河水！治水要采用疏导的办法，治民要让天下人畅所欲言。“周厉王对此却置若罔闻。\n公元前841年，因不满周厉王的暴政，镐京的国人集结起来，手持棍棒、农具，围攻王宫，要杀周厉王。周厉王下令调兵遣将。臣下回答说：“我们周朝寓兵于国人，国人就是兵，兵就是国人。国人都暴动了，还能调集谁呢？”周厉王带领亲信逃离镐京，沿渭水河岸，一直逃到彘， 并于公元前828年病死于该地。 国人攻进王宫，没有找到周厉王，便转而寻找太子姬静。召穆公将姬静藏了起来，国人围住召穆公家，要召穆公交出太子，召穆公以其子代王太子，国人把召穆公之子杀之。 在大臣周定公、召穆公的劝解下，国人平息了一些怨恨，纷纷离去。此时宗周无主，周公和召公根据贵族们的推举，暂时代理政事，重要政务由六卿合议。这种政体称为共和。\n"},{"id":176,"href":"/posts/literature/%E9%97%AE%E8%AF%B4/","title":"问说","section":"文学","content":"原文： 君子之学必好问。问与学，相辅而行者也。非学无以致疑，非问无以广识；好学而不勤问，非真能好学者也。理明矣，而或不达于事；识其大矣，而或不知其细，舍问，其奚决焉？ 贤于己者，问焉以破其疑，所谓“就有道而正”也。不如己者，问焉以求一得，所谓“以能问于不能，以多问于寡”也。等于己者，问焉以资切磋，所谓交相问难，审问而明辨之也。《书》不云乎？“好问则裕。”孟子论：“求放心”，而并称曰“学问之道”，学即继以问也。子思言“尊德性”，而归于“道问学”，问且先于学也。 古之人虚中乐善，不择事而问焉，不择人而问焉，取其有益于身而已。是故狂夫之言，圣人择之，刍荛之微，先民询之，舜以天子而询于匹夫，以大知而察及迩言，非苟为谦，诚取善之弘也。三代而下，有学而无问，朋友之交，至于劝善规过足矣，其以义理相咨访，孜孜焉唯进修是急，未之多见也，况流俗乎？ 是己而非人，俗之同病。学有未达，强以为知；理有未安，妄以臆度。如是，则终身几无可问之事。贤于己者，忌之而不愿问焉；不如己者，轻之而不屑问焉；等于己者，狎之而不甘问焉，如是，则天下几无可问之人。人不足服矣，事无可疑矣，此唯师心自用耳。夫自用，其小者也；自知其陋而谨护其失，宁使学终不进，不欲虚以下人，此为害于心术者大，而蹈之者常十之八九。 不然，则所问非所学焉：询天下之异文鄙事以快言论；甚且心之所已明者，问之人以试其能，事之至难解者，问之人以穷其短。而非是者，虽有切于身心性命之事，可以收取善之益，求一屈己焉而不可得也。嗟乎！学之所以不能几于古者，非此之由乎？ 且夫不好问者，由心不能虚也；心之不虚，由好学之不诚也。亦非不潜心专力之敌，其学非古人之学，其好亦非古人之好也，不能问宜也。 智者千虑，必有一失。圣人所不知，未必不为愚人之所知也；愚人之所能，未必非圣人之所不能也。理无专在，而学无止境也，然则问可少耶？《周礼》，外朝以询万民，国之政事尚问及庶人，是故贵可以问贱，贤可以问不肖，而老可以问幼，唯道之所成而已矣。 孔文子不耻下问，夫子贤之。古人以问为美德，而并不见其有可耻也，后之君子反争以问为耻，然则古人所深耻者，后世且行之而不以为耻者多矣，悲夫！\n译文： 君子学习必定喜爱问。“问”与“学”是相辅相成地进行的，不“学”就不会发现疑问，不“问”就不能增长知识。喜爱学习却不多问，不是真的喜爱学习的人。道理明白了，但或许还不能应用于实际，认识了那些大的原则、纲领、总体，可是还可能不了解那些细节，对于这些问题除了问，怎么能解决问题呢？ 对于比自己道德才能高的人，向他们问，借以破除那疑问，所说的到有道德有学问的人那里去匡正自己。对于不如自己的人，向他们问，借以求得一点正确的见解，这就是曾子所说的以高才能向低才能的人问，以道德高知识多向道德低知识少的人问。对同自己水平相等的人，向他们问，借以共同研究，这就是《中庸》所说的互相诘问，详细地考察，明确地分辨它。《尚书》不是说吗？“喜爱问的人，学问知识就丰富。”孟子论述：“找回自己的放纵散漫的心”的时候，并提“学问之道”，“学”之后就紧跟着“问”。子思谈“重视品德修养”时，归结到要好问勤学，在他的提法中“问”并且在“学”的前面。 古代的人虚心采纳善言善事，不挑选事情地问，不挑选人地问，只要能求取那有益于自己修养和学业的就可以了。因此，狂妄的普通人的话，圣人也采纳它，地位低微的樵夫，古圣先王也询问他，舜帝有天子的身份都向平民询问，以他们的大智却注意到浅近平常的意见，不是偶然的谦虚，实在是要从多方面听取有益的意见。三代以后，有“学”而没有“问”，朋友间的交往，能做到规劝做好事，不做坏事就不错了，那种在大是大非问题上互相请教，勤勉地只是以进修为急务的人未多见，更何况世俗的人呢？ 认为自己对，别人不对，这是世俗人的共同毛病，学习有未贯通不理解的地方，却偏偏以为理解，所持的道理有不稳妥的地方，却胡乱地凭主观猜测，像这样，就终生几乎都没有什么可问的事了。对比自己道德才能高的人，就妒忌他，不愿意向他问，对不如自己的人，就轻视他，认为不值得向他问，对同自己水平相同的人，抱着嬉戏的态度而不敬重他，不甘愿向他问，像这样，就天下几乎没有可以问的人了。什么人都不值得佩服了，什么事都没有可疑的了，这只是自以为是罢了。自以为是，那错误还是小的；自己知道自己的浅薄却严密地掩盖自己的过错，宁愿让学习最终不进步，也不愿意虚心向别人请教，这样危害自己的内心修养，错误可就大了，而陷入这种大错误的人常常占十分之八九。 不这样的话，就所问的也不是他所学的：如问一些天下的奇字僻典和琐屑事物来说说好玩；甚至自己心里所已经明白的问题，却故意拿它，问别人，来试试那人的才能；或者非常难解答的事情问别人，来逼使那人难堪。如果不是这样，或者即使有与自己思想品德修养有密切关系的事情，可以收到得到教益的效果的，要压低一下自己的尊严虚心向别人请教也不能做到。唉！学习之所以不能接近古人，不是正由于这原因吗？ 而且不喜爱问的人，是由于不能虚心；不能虚心是由于不诚心实意喜爱学习。也不是不专心用功的缘故，他学习的不是古代儒家学习的东西，他喜爱的也不是古代儒家喜爱的东西，不善于问是理所当然的。 聪明的人考虑一千次，也一定会出现一次错误。圣人所不了解的事物，普通的人不一定也不了解；普通的人所能做的，圣人不一定能做。真理不专门存在于某人，学习是没有止境的，那么，“问”可以少得了吗？《周礼》说，朝堂之外要询问百姓对朝政的意见，国家的大事还问到平民。所以贵人可以问身份低的人，道德才能高的人可以问道德才能低的人，老人可以问年轻的人，只考虑道德学问方面的成就罢了。 孔子不以向比他低下的人请教为耻辱，孔子认为他道德学问高。古人把“问”作为美德，而并不认为它是可耻的，后代的君子反而争先把“问”当作耻辱，那么古人所深深地感到羞耻的事，后代人却做着而不以为耻的就多了，可悲啊！ 真实可信的话不漂亮，漂亮的话不真实。善良的人不巧说，巧说的人不善良。真正有知识的人不卖弄，卖弄自己懂得多的人不是真有知识。圣人是不存占有之心的，而是尽力照顾别人，他自己也更为充足；他尽力给予别人，自己反而更丰富。自然的规律是让万事万物都得到好处，而不伤害它们。圣人的行为准则是，做什么事都不跟别人争夺。\n"},{"id":177,"href":"/posts/literature/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E4%B9%9D%E5%A4%A7%E4%BD%93%E7%B3%BB/","title":"项目管理九大体系","section":"文学","content":"项目管理九大体系内容：\n一、项目综合管理：项目计划制订，项目计划执行，总体变更控制。\n二、项目范围管理：项目内容的制定和控制。\n三、项目时间管理：定义活动，活动安排，活动工期设计，进度计划制定，进度计划控制。\n四、项目成本管理：谋划、跟踪、财务数据分析。\n五、项目风险定理：客户风险、技术风险、业务管理风险、项目管理风险、估计险、个人风险、项目环境风险、流程风险。\n六、项目人力资源的管理：通过组织计划，人员获取，团队建设，达到高效利用人力资源。\n七、项目沟通管理：沟通计划编制，信息发布，绩效报告，管理收尾。这项目工作占项目经理工作时间的75%-90。\n八、项目质量管理：项目本身质量管理，产品或服务的质量管理。\n质量计划：识别适用于项目和产品的质量标准。\n质量保证：整个项目中执行的计划和系统活动。以保项目符合相关质量标准。\n质量控制：即在项目的过程中进行监视，以保证质量。\n九、项目采购管理：采购计划编制，编制询价计划，询价，供应商选择，合同管理，合同收尾\n"},{"id":178,"href":"/posts/literature/%E9%AD%94%E5%9F%9F%E4%BC%A0%E8%AF%B4/","title":"魔域传说","section":"文学","content":"引：谜\r#\r\r亚特大陆的中央，有一座石门，门上有锁，锁上有字，写着：“解开此锁者，将成四海之王。”\n据说四海之王阿格里斯曾长久矗立门前，最终，他拔出剑，仰天高呼：“这就是钥匙，让整个世界在我剑下发抖吧！！”\n剑落锁断，门开，绝代英雄昂然走入石门，一去不返！……\n从那时起，在这片大陆上开始流行一个谜语：“正午的阳光下，在狮子留下的鹰的影子里，即为众神之国。”\n有人说，这也许仅仅是天神对人类的戏弄，但更多的人坚信，拥有他的人，必须是相信他的人。\n一 创始\r#\r\r万神之父是最初者，乃无中之有 乱中之治，一瞬中之永恒，极暗中之明光。\n万神之父是最高者，其所想必现 所言必信，目之所及，世界创生，行之所止，万物齐歌\u0026hellip;..\n——《万物之书》第1章第3页\n据说，创世神、众神之父科洛诺斯创造了亚特兰迪斯大陆上的一切和它的管理者——众神.他是整个世界的根源。\n“科洛诺斯苏醒于是便有了白昼\n科洛诺斯沉睡于是便有了黑夜\n科洛诺斯愤怒于是便有了火焰\n科洛诺斯哭泣于是便有了海洋\n\u0026hellip;\u0026hellip;\n科洛诺斯乃初始之始 原因之因\u0026hellip;\u0026hellip;.”\n——《圣诗 创始》\n从一些古老经典的残卷中，我们还能依稀看到创始神当年创世的痕迹。\n“如水流向低处，实在不断流向空无….”\n——《圣诗 有无》\n有得到便有失去，万神之父从“虚”中产生了世界，被提走的那部分“虚”便成为了“无”。如同饥饿渴求食肴，“无\u0026quot;贪婪地将这个世界牵引向毁灭，就是创始神也感到威胁。\n他将自身能量凝成“魔魂水晶”阻挡空无，让世界保持稳定。\n“是长生，是真母，让我们高呼盖亚之名。\n是崇光，是秩序，让我们高呼撒拉之名。\n是智慧，是神秘，让我们高呼欧斯之名。\n是混沌，是消逝，让我们高呼奈落之名。\n是伟力，是争战，让我们高呼寇德之名\u0026hellip;\u0026hellip; ”\n——《圣诗 诸天》\n万神之父最终创造诸神保护水晶，要求他们不得离开圣山。而自身沉沉睡去\u0026hellip;\u0026hellip;.\n二 魔族\r#\r\r“在各个种族的历史记载中，远古时期几乎毫无例外的指向无边黑暗，只有魔族例外，他们在火中诞生。”\n—— 人类历史学者 拉克利\n年复一年，时光如流水般消逝，万物众生在轮回中建立文明，苦守于神山希律斯的神族却渐渐感到了不安与躁动，尽管他们作为生命的最顶端，享受其他生命的供奉，但空有力量却无法使用的痛苦却让每个神族的欲望日渐扭曲，享乐之风逐渐盛行。\n不知从何时开始，便有神偷偷下山去世间寻欢作乐——魔族据说就是一次神人婚姻的产物——虽然混沌之神奈落总是装作什么也不知道，但是其他神族还是一眼看出那种生物的血色瞳孔缘自何方。\n拥有神的血统和近于人类的繁殖能力，魔族迅速地在竞争中确立了自己的地位。尽管后世的学者们对创始神是否早已预见魔族产生争论不休，但正如大精灵学者徨菲所说：“从创始神让诸神管理世界的名义和力量却不给任何权力开始，这个失衡世界的悲剧便已成定局。”\n约北历前1000年，魔族的伟大君主斯卡鲁发动了第一次灭世战争。庞大的魔族军队从魔族首都巴尔索伦出发，穿越黑月峡谷，很快便占领了谷口的“斯卡鲁地”（今杰明省西芙河流域）并以此为根基，征讨四方。传说，魔族指挥曾经在此地拜见斯卡鲁，询问皇帝意欲征服何处，“所见之处。”正在用餐的皇帝只是淡淡一语，甚至没有抬头\u0026hellip;\u0026hellip;.\n魔族忠实的履行了他们皇帝的命令，从那一年春天开始，大批的部队呈辐射状高歌猛进，指向四方，每到一地便继续辐射开去，如同在池塘中荡漾的波光。这种情况一直持续到约北历前950年，一队魔族率先回到魔都声明他们看到了“极北飘满白色石头的大海”（雪狼冰湖）”。\n第一次灭世战争因此结束。\n出发时的数百万魔族军队最终只有不到十万人归来，更多的魔族已经因为行军过于遥远而在50年后彻底没有音讯。这次战争并不惨烈却影响深远。一方面大部分的种族几乎不知道战争为何物，轻易便被集体屠杀或沦为奴隶，为魔族赢得了大批疆土（实际控制区域在开始时甚至超过了整个亚特大陆的一半）；另一方面魔族无法返乡的部队几乎散布于亚特大陆的每个角落，和当地生物相互融合，衍生出各种各样的魔物部落来。\n三 黑暗\r#\r\r“人类总是说，在最黑的暗夜过后，光明就要来到，但我认为这不过是文字游戏而已，因为你永远也无从得知，何时最为黑暗。”\n——魔族大帝斯卡鲁\n对于魔族来说北历前1000年到前790年这段日子是彻头彻尾的辉煌，但对于其他占领区的种族来说，无疑是遭遇了一场百年的梦魇。混沌的后代们根本不在意其奴隶的存活，只是单纯的把他们看成工具而已，他们甚至剥夺人类睡觉和精灵冥想的权利，让他们在无穷的劳作中倒下，所幸的是魔族监工用餐的时段多且长，那些没有被相中的肉食们可以借机生活和休息，以维系其生命的存在。\n但是最吃苦耐劳的种族也不能容忍的是，魔族让奴隶工作不是为了建设，不是为了财富和物欲，甚至不是为了某种娱乐，只是单纯而机械执行让他们成为奴隶的命令而已。今天建成的宏伟宫殿可能明天就被下令拆掉，最卖力强壮的奴隶可能最早成为肉食，人类可能被命令去点火，而精灵可能被指使去伐木\u0026hellip;\u0026hellip;而魔族似乎也没有灭绝他们的打算，他们鼓励每个种族生育。这些让人啼笑皆非的行为暴露的正是魔族的混沌本性——越是底层的魔族行为越混沌，越是伟大的魔族反而越象人类。\n百年间，各族的反抗此起彼伏，不过反抗和屠杀如影随形，实力之悬殊让奴隶们看不到任何希望。不知是因为特别愚蠢还是特别聪明，人类忍受了奴役和折磨，竟然从未大规模反抗过\u0026hellip;\u0026hellip;这种忍耐的直接后果就是人类的数量不断增加（因为各地都没有被大规模屠灭）。成为亚特大陆上如老鼠一般常见的动物。\n人类的后代不断歌颂他们祖先的忍辱负重，认为他们未卜先知甘愿牺牲。而精灵学者长期分析的结果是：“人类寿命最短，往往还没有来得及形成反抗精神就死去了。反是那些长命或早熟的种族无法容忍无穷的折磨。”这个论调让人类和精灵后来相互仇视了数年之久。\n北历前790年，如太阳的光芒刺破黑暗，先驱者赫尔基里诞生于亚特大陆东部阿诺萨城的奴隶营中，据说他在曾在迁徙中拣到了一本通用语的圣诗（大部分圣诗都用只有祭祀懂得的圣言写成，通用语版本十分罕见）这极大的影响了他的信仰并促成了他的成熟。最终，他逃出了奴隶营。\n“诸神保佑，我甚至不敢相信我已经脱逃。背后依稀传来火光和惨呼声，我知道我所在的奴隶营已遭遇报复,我能想象朋友们临死前对我的诅咒\u0026hellip;.愿我不幸的母亲能原谅我，她已经老了\u0026hellip;\u0026hellip;.\n我拖着颤抖的双腿，踉踉跄跄地迎向无边黑暗。魔族卫兵的鲜血正在我的手上逐渐凝结，原来魔族也会被杀死，这个事实令人鼓舞。黑夜的清风吹拂我的脸庞，仿佛自由之神的呼吸，总有一天，魔族鲜血将变成人类光明的自由。而我，赫尔基里，就是转化者……”。\n幸运的是，魔族并没有追捕一个微不足道的奴隶，只是愉快地杀光了他的家族。从此他东奔西走、昼伏夜出，将圣诗的信念和知识在人类部落间悄然传播。“众生平等，神佑人类”的论调无疑比单纯的煽动复仇更具有吸引力。各种圣书的手抄本在暗中传阅，赫尔基里的言语在部落间口耳相传，很快仇恨和反抗精神在人类的心中熊熊燃烧起来。赫尔基里的信徒越来越多。\n四 黎明\r#\r\r“黎明时的朝霞，是否真的是血染成？”\n——亚特愚者卢法塔\n北历前759年盛夏的一个夜晚，在赫尔基里的领导下，约170个部落的30万人类在5个大陆的主要城市同时爆发了起义（原计划是1000个部落以上，在恶劣的条件和魔族的监视下，他的动员能力实在有限，这不能不说是人类的幸运），压抑已久的人们怒吼着聚集起来，成为棕色的洪流。\n当他们刚刚遭遇魔族的巡逻队时，所有的人都迟疑了一下，随后便发出震天动地的狂呼“真神！撕碎他们！”人群很快吞没了魔族队伍，让那里成为怒流中一个个血色漩涡，每当一个尸首不全的人类被打飞出来，便有更多的人填入其中。漩涡挣扎了数分钟便平息了，地上躺下的每个魔族身边都有数十具人类尸体。但他们毕竟已经倒下。残缺的尸首对着天空，仿佛还没有从惊讶中清醒过来。\n这是人类的初次胜利。\n但是美好并没有持续多久，兴奋的人群在杀死城市中的所有魔族之后失去了目标，即使是赫尔基里亲自领导的阿克萨城起义也演化成了暴乱。没有人封锁消息，没有人组织队伍，没有人抢夺武器。每个饥饿的起义者都在争夺金钱与食物。圣诗的信仰在人们原始的本能面前显得如此无力。赫尔基里愤怒的呼号在混乱中只能传到不远的地方。\n“我茫然地看着四周，仿佛看到被众神遗弃的地狱，我许诺给大家带来光明，眼中却是如此黑暗，我空白的大脑仿佛被火焰烘烤，我嘶哑的嗓子再也叫不出一点声音。\n我不明白！\n为什么我们渴求秩序的撒拉，却总被奈落眷顾。\n为什么我们书上说神佑人类，人却总被寇德玩弄。\n有人来抢我的长袍；让他们把丝绸拿走吧——即使裸身我也要去问问众神，这一切究竟是为何？”\n起义者的胜利只持续了一夜，当晨雾散去，渐渐现出的是四周魔族雪亮的刀枪……赫尔基里仓促组织的队伍没有顶住魔族步兵的一次冲锋便开始了溃散，而胜利者在这个城市的狂欢最终持续了10天之久，他们杀得很慢，对，很慢……\n人类史称这次起义为“滴血黎明”。尽管在军事上它如此失败，但学者们仍然将它美化成了一次真正大无畏的牺牲。关于这次起义的英勇传说在人类间不断流传，进一步激励了人类的觉醒。或许赫尔基里不是一个优秀的领导者，但总会有优秀的领导者诞生。\n五 旅途\r#\r\r“有时，为了信仰，你必须违背你的信仰。”\n——转化者 赫尔基里\n赫尔基里没有死，甚至没有受伤，从阿克萨城的士兵一溃败，他就被身边最忠诚的信徒拖离了战场。并在无数人的自我牺牲后逃了出来。在接下来数年流逃亡岁月里，赫尔基里没有说话，只是坚定地向着神山逃亡，穿过刀伤平原，离开魔族占领区，翻越龙脊山脉，横渡溺水者之海\u0026hellip;\u0026hellip;身边的追随者越来越少，有些半路潜逃，有些被怪物拖走，有些自告奋勇去探路就再也没有回来，这些丝毫也没有动摇赫尔基里去神山的信念。终于，他们来到了神山，蓦现眼前的却是千丈绝壁，无处攀援。\n众人看着赫尔基里，只见他拿出身边破旧不堪的圣诗，对着神山高声颂唱：\n“吾乃净化者，是为驱离所有阴影之明光。\n吾乃解结者，是为无法缠持之松绳。\n吾乃流放者，是为吹熄最後烛火之恶意。\n吾乃狂想者，是为吞噬肉体之激情。\n吾乃给养者，是为使饥饿者复苏之食肴\u0026hellip;\u0026hellip;”\n（圣诗 信者祷文）\n高唱之时，绝壁上竟有圣歌相和，一部天梯垂下。赫尔基里从容顺梯而上，信徒齐声欢呼欲紧紧跟随，但却发现天梯在他们手中如同虚无\u0026hellip;\u0026hellip;赫尔基里最后也没有回头，只留下身后虔诚者绝望的呼号和眼神。\n六 神山\r#\r\r“每个生物都把自己的神想象得无比美好，而我却终于发现，圣地中的污秽，同样是污秽。”\n——转化者 赫尔基里\n在希律斯，赫尔基里如愿见到了他日夜祈祷的众神，可是几乎让他精神崩溃的是，诸神不但对他的指责置若罔闻，而且仅仅把他当成宠物般玩弄。“既然众生平等，我们为什么还要护佑人类呢？主神沉睡万年，谁又来保佑我们？”撒拉在他的千般呼唤下冷冷回答。众神随即哄堂大笑，各自散去。\n此时，将近300岁的魔族大帝斯卡鲁已是风烛残年，他已经对大陆的统治感到厌倦，但生的渴望仍然紧紧的攫住了他的心，当他听说那个人类的煽动者竟然延天梯进入神山时。他意识到了众神的存在。随即便调集大军包围了神山，呼唤神赐予他永生。如果未能得到，就掘地而入，与神俱灭也再所不惜。\n众神盛怒了，齐聚科洛诺斯神殿商议如何轻松而彻底地给魔族一点教训，在赫尔基里的苦苦哀求下，神决定赐给人类一些力量。因为如此不仅可以让魔族遭殃，他们也可以在隔岸观火中得到不少乐趣。但是为了不让人类变成第二个魔族，他们限制每个人类只能享受一位神的恩赐。最后，欧斯恶作剧般地给魔族一条神喻，声明在亚特大陆最后一个人类身上，将有魔族永生不死的秘密。\n如神所料，魔族的大军立刻开始转攻人类，而各地人类也突然发现自己身上的神奇变化，奋起反抗，整个大陆陷入一片混乱和战争之中。众神创世以来从未如此兴奋过。当他们想回过头来给赫尔基里一点奖赏时，却发现这位先驱者已经饿死在光秃秃的希律斯神山上，死前，他甚至吃掉了那本圣诗封面的羊皮\u0026hellip;..\n七 英雄们\r#\r\r“我们出生在一个错误的年代，所以，我们成了英雄。”\n——四方雄主 阿格里斯\n镇压与反抗持续千年，不论怎样的疯狂与沉重都将在历史中化为轻轻一笔，多少次雄歌响起，战火重燃；多少次风起云涌，群星毕现，多少次舍命奋战，浴血荒原，多少次岌岌可危，异军突起\u0026hellip;\u0026hellip;.打不败的魔族，杀不完的人类，斯卡鲁的野心早已随着他的死去化为尘土，众神也早已不再关心曾给予人类的恩赐。但战争既然开始，原因如何便不再重要，你死我活才是最终的结局。\n阿格里斯便出现在这样一个业火焚城的年代，人们不记得他何时出现，不记得他何时拥有了自己的军团，也不记得何时他赢得了第一场战争，但不断的胜利最终让人们记住了他的名字。\n在人类还不断失败的日子，他的军团成为希望之星活跃在战场上。\n阿格里斯教导人们不要轻易对抗魔族，“要想成为勇者，首先就要有成为懦夫的勇气。”\n他鼓励新兵猎杀弱小而分散的魔物，等到发现他们的潜质，再渐渐培养出合格的战士或法师“不要因为魔物未曾威胁你而怜悯，也不要因为魔物威胁了你而冲动。”他设计了能发挥各个职业战斗力的阵形并严格地训练士兵，“记住一旦阵形结好，擅自前进将踏入地狱，退后一步也是。”\n阿格里斯的军团虽然勇猛善战，但毕竟只是一个军团而已，除了大智者徨菲的领导的精灵军团偶尔能给他一些侧应，基本就是一只孤军。所以不论他们如何努力，杀伤多少敌人，也每每不免在敌人的大军合围之下仓惶撤退。并常常在侧翼遭到魔族刺脊冲锋兽的猛烈突击，造成惨痛伤亡。而其他地区的人类反抗军多是各自为战，保乡卫土，既不救援，也不配合。长此以往，连秃鹫都总是徘徊在部队之上，知道只要跟着就随时都有肉吃。\n王深深知道这样下去不免落败，而失败的根本原因还在于缺乏团结与统筹，于是在徨菲的建议之下，阿格里斯自称“七海四方之王”，提出了“吾辈统一，世界一统”的口号。不再针对魔族，转而为谋求人类联合而努力。\n他将部队分成若干部分游走于各个人类聚集点和义军之间，说服他们归附。当时，正是人类败仗连连，朝不保夕的时刻，恐惧和绝望令人们把“四方之王”当成了最后的救命稻草，阿格里斯的使者受到了狂热的追随，以致于有使者被狂热的民众踩死的事件发生。\n在这个漫长的过程中，魔族驻军似乎毫无不闻不问、毫无动作。其实一切早被魔族统帅“雷眼”贝伦看在眼里，他一边上书魔君巴德拉克二世，力陈这次机会是将杀之不绝的人类主力一举屠灭的最好机会；一边命令手下放出风去，说：“阿格里斯是魔族最大克星。”帮助人类更快集结。（集结越快，形式越混乱，杀得越干净）而这个时候，魔族的主力早已准备完毕，魔族最精锐的斥候时刻隐身在阿格里斯大帐的顶棚之上，只等狂热的人类集合完毕便大肆冲杀。\n数百万队伍很快便从四面八方集结在风舞原的鹰狮旗下，后面跟着数不清的老弱妇孺，快得连“四方王”和贤者徨菲都感到措手不及。他们甚至没有准备好给养和营帐。只能让部队散开取食。最先离开的部队在外面发现的不是食物,而是魔族蓄势待发的冲锋兽\u0026hellip;\u0026hellip;\n阿格里斯迅速率领大军向北撤退，而此时贝伦却陷入了困境之中，权臣亚安在魔都发生宫廷政变，巴德拉克二世被困皇宫，密令贝伦火速回军勤王。“雷眼”贝伦犹豫再三，终于在荣耀与忠诚中选择了前者。他回书巴德拉克二世：“我忠诚于您，但更忠诚于我的种族。我将结束千年战争，您将与我共享荣光。”魔族在贝伦的指挥下迅速完成合围，将人类牢牢包围在风舞原上。\n这是人类的绝望之旅\u0026hellip;\u0026hellip;如果没有众神，今后的历史将由魔族写成。\n正当贝伦即将发动总攻一举扼杀人类时，静观其变的诸神行动了，他们运用神力在北方隆起一座巨大山脉。北边的魔族军队还没来得及哀嚎便被覆盖在大地的狂怒中。阿格里斯迅速带领军队穿过庇护山希望峡谷，他们终于得到了安全\u0026hellip;\u0026hellip;\n算无遗策的贝伦最终杀死了几乎一半的义军，把这次大集合变成了人类真正的血肉之旅，但他没想到神会帮人类离开，而他已经来不及后悔——这位功勋卓著的魔族最高统帅一回到巴尔索伦便被新王亚安一世以石刑处死，分尸二十五块，传首四方。\n阿格里斯和他的子民们进入庇护山，在哪里他们感激众神的恩赐，并牢牢守住希望谷口，建立了人类王国，那一年，便是北历元年。\n八 幻灭\r#\r\r“汝等要将世界变为虚妄，吾便先将汝等变为虚妄”\n——科洛诺斯诅咒。\n被庇护山隔开的魔族和人类在希望峡谷两端对峙，彼此都明白无法突破对方。这场对峙带来了亚特大陆难得的和平。人类在庇护山后安居乐业，发展艺术与文明，而魔族则专著于内部统治的巩固和对其他的种族的征服。\n然而，此时神山却并不安宁，从北历113年开始，一种奇特的谣言正缓慢在大陆上传播，虽然流言从何而来已经无据可考，但在传播中却显得越来越真实。它宣称，“吸收了魔魂水晶力量的神将获得和创始神一样的力量。”这样的流言并非没有依据，创世神的力量确是封印在魔魂水晶之中。\n流言在大陆上蔓延，终于也溜进了众神的耳朵。在为此举行的神山聚会中，众神公开讨论了这个流言的来历和可笑。但是不久后的一天，智慧神欧斯在想要偷偷溜进科洛诺斯神殿研究魔魂水晶时，却发现盖亚也正在围绕魔魂水晶喃喃自语——事实上，众神并没有摆脱力量的诱惑，试试总是好的\u0026hellip;\u0026hellip;.\n众神因为贪婪互相怀疑，当怀疑在大家心中都明了时，就变成了争执，当争执变得没有用途，就开始了战斗\u0026hellip;\u0026hellip;诸神的力量和单纯给他们带来荣耀，也带来了幼稚，他们甚至刚愎自用到相信自己的胜利能给大家带来好处。\n欧斯渴求无尽神秘，\n撒拉愿世界秩序井然，\n盖亚希望世界草长鹰飞，\n奈落推动混沌死亡，\n寇德高呼战争热血\u0026hellip;\u0026hellip;\n众神们都只对自己的目标神往不已，单纯的渴望最终化为执迷萦绕心间，但现实世界中的情况无法让任何一位满足，此时，还有什么比自己创造世界更好的事情呢？还有什么比得到创始神的力量更重要呢？\n正如撒拉所言，人类有问题祈求神，神有问题又路在何方？\n没有人知道战争发生的具体时刻，没有人亲眼见到这次众神之乱的景象，只有希律斯之上的滚滚雷云，闪闪火光依稀诉说着什么，映在每个生灵惊恐的眼中。人类纷纷跪下祈祷，愿灾难不要降临自己身上。\n而最终发生的，也是标志一切结束的，便是魔魂水晶的爆炸\u0026hellip;\u0026hellip;\n诸神在爆炸中消逝了，虽然人们说神不会死亡，但的确没有人再听说过神迹的出现；水晶的碎片如雨般飞出，巨大的能量紧接着覆盖整个希律斯山地，带来的冲击撼动亚特四方；约一成的生物在这次爆炸中死亡，远在极北的的雪狼在都在能量的冲击下暴躁不已；地下的鬼魂和妖灵一齐苏醒狂呼，直至今日还有部分无法安眠。\n水晶的作用便是压制空无，失去了水晶的压制，无之力量在神山废墟之上形成了一个巨大的漩涡。世界在它的引力下扭曲，不断有物质进入泯灭，如果不阻止它，用不了一年，世界便将重新归于虚无。\n众神之父被惊醒了，他吃惊的发现他创造的世界在走向衰微。而失去了魔魂水晶，他的力量已经不足以再创造一个水晶或新世界。失望的神再也不能容忍毁灭与无限的孤寂，他毅然投入空无之中，用自身的实在换取虚无的平衡。\n是的，这个世界上可以没有神，但不能没有故事。\n神终将远去，而世界长存。\n九 圣战魔魂\r#\r\r“神是一回事，而信仰是另一回事。我的欲望则总是头等大事”\n——我心中的魔魂\n水晶爆炸后的大陆充满了魔物与动荡。但水晶的碎片——魔魂宝石却帮助了人们，虽然只是碎片，但科洛诺斯不朽的灵魂和力量仍然寄附其上，让每个拥有者有逆转局面的机会。当然，宝石并不多见，地表的早已被人取走，剩下的不是被可怕的怪物拥有，便是深埋与地下的矿藏之中。\n与水晶一起出现的是幻兽。传闻中他们是被诅咒的众神。在爆炸中，他们失去了神的能力，并受到科洛诺斯的诅咒，为了从这样的境地中解脱出来，他们化为幻兽保护着魔魂宝石，期待有一天它能够重新复原成魔魂水晶。现在他们和大陆上最平凡的生命一样会死亡，可是背负诅咒的灵魂只能在蛋与兽之间循环不息。幻兽乐于帮助人类，这不仅因为人类曾是被他们选择的造物，更是因为他们认为人类是能最终解除他们诅咒的钥匙。\n在此后漫长的岁月中，失去了所有神的人类却依旧为宗教而狂热，仿佛他们崇拜的不是神——而是崇拜本身。他们依旧祈祷，依旧礼拜，士兵们依旧充满圣战的热望。\n而毫无信仰的的魔族更是不受影响地充实的生活。杀戮与被杀，奴役与被奴役，仿佛本身就是作为魔族生命的目的而存在，魔鬼之魂从不空虚，永不停息\u0026hellip;\u0026hellip;\n十 封神降临\r#\r\r亚特大教廷的考古学者·阿卜杜拉在圣歌神殿附近发现了一份神秘的卷宗，这份卷宗是用一种十分古怪且难以辨识的文字符号书写而成的。\n阿卜杜拉是亚特大陆最负盛名的考古学家，可是他却无法辨认这些神奇的文字符号，于是，他把这份残破古旧的卷宗带回了大教廷。很快，教皇在粗略阅读了该卷宗后大为震惊，他认为那些古怪文字的背后很可能隐藏着上古神祗的惊人秘密。\n第二天，破译神秘卷宗的行动席卷了整个亚特学术界，人类学家、哲学家、神学家、数学家、艺术家……各个领域的精英一齐参与到了这个浩大的工程中来。\n破译行动艰苦而漫长，耗费了全人类极大的人力、物力和财力，终于，在六年四个月零五天之后，这份残卷的核心部分总算被破译出来了，令全人类感到惊恐又期待的事实是——那些神秘的文字符号居然是神的语言……\n十一 神卷的曙光\r#\r\r《亚特志残卷破译部分——神印》\n在旷日持久的灭世之战中，人类和精灵们付出了惨重的代价，在杀与被杀中缓缓的迈向绝望的深渊，和平和幸福渐行渐远。那时，为了避开亚特大陆的纷争，上古诸神们长途跋涉，隐居到了大陆彼端的异界塔拉利亚。而对人类尚存有怜悯之心的主神·比亚在临走之前目睹了人类的苦难之后，作出了一个令神界大为震惊的举措。\n比亚在亚特大陆的人类之中挑选除了十二位品德兼优的精英，运用自己的造物之力赐予了他们强大无比的神力，他更把自己的神器“雷霆”分解为十二件神物，分别赠予这十二位接受了神赐的人类，由于具备了亘古不变的灵魂和肉体，拥有了无所不知、无所不能的神力，这十二个人类就成了自万神之父创世以来的唯一一批由人转化为神的生灵。\n这样一件前无古人后无来者的举动犯了神界的大忌，上古神祗们囚禁了比亚，对他严刑拷打，用尽毒计，逼迫他放弃自己的信仰，放弃对人类的怜悯。可是作为真理之神的比亚对自己的言行毫不后悔，最终被诸神们放逐到了异界深渊之中，永世不得解脱。\n获得了新生的十二神在亚特大陆和魔都之间建立起一座宏伟的神山，这座巨山高耸入云，长年云雾缭绕。十二神就选择了这块地方来建造他们的宫殿，并在那里治理世界。在云海之上，是一条条柱廊，柱廊前面是长着奇花异草的花园。强风从来不会刮到这个乐园，这些坚如磐石的宫殿，上空也从未出现过暴风骤雨。山顶上总是风和日丽，阳光明媚，花香扑鼻。\n十二神们各具神通，掌管着人类的一切，也守护着人类的一切，因此，他们被称为十二守护神，而他们所居住的那座神山正是泛人类地带最后的屏障——庇护山。\n由于十二守护神的介入和庇护山那难以逾越的阻隔，魔都的势力终究无法完全侵入亚特大陆，暗黑领主和魔王们勾画着一次又一次惨烈的进攻，但都以失败告终，直至灭世之战的最后一役——庇护结界之争。\n魔族打着灭亡十二守护神的大旗，浩浩荡荡的向庇护山进发，年老体衰的暗黑领主不惜安危亲征，更是派出前所未有的斥候队深入庇护山的结界附近刺探军情。\n在魔都势力倾其所有的努力下，十二守护神的软肋浮出水面——他们那无所不能的神力来源于由“雷霆”转化而来的十二件神物，一旦失去了这十二件神物，他们的“真神之力”将大幅度下降，不死之身也将烟消云散。\n得知了这一惊人的消息后，魔都大军犹如潮水一般涌入庇护山的结界，七大戒灵和魔王们轮番对结界施加黑魔法。受到大举进犯的十二神们迅速联合起来，在庇护山的另一边殊死抵抗，人类盟军相继加入。\n战斗持续了很久，原本的强大的十二神由于泄露了十二件神物的所在，被魔族们乘虚而入，最早的庇护山结界被打破了。在庇护神殿，十二件神物被暗黑领主的爪牙们劫掠一空，千钧一发之际，幸存的战神·赫菲斯托斯和智慧之神·海伦斯聚集起最后的神力冲破了魔族的堵截，夺回了十二件神物，并把它们封印在庇护山的十二个不为人知的地方。\n完成这一切之后，由于失去了“真神之力”和“不死之身”，他们的肉体立刻就消亡了，而接受了神赐的灵魂依然不灭。为了保护人类，继承主神·比亚的博爱之心，十二守护神的灵魂聚集到一起，在人类之地——雷鸣大陆的圣歌神殿里形成了一道无以伦比的“神印”。\n十二 封神英雄令\r#\r\r在亚特大教廷的不懈努力下，《亚特志残卷—神印》已被破译，“神印”的奥秘终于真相大白，这是十二守护神留给我们的最后希望。“神印”凝聚了庇护山十二神的灵魂力量，只有作为神之臣民的我们才有可能通过，而混沌的魔族一旦接近，则立刻化为乌有。\n大法师崔尔登的研究成果更是揭示了一个惊天动地的秘密：通过蓝袍魔法议会的最新指引魔法的协助，我们可以通过“神印”进入庇护山内，而传说中的可以让人类转化为“神”的十二件神物正是被封印在神山内的十二处神秘地点！\n根据《亚特志残卷》的记载，在“封神战争”中，许多强大的魔物也被“神印”困在神山之内，它们对人类和十二神恨之入骨，因此，一旦有人通过“神印”进入神山之后，与这些魔物的血战将不可避免。而那些能够击败魔物并存活下来的勇士，将获得探寻十二件神物的机会。如果有幸在九死一生之后得到神物天赐的“真神之力”，一个普通的人类将成为无所不知、无所不能的神祗，缔造一段属于自己的神话！\n十三 噩夜降临\r#\r\r“正如实与虚彼此相生，光与暗亦是永恒相连。\n世间万物，古今大道，从未有过孤妄而独立的存在。\n是的，从未有过。”\n——希律斯古谚\n自从神与人共同联手，对抗在雷鸣大陆上横行的魔军，已经过去了整整一年。\n所有人都沉浸在魔军节节败退的狂喜之中不能自己，却从未有人注意到，在照耀的光明之畔，浓重的黑暗，正无声地匍匐而来。\n在那个全城狂欢的夜里，卡诺萨卫城的圣索兰大教堂中，巨大的水晶十字架一夜之间被倒挂悬置，十二名修士的尸体被锋利的骨钉穿透、悬挂其上，鲜血染红了整面圣墙。\n这种对神明极端亵渎的行为迅速轰动了整个亚特大陆。循着骨钉这一最富代表性的线索，众人的矛头首先指向了隐雾刺客公会，一时间，原本猎杀他人的隐雾刺客，成了遭人猎杀的目标。\n出乎意料的事接踵而来，在当周的万人礼拜仪式上，圣伊索兰大祭司向全体信徒宣告，这起案件与隐雾刺客公会无关，请大家停止无意义的屠杀。但当有一名虔诚的信徒高声发问刽子手的下落时，大祭司只是默而不答，继而匆忙转身离开。\n所有在场的人，都看到了他眉宇间紧锁的忧虑，宛如那天下午铅灰色的阴沉天空。\n在这种沉默的迷茫之中，死亡与恐惧像瘴气一样，在这片大陆上蔓延开来。每周都有许多人不断地死去：修士、幻兽师，最后甚至是祭司与圣殿卫兵，凶手的作案方式如出一辙，倒挂十字架，骨钉穿体，钉于其上。\n亚特大陆陷入了从未有过的恐慌之中，各种诡异的灾厄也不断发生：蝗灾、洪水、飓风、瘟疫，神山先知们的一切占卜方式都失去了效果。\n在后人形容起这一段时光时，不约而同地使用了“噩夜”这个词语——没有尽头的黑夜，死亡的恐惧像噩梦一样扼住了咽喉，人们只有颤抖地蜷缩在一起，祈祷着第一缕曙光的到来。\n十四 刹那黎明\r#\r\r时至今日，当卡诺萨首席戍卫官雷蒙塔尔回忆起第一名高等魔族斥候落网时的情景，脸上仍然残存着惊恐的余波。\n那是一名身高1.2拓（约为正常人类1.5倍）的高级魔族斥候，它的外形看起来更像一个人类，它有着细长而有力的双腿与可以任意伸缩的双臂，与能够随时变色的鳞状皮肤，它被装在厚重的钢笼之中，血红的发光眼眸仿佛两颗熔化的铜球，令人不敢对视；它的手足与颈部，套着厚厚的特质钢铐，在囚禁它的粗大铁链与钢柱上，有红色的符文在疾速流动，那是一种高级禁制咒文，只要被囚禁者稍有破坏行为，它们将自动变短或是收紧，破坏者将面临筋骨碎裂的可怕结果。\n那名斥候似乎对这种咒文的威力相当了解，面对着严酷的审问，它表现得冷静而理智，这使得负责审问的刑讯官·保罗非常难堪。因为面前这名高级魔军斥候的逻辑与反应，完全超过了他的知识范畴。最后，他不得不尝试着使用讯问政治犯的方式，想从这名高傲魔族的嘴里，撬出更多关于这一系列凶案的信息。\n在连续两个月的绝食对抗与刑讯逼供之后，极度虚弱的魔族斥候终于表示愿意用口供交换食物。一封封密函连续不断地由监审官誊写出来，寄往雷蒙塔尔的官邸。\n直到这些厚厚的文书在雷蒙塔尔的书桌上堆成了一本辞典，他才从阳光明媚的东部海岸渡假归来。但很显然，他的好心情将无以为继，在那个他翻开这本讯问笔录的清晨。\n“起初我只是带着漫不经心的情绪，翻看着这本没有特别署名的笔录。\n但在看了数页之后，那字里行间透露的讯息，带着凄厉的呼号撞入眼底，冲击着我的心脏。\n我不由自主地屏住呼吸，像是一个幼童第一次看到了最壮绝怪异的天文奇观。\n但我越是阅读，那些锐利的字眼就越像烧红的烙铁一样，穿透我的双目、直达心脏，使我全身战抖、几欲窒息。\n在大致翻阅完整份笔录后，我重重地合上它，起身走到窗边，长出了一口气。\n我确信我将是整个亚特大陆，不，是整个人界与神界，亲眼证实这旷世异象的第一人。\n隐匿已久的黑暗终于到了喷发的时刻，蓄势待发数百年之久后，魔族的力量已经今非昔比，它们正策划着颠覆整个人界与神界！我将把这个消息立即禀报女王——是的，立即。”\n——雷蒙塔尔日记·北历1084年10月17日\n圣山的光芒仅仅在亚特大陆上一掠而过，宛如雪狼冰湖上空那稍纵即逝的北极光，漫漫的长夜与噩梦重又碾压而来。\n在这刹那的黎明之间，天地静默、万物无声，连圣山神殿的光辉都不复存在，它沐浴于一弯血红的冷月之下，静静俯视着这片大陆上的风云动荡与万千苍生。\n十五 暗星复仇\r#\r\r“那被无情地放逐的子民，终要重执复仇的剑，正如耀星运行至天轨顶端之时，暗星终将归来。”\n——魔皇·希摩尔三世\n在被流放边疆数十年后，巴德拉克二世唯一亲人——希摩尔三世终于潜回了魔都巴尔索伦，凭借着在残酷环境中锤炼而成的强健体魄和与生俱来的领袖才能，他轻而易举地发动了一场政变，成功地将亚安一世送上了断头台。\n昏庸无能的亚安一世留下的，除了千古的骂名之外，只有一个满目疮痍的国家。希摩尔三世甫一登基，便连续发布了一系列有效的政令，魔族的综合国力在数十年间呈现了飞跃式的发展。\n正当整个魔族都埋首于重建家园的时候，一个更令人振奋的消息传来，在魔族大陆东部的一个废弃神殿中，发现了失落已久的魔族圣物——暗十字封印。\n暗十字封印的现世，对于希摩尔三世乃至整个魔族而言，不啻为一件惊天的喜事。\n原本被歧视与流放的魔族魔法师们被永夜魔法高塔重新召集起来，夜以继日地研究汲取和转化暗十字封印中巨大能量的方法，在一段时间内，永夜魔法高塔内耀眼的魔法光芒，在相距近百里的永夜谷口，都清晰可见。\n很快地，暗十字封印中的能量被有效地释放并且转换，当紫黑色的光芒沿着传导器流入那些巴德拉克时代留下的、沉寂已久的魔法机械时，它们缓缓地启动并开始运转，宛如从洪荒时代沉睡至今的巨兽，在苏醒的刹那发出震耳欲聋的轰鸣。\n在场的数万名魔族欢呼起来，尽管那撼天动地的声响在人类的耳中听来，只是野兽亢奋的嘶吼。希摩尔三世站在高高的的观礼台上，望着脚下的民众，面色淡然，自言自语般地说道：“是的，这是一个最坏的时代，但这又是一个最好的时代。”\n有了暗十字封印的协助，魔族经济与军事的发展速度，已然不能用一日千里来形容。更多的高级魔族兵种迅速诞生并被培养壮大，这些结合了力量与智慧的高级魔族无论从外形或是实力上，都远远超过了游荡在亚特大陆上的低等魔族。从某些角度上看，他们似乎更表现出许多与人族与神族的相似性。是的，他们正一步步接近彼此共同的祖先——创始神·科洛斯。\n但尽管如此，混沌之神奈落那渴望战斗与扩张的血液，仍然在魔族的血管中流淌着，宛如一个不可消解的诅咒。自身力量越是强大、自我意识越是清醒，这种情绪就越是旺盛，仿佛火山口下封印千年的炽热岩浆，终有冲破阻碍、劫掠四野的一天。\n北历1083年3月21日，一份由希摩尔三世亲笔签署的绝密文书，由副官递交到了魔族最高统帅·亚斯塔鲁的手中。他拆开信封，将整份手谕仔仔细细地读了三遍之后，在窗边伫立良久，随即转头向身后的副官说道：“传令下去，全军备战，即日远征。”\n年轻的副官一时间不能理解长官的意图，问：“远征何处？”\n亚斯塔鲁负手而立，远眺窗外紫黑色云海尽头的那一线炫目的闪耀白光，慨然道：“世界的另一个尽头。”\n“圣皇之密令，所言极是。\n我族本乃圣山众神之血亲，自当受命于众神之下，发令于众生之前。\n奈何众神为争一己之私利，悍然相斗，终致魔魂水晶损毁、世界破碎。\n千余年来，我族退回魔界大陆，隐遁辞世、自谋复兴，未曾与他族图谋相争。\n然近来则有一众神族余孽，假借众神名义，为凡人授以神格，助其对我族之亚特大陆遗民大肆屠杀。我族遗民之血泪哭号，常入我梦，不忍卒听。\n而今我族励精图治，已重振神威，加之圣物暗十字封印现世，更为先辈诸神授意我族清扫余孽、重返故土之天兆也。\n故此，余当以一己之身、率全族之力，助圣皇及先辈诸神，遂我族千年之夙愿。\n余万死而不辞也！”\n——亚斯塔鲁日记·北历1083年3月21日。\n十六 未尽的尾声\r#\r\r据说这一天晚上，亚特大陆之上的所有占星师都观测到了一个从未见过的奇异天象：\n在一轮明亮的满月之后，淡淡映出一轮血红色的暗黑之月，两轮满月相伴而行，不时相互交叠掩盖，仿佛在进行一场永无止息的拉锯战。\n是的，这是“双月凌空”，仅仅记载于希律斯古卷之中的奇异天象，它预示着光明消减、混沌来袭，世界又将陷入另一场动荡之中。\n隐匿的黑暗在阳光的缝隙里匍匐蔓延而来，经过数百年的励精图治，今日魔族的实力已是远远凌驾于人族之上，他们凭借着天生的强健体魄与暗十字封印的力量，创制出强力的魔动机械、高级魔族兵种、甚至还有可怕的暗黑系终极魔法。\n这场席卷神、人、魔三族的动荡，谁将胜出？谁将落败？创始神科洛斯留下的两种力量，将何去何从？这个世界的命运，究竟将执掌于谁人之手？\n这一切的问题，谁也没有明确的答案。\n“正午的阳光下，在狮子留下的鹰的影子里，即为众神之国。”\n也许最终的答案，就在这个由创世之初流传至今的亘古之谜里…… 若你放弃奢望，你将远离凡人的哀伤。因你的心已覆上黑暗的坚甲，伤无可伤。 ——《魔族重装骑兵军规•第二条》\n灭世魔劫\r#\r\r阿拉玛——罗伊斯•阿拉玛，原本是亚特教廷的一名圣殿骑士，在立誓侍奉神明之后的十年里，性情敦厚的他一直扮演着骑士方阵中侧翼掩护手的角色。 如果命运没有将他推到时代的舞台前，也许他将在这个位置上服役终老，在有幸活着退役之后，领到一份不错的养老金，但在雪狼冰原的那场与魔族第三远征军的遭遇战中，他意外地与正从侧翼领军突袭的魔族大将——剑脊者•昆泰狭路相逢。 凭借着对神明坚定的信仰、与近十年出生入死的战斗经验，阿拉玛奇迹般地战胜了这名领军大将，失去统帅的魔族军队立刻阵脚大乱，圣殿骑士团白马银甲的洪流划破白茫茫的雪原，像锋利的镰刀一般，井然有序地开始收割剩余的魔军——这一仗，魔族第三远征军全军覆没，而圣殿骑士团的损失仅仅是二十余名轻装骑兵。\n　大捷而归的阿拉玛成了众人眼中的英雄，他婉言谢绝了麦迪文大公的女儿——菲尔瓦娜•麦迪文的垂青，回到家乡与他的青梅竹马——女药剂师•爱娜，结为夫妻。 有人说过女人的妒火是世上最可怕的东西，这句话不幸地被阿拉玛的故事证实了。自觉大失颜面的菲尔瓦娜决定报复一下这名不识抬举的乡下骑士，她买通了夕阳镇教堂的大祭司，将爱娜以研制亡灵药剂、传播黑暗巫术的名义逮捕起来，在经历了整整两个月的拷打与凌辱之后，性格柔弱的药剂师爱娜终于不堪忍受，在认罪书上签下了自己的名字。 行刑的那一天，天空中阴云翻滚、不见一丝阳光。 夕阳镇中心广场上高高地竖起的火刑架上，衣衫残破、浑身血污的爱娜被四枚粗大的铁钉穿过手腕、悬挂其上，愚昧的村民围绕四周，高声唾骂着、向她投掷石块、喷吐污痰。大祭司似乎对这一次完美的煽动行为非常满意，待到民众发泄完毕后，他才缓缓起身，宣布刑罚开始。 火刑架下的柴堆被点着，猩红的火舌窜跃升腾、宛如毒蛇，据目击者回忆，在起初还能听到这名女子的高声祈祷与哭诉，但不久之后就变成了痛苦的嘶吼与号哭，但这声响并没有持续很久，就逐渐减弱下去，最终被淹没在围观民众那病态得近乎癫狂的欢呼声之中。\n　在以往，扮演着救赎者的圣殿骑士团总能在最危急的时刻，如同天使卫队一般，披着闪耀的光华轰然现身，拯救在苦难中挣扎的人们。 但这一回，阿拉玛来得太晚。 他一得到消息便日夜兼程、千里返乡，但当他策马冲开人群之时，却只能看到火刑架上，那一具已经被大火灼烧得面目全非的焦黑尸体，悲愤和自责瞬间充溢了他的胸怀，他跪在火刑架前仰天悲号，但天空中只有铅灰色的乌云，低低地压在古旧残破的夕阳镇教堂尖顶上，除此之外，一片死寂，甚至连一丝风都没有。 片刻之后，阿拉玛抱起爱娜焦黑的尸体，穿过仍在唾骂不止的人群，策马远去。\n　没有人知道阿拉玛后来去了哪里，只有圣殿骑士团随即发出的那张公告上，用义正言辞的官方语调，宣告罗伊斯•阿拉玛与妻子爱娜•阿拉玛由于为魔族传播黑暗巫术，被裁定逐出亚特大陆，永世不得回还。\n　七年后，午夜，夕阳镇。 仅存的村民被魔军包围在镇上的中心广场里，四周低矮的砖瓦房在狂烈的火焰中倾斜、扭曲、最终倒塌。恐惧的民众们向黑暗中的魔军跪地求饶，发誓愿屈身为奴、换得苟活余生的恩赐。 但魔军在黑暗里静默着，那一双双黑暗中发着红光的双眼，俯视着面前这群卑怯的生物。 这时教堂后的山岗上传来一声命令般的怒吼，村民们循声望去，那是一名身形高大的黑盔骑士，胯下的黑色战马，双眼红光迸射，喷吐的鼻息之中竟有青红色的火焰与灼热的火星！ “是阿拉玛，他回来复仇了！圣殿骑士•阿拉玛！！！”一名村民高声惊叫起来。 黑骑士拔出佩剑，直指夜空，那剑上瞬间烧起狂怒的烈焰。 “汝等所言之人已死，吾乃复仇骑士•阿拉玛。今日便是你们偿还血债的审判之日！” 村民们恐惧地瞪大了双眼，那无数双圆睁的瞳仁中，黑骑士的烈焰长剑毫不迟疑地落下，直指被大火包围的夕阳镇中心广场！ ……\n　据亚特教廷事后统计，夕阳镇一千一百名村民与三百余间民房，一夜之间毁损殆尽。在惨案现场除了焦黑的尸体之外，还发现了一连串深入石中的马蹄印，马蹄印的边缘甚至还燃烧着炽热的火焰。\n　从此，复仇骑士•阿拉玛的传说，开始在亚特大陆上不胫而走\n"},{"id":179,"href":"/posts/machine_learning/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%9C%AF%E8%AF%AD/","title":"人工智能术语","section":"机器学习","content":"人工智能：一种计算机科学分支，旨在让计算机达到人类的智慧。实现这一目标有很多方式，包括机器学习和深度学习。\n机器学习：一系列相关技术，用于训练计算机执行特定的任务。\n神经网络：一种机器学习结构，灵感来自人类大脑的神经元网络。神经网络是深度学习的基本概念。\n深度学习：机器学习的一个分支，利用多层神经网络实现目标。通常“机器学习”和“深度学习”可以相互指代。 机器学习和深度学习也有很多分支和特殊技术。一个典型示例是监督式学习和非监督式学习。\n简而言之，在监督式学习过程中，你知道你希望计算机学习什么，而在非监督式学习过程中，你会让计算机自己去判断要学习什么。监督式学习是最常见的机器学习类型\n"},{"id":180,"href":"/posts/material2/angular-material-%E4%B8%BB%E4%BD%93%E5%8C%96%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6/","title":"Angular Material 主体化自定义组件","section":"mererial2","content":"Theming your custom components\r#\r\r主体化自定义的组件\r#\r\rIn order to style your own components with Angular Material\u0026rsquo;s tooling, the component\u0026rsquo;s styles must be defined with Sass.\n为了使用Angular Material的工具设计自己的组件，组件的样式必须用Sass定义。\nUsing @mixin to automatically apply a theme\r#\r\r使用@mixin自动应用主题\r#\r\rWhy using @mixin\r#\r\rThe advantage of using a @mixin function is that when you change your theme, every file that uses it will be automatically updated. Calling the @mixin with a different theme argument allows multiple themes within the app or component.\nHow to use @mixin\r#\r\r怎样使用@mixin\r#\r\rWe can better theme our custom components by adding a @mixin function to its theme file, and then call this function to apply a theme.\nAll you need is to create a @mixin function in the custom-component-theme.scss\n使用 @mixin 函数的优势在于，当您更改主题时，每个使用它的文件都会自动更新。\n// Import all the tools needed to customize the theme and extract parts of it @import \u0026#39;~@angular/material/theming\u0026#39;; // Define a mixin that accepts a theme and outputs the color styles for the component. @mixincandy-carousel-theme($theme) { // Extract whichever individual palettes you need from the theme.  $primary: map-get($theme, primary); $accent: map-get($theme, accent); // Use mat-color to extract individual colors from a palette as necessary.  .candy-carousel { background-color: mat-color($primary); border-color: mat-color($accent, A400); } } Now you just have to call the @mixin function to apply the theme:\n现在你只需要调用@mixin函数来应用主题：\n// Import a pre-built theme @import \u0026#39;~@angular/material/prebuilt-themes/deeppurple-amber.css\u0026#39;; // Import your custom input theme file so you can call the custom-input-theme function @import \u0026#39;app/candy-carousel/candy-carousel-theme.scss\u0026#39;; // Using the $theme variable from the pre-built theme you can call the theming function @includecandy-carousel-theme($theme); For more details about the theming functions, see the comments in the source.\n有关主题功能的更多详细信息，请参阅源代码.中的注释。\nBest practices using @mixin\r#\r\r@mixin 的最佳使用方式\r#\r\rWhen using @mixin, the theme file should only contain the definitions that are affected by the passed-in theme.\n使用@mixin时，主题文件应只包含受传入主题影响的定义。\nAll styles that are not affected by the theme should be placed in a candy-carousel.scss file. This file should contain everything that is not affected by the theme like sizes, transitions\u0026hellip;\n所有不受主题影响的样式应放置在 candy-carousel.scss 文件中。这个文件应该包含所有不受大小，转换等主题影响的内容\u0026hellip;\u0026hellip;\nStyles that are affected by the theme should be placed in a separated theming file as _candy-carousel-theme.scss and the file should have a _ before the name. This file should contain the @mixin function responsible for applying the theme to the component.\n受该主题影响的样式应该放置在一个单独的主题文件中，名称为 _candy-carousel-theme.scss，并且该文件的名称前应该有一个_。该文件应该包含负责将主题应用到组件的@mixin函数。\nUsing colors from a palette\r#\r\r使用调色板中的颜色\r#\r\rYou can consume the theming functions and Material palette variables from @angular/material/theming. You can use the mat-color function to extract a specific color from a palette. For example:\n您可以使用 @ngular/material/theming 中的主题功能和材料调色板变量。您可以使用底色功能从调色板中提取特定颜色。例如：\n// Import theming functions @import \u0026#39;~@angular/material/theming\u0026#39;; // Import your custom theme @import \u0026#39;src/unicorn-app-theme.scss\u0026#39;; // Use mat-color to extract individual colors from a palette as necessary. // The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured // hues (default, lighter, darker), or any of the aforementioned prefixed with \u0026#34;-contrast\u0026#34;. // For example a hue of \u0026#34;darker-contrast\u0026#34; gives a light color to contrast with a \u0026#34;darker\u0026#34; hue. // Note that quotes are needed when using a numeric hue with the \u0026#34;-contrast\u0026#34; modifier. // Available color palettes: https://material.io/design/color/ .candy-carousel { background-color: mat-color($candy-app-primary); border-color: mat-color($candy-app-accent, A400); color: mat-color($candy-app-primary, \u0026#39;100-contrast\u0026#39;); } "},{"id":181,"href":"/posts/material2/angular-material%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E4%B8%BB%E9%A2%98%E5%8C%96/","title":"Angular Material应用程序主题化","section":"mererial2","content":"Theming your Angular Material app\r#\r\r将您的Angular Material应用程序主题化\r#\r\rWhat is a theme?\r#\r\r什么是主题？\r#\r\rA theme is the set of colors that will be applied to the Angular Material components. The library\u0026rsquo;s approach to theming is based on the guidance from the Material Design spec.\n主题是将应用于 Angular Material 组件的一组颜色。库的主题化方法基于Material设计规范的指导。\nIn Angular Material, a theme is created by composing multiple palettes. In particular, a theme consists of:\n在Angular Material中，通过组合多个调色板来创建主题。特别是，一个主题包括：\n A primary palette: colors most widely used across all screens and components.\n主调色板：在所有屏幕和组件中使用最广泛的颜色。 An accent palette: colors used for the floating action button and interactive elements.\n重音调色板：用于浮动动作按钮和交互式元素的颜色。 A warn palette: colors used to convey error state.\n警告调色板：用于传达错误状态的颜色。 A foreground palette: colors for text and icons.\n前景调色板：文字和图标的颜色。 A background palette: colors used for element backgrounds.\n背景调色板：用于元素背景的颜色。  In Angular Material, all theme styles are generated statically at build-time so that your app doesn\u0026rsquo;t have to spend cycles generating theme styles on startup.\n在Angular Material中，所有主题样式都是在构建时静态生成的，以便您的应用程序不必在启动时花费周期来生成主题样式。\nUsing a pre-built theme\r#\r\r使用预先构建的主题\r#\r\rAngular Material comes prepackaged with several pre-built theme css files. These theme files also include all of the styles for core (styles common to all components), so you only have to include a single css file for Angular Material in your app.\nAngular Material预装了几个预先构建的主题css文件。这些主题文件还包括核心的所有样式（所有组件通用的样式），所以你只需要在你的应用中包含一个用于Angular Material的css文件。\nYou can include a theme file directly into your application from @angular/material/prebuilt-themes\n您可以直接从您的应用程序中包含主题文件@angular/material/prebuilt-themes\nAvailable pre-built themes:\n可用的预建主题:\n deeppurple-amber.css\n深紫色-琥珀色.css indigo-pink.css 靛青-粉红.css pink-bluegrey.css\n粉红-蓝灰 purple-green.css\n紫色-绿.css  If you\u0026rsquo;re using Angular CLI, this is as simple as including one line in your styles.css file:\n如果您使用的是Angular CLI，这与在styles.css文件中包含一行一样简单：\n@import \u0026#39;~@angular/material/prebuilt-themes/deeppurple-amber.css\u0026#39;; Alternatively, you can just reference the file directly. This would look something like:\n或者，您可以直接引用该文件。这看起来像这样：\n\u0026lt;link href=\u0026#34;node_modules/@angular/material/prebuilt-themes/indigo-pink.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; The actual path will depend on your server setup.\n实际路径将取决于您的服务器设置\nYou can also concatenate the file with the rest of your application\u0026rsquo;s css.\n您还可以将该文件与应用程序的其余CSS进行连接.\nFinally, if your app\u0026rsquo;s content is not placed inside of a mat-sidenav-container element, you need to add the mat-app-background class to your wrapper element (for example the body). This ensures that the proper theme background is applied to your page.\n最后，如果你的应用程序的内容没有放置在 mat-sidenav-container 元素中，您需要将 mat-app-background 类添加到包装器元素（例如正文)。这可确保正确的主题背景应用于您的页面\nDefining a custom theme\r#\r\r定义自定义主题\r#\r\rWhen you want more customization than a pre-built theme offers, you can create your own theme file.\n当您需要比预先构建的主题优惠更多的自定义功能时，您可以创建自己的主题文件。\nA custom theme file does two things:\n自定义主题文件有两件事：\n Imports the mat-core() sass mixin. This includes all common styles that are used by multiple components. This should only be included once in your application. If this mixin is included multiple times, your application will end up with multiple copies of these common styles.\n导入 mat-core（） sass 混合。这包括多个组件使用的所有常见样式。 这应该只在你的应用程序中包含一次。 如果这个mixin包含多次，你的应用程序将最终得到这些常用样式的多个副本。 Defines a theme data structure as the composition of multiple palettes. This object can be created with either the mat-light-theme function or the mat-dark-theme function. The output of this function is then passed to the angular-material-theme mixin, which will output all of the corresponding styles for the theme.\n将 主题 数据结构定义为多个调色板的组合。可以使用 mat-light-theme 方法或 mat-dark-theme 方法创建此对象。 然后将方法的输出传递给 angular-material-theme 混合，它将输出主题的所有对应样式。  A typical theme file will look something like this:\n一个典型的主题文件将如下所示：\n@import \u0026#39;~@angular/material/theming\u0026#39;; // Plus imports for other components in your app.  // Include the common styles for Angular Material. We include this here so that you only // have to load a single css file for Angular Material in your app. // Be sure that you only ever include this mixin once! @includemat-core(); // Define the palettes for your theme using the Material Design palettes available in palette.scss // (imported above). For each palette, you can optionally specify a default, lighter, and darker // hue. Available color palettes: https://material.io/design/color/ $candy-app-primary: mat-palette($mat-indigo); $candy-app-accent: mat-palette($mat-pink, A200, A100, A400); // The warn palette is optional (defaults to red). $candy-app-warn: mat-palette($mat-red); // Create the theme object (a Sass map containing all of the palettes). $candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn); // Include theme styles for core and each component used in your app. // Alternatively, you can import and @include the theme mixins for each component // that you are using. @includeangular-material-theme($candy-app-theme); You only need this single Sass file; you do not need to use Sass to style the rest of your app.\n你只需要这个单一的Sass文件;您不需要使用Sass来设计应用程序的其余部分。\nIf you are using the Angular CLI, support for compiling Sass to css is built-in; you only have to add a new entry to the \u0026quot;styles\u0026quot; list in angular-cli.json pointing to the theme file (e.g., unicorn-app-theme.scss).\n如果您使用Angular CLI，则支持将Sass编译为css，这是内置的;您只需在 angular-cli.json 中指向主题文件（例如，unicorn-app-theme.scss）的 “样式” 列表中添加一个新条目。\nIf you\u0026rsquo;re not using the Angular CLI, you can use any existing Sass tooling to build the file (such as gulp-sass or grunt-sass). The simplest approach is to use the node-sass CLI; you simply run:\n如果您不使用Angular CLI，则可以使用任何现有的Sass工具来构建文件（如gulp-sass或grunt-sass）。 最简单的方法是使用节点sass CLI;你只需运行：\nnode-sass src/unicorn-app-theme.scss dist/unicorn-app-theme.css and then include the output file in your index.html.\n然后将输出文件包含在index.html中。\nThe theme file should not be imported into other SCSS files. This will cause duplicate styles to be written into your CSS output. If you want to consume the theme definition object (e.g., $candy-app-theme) in other SCSS files, then the definition of the theme object should be broken into its own file, separate from the inclusion of the mat-core and angular-material-theme mixins.\n主题文件不应该导入到其他SCSS文件中。这会导致重复样式被写入您的CSS输出。如果您想在其他SCSS文件中使用主题定义对象（例如 $candy-app-theme）。那么主题对象的定义应该被分解到它自己的文件中，与包含 mat-core 和 angular-material-theme mixins分开。\nThe theme file can be concatenated and minified with the rest of the application\u0026rsquo;s css.\n主题文件可以与应用程序的其余部分进行连接和缩小。\nNote that if you include the generated theme file in the styleUrls of an Angular component, those styles will be subject to that component\u0026rsquo;s view encapsulation.\n请注意，如果您将生成的主题文件包含在Angular组件的styleUrls中，则这些样式将受该组件的视图封装支配。\nMultiple themes\r#\r\r多主题\r#\r\rYou can create multiple themes for your application by including the angular-material-theme mixin multiple times, where each inclusion is gated by an additional CSS class.\n您可以通过多次包含 angular-material-theme 混合来创建应用程序的多个主题，其中每个包含都由额外的CSS类进行门控。\nRemember to only ever include the @mat-core mixin only once; it should not be included for each theme.\n记住只有一次只包含 @mat-core 混合;它不应该包含在每个主题中。\nExample of defining multiple themes:\r#\r\r定义多主题的示例:\r#\r\r@import \u0026#39;~@angular/material/theming\u0026#39;; // Plus imports for other components in your app.  // Include the common styles for Angular Material. We include this here so that you only // have to load a single css file for Angular Material in your app. // **Be sure that you only ever include this mixin once!** @includemat-core(); // Define the default theme (same as the example above). $candy-app-primary: mat-palette($mat-indigo); $candy-app-accent: mat-palette($mat-pink, A200, A100, A400); $candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent); // Include the default theme styles. @includeangular-material-theme($candy-app-theme); // Define an alternate dark theme. $dark-primary: mat-palette($mat-blue-grey); $dark-accent: mat-palette($mat-amber, A200, A100, A400); $dark-warn: mat-palette($mat-deep-orange); $dark-theme: mat-dark-theme($dark-primary, $dark-accent, $dark-warn); // Include the alternative theme styles inside of a block with a CSS class. You can make this // CSS class whatever you want. In this example, any component inside of an element with // `.unicorn-dark-theme` will be affected by this alternate dark theme instead of the default theme. .unicorn-dark-theme { @includeangular-material-theme($dark-theme); } In the above example, any component inside of a parent with the unicorn-dark-theme class will use the dark theme, while other components will fall back to the default $candy-app-theme.\n在上面的例子中，具有 unicorn-dark-theme 类的父类中的任何组件都将使用黑色主题，而其他组件将回退到默认的$candy-app-theme。\nYou can include as many themes as you like in this manner. You can also @include the angular-material-theme in separate files and then lazily load them based on an end-user interaction (how to lazily load the CSS assets will vary based on your application).\n你可以用这种方式包括尽可能多的主题。您还可以在单独的文件中包含 angular-material-theme，然后基于最终用户交互延迟加载它们（如何根据您的应用程序延迟加载CSS资产）。\nIt\u0026rsquo;s important to remember, however, that the mat-core mixin should only ever be included once.\n但是，重要的是要记住，mat-core 混合只能包含一次。\nMultiple themes and overlay-based components\r#\r\r多个主题和基于覆盖的组件\r#\r\rSince certain components (e.g. menu, select, dialog, etc.) are inside of a global overlay container, an additional step is required for those components to be affected by the theme\u0026rsquo;s css class selector (.unicorn-dark-theme in the example above).\n由于某些组件（例如菜单，选择，对话框等）位于全局覆盖容器的内部，因此需要额外的步骤才能使这些组件受到主题的css类选择器的影响（上例中的 .unicorn-dark-theme ）。\nTo do this, you can add the appropriate class to the global overlay container. For the example above, this would look like:\n为此，您可以将相应的类添加到全局覆盖容器。对于上面的例子，这看起来像：\nimport {OverlayContainer} from \u0026#39;@angular/cdk/overlay\u0026#39;; @NgModule({ // ... }) export class UnicornCandyAppModule { constructor(overlayContainer: OverlayContainer) { overlayContainer.getContainerElement().classList.add(\u0026#39;unicorn-dark-theme\u0026#39;); } } Theming only certain components\r#\r\r仅限某些组件\r#\r\rThe angular-material-theme mixin will output styles for all components in the library. If you are only using a subset of the components (or if you want to change the theme for specific components), you can include component-specific theme mixins. You also will need to include the mat-core-theme mixin as well, which contains theme-specific styles for common behaviors (such as ripples).\nangular-material-theme mixin将为库中的所有组件输出样式。如果您仅使用组件的子集（或者如果您想更改特定组件的主题），则可以包含特定于组件的主题混合. 您还需要包含 mat-core-theme 混合，其中包含常见行为（如涟漪）的主题特定样式。\n@import \u0026#39;~@angular/material/theming\u0026#39;; // Plus imports for other components in your app.  // Include the common styles for Angular Material. We include this here so that you only // have to load a single css file for Angular Material in your app. // **Be sure that you only ever include this mixin once!** @includemat-core(); // Define the theme. $candy-app-primary: mat-palette($mat-indigo); $candy-app-accent: mat-palette($mat-pink, A200, A100, A400); $candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent); // Include the theme styles for only specified components. @includemat-core-theme($candy-app-theme); @includemat-button-theme($candy-app-theme); @includemat-checkbox-theme($candy-app-theme); Theming your own components\r#\r\r主体化您自己的组件\r#\r\rFor more details about theming your own components, see theming-your-components.md.\n有关自己组件的更多细节，请参阅theming-your-components.md。\nFuture work\r#\r\r未来的工作\r#\r\r Once CSS variables (custom properties) are available in all the browsers we support, we will explore how to take advantage of them to make theming even simpler.\n一旦CSS变量（自定义属性）在我们支持的所有浏览器中都可用，我们将探索如何利用它们使其变得更简单。 More prebuilt themes will be added as development continues.\n随着发展的继续，将增加更多预建主题。  "},{"id":182,"href":"/posts/material2/material-%E5%8E%9F%E7%90%86%E5%9B%BE/","title":"Material 原理图","section":"mererial2","content":"Angular Material comes packaged with Angular CLI schematics to make creating Material applications easier.\nAngular Material附带Angular CLI原理图，使创建Material应用程序变得更加简单。\nInstall Schematics\r#\r\r安装原理图\r#\r\rSchematics come packaged with Angular Material, so once you have installed the npm package, they will be available via the Angular CLI.\n原理图与Angular Material一起打包，所以一旦安装了npm软件包，它们将通过Angular CLI提供。\nIf you run it will automatically install Angular Material for you and run the install schematic.\n如果您运行下面的命令，它会自动为您安装Angular Material并运行安装原理图。\nng add @angular/material The install schematic will help you quickly add Material to a new project. This schematic will:\n安装原理图将帮助您快速将材料添加到新项目。这个原意图将会：\n Ensure project dependencies in package.json\n确保package.json中的项目依赖关系 Ensure project dependencies in your app module\n确保您的应用模块中的项目依赖关系 Adds Prebuilt or Setup Custom Theme\n添加预置或设置自定义主题 Adds Roboto fonts to your index.html\n将Roboto字体添加到您的index.html Apply simple CSS reset to body\n将简单的CSS重置应用于body  Generator Schematics\r#\r\r生成原理图\r#\r\rIn addition to the install schematic Angular Material has three schematics it comes packaged with:\n除了安装示意图以外，Angular Material还提供三种原理图：\n Navigation\n导航 Dashboard\n控制台 Table\n数据表  Navigation Schematic\r#\r\r导航原理图\r#\r\rThe navigation schematic will create a new component that includes a toolbar with the app name and the side nav responsive based on Material breakpoints.\n导航示意图将创建一个新组件，其中包含一个带有应用程序名称的工具栏，以及基于材料断点响应的侧边导航栏。\nng generate @angular/material:material-nav --name \u0026lt;component-name\u0026gt; Dashboard Schematic\r#\r\r控制台原理图\r#\r\rThe dashboard schematic will create a new component that contains a dynamic grid list of cards.\n控制台原理图将创建一个包含卡片动态网格列表的新组件。\nng generate @angular/material:material-dashboard --name \u0026lt;component-name\u0026gt; Table Schematic\r#\r\r数据表原理图\r#\r\rThe table schematic will create a new table component pre-configured with a datasource for sorting and pagination.\n表格示意图将创建一个新的表格组件，预先配置一个用于排序和分页的数据源。\nng generate @angular/material:material-table --name \u0026lt;component-name\u0026gt; "},{"id":183,"href":"/posts/monitor/inotifywait%E5%91%BD%E4%BB%A4%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/","title":"Inotifywait命令文件系统监控","section":"监控","content":"　inotify可以对linux 文件系统进行高效性、细粒度、异步的监控，用于通知用户控件程序的文件系统变化。inotify可以监控文件，也可以监控目录，配合rsync实现文件的实时同步功能。\n　首先安装inotify软件，先检查自己的系统版本（uname -r），我的是centos 7的系统，我的步骤是\n　1、首先检查自己的电脑是否已经安装了这个软件。 rpm -qa inotify-tools\n　2、检查仓库中是否有这个软件。 yum search inotify-tools\n　3、发现这个软件不在yum仓库中，安装对应的epel源。\n　wget -O /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repo\n　yum clean all\n　yum makecache\n　4、安装inotify-tools软件\n　yum install inotify-tools -y\n　5、查看inotifywait的简单用法\n[root@nfs01 data]# inotifywait -mrq -e \u0026lsquo;create,delete,close_write,attrib,moved_to\u0026rsquo; \u0026ndash;timefmt \u0026lsquo;%Y-%m-%d %H:%M\u0026rsquo; \u0026ndash;format \u0026lsquo;%T %w%f %e\u0026rsquo; /backup/ 2019-06-04 10:46 /backup/test.txt CREATE 2019-06-04 10:46 /backup/test.txt ATTRIB 2019-06-04 10:46 /backup/test.txt CLOSE_WRITE,CLOSE 2019-06-04 10:47 /backup/test.txt CLOSE_WRITE,CLOSE 2019-06-04 10:47 /backup/isr DELETE 2019-06-04 10:47 /backup/me MOVED_TO\n"},{"id":184,"href":"/posts/monitor/p50p90-%E5%92%8C-p99/","title":"P50、p90 和 P99","section":"监控","content":"监控指标种常以最大值，最小值，平均数来衡量，另外还有一种简单的分布表示， 如：每秒总请求数、错误率以及请求延迟等可以使用分布临界值做为参考。 P50表示中位数。 P75表示包含百分之七十五的值值。 P90表示包含90%的值。 P99表示包含99%的值。\n"},{"id":185,"href":"/posts/monitor/use%E6%96%B9%E6%B3%95/","title":"Use方法","section":"监控","content":"USE方法全称\u0026quot;Utilization Saturation and Errors Method\u0026quot;，主要用于分析系统性能问题，可以指导用户快速识别资源瓶颈以及错误的方法。正如USE方法的名字所表示的含义，USE方法主要关注与资源的：使用率(Utilization)、饱和度(Saturation)以及错误(Errors)。\n  使用率：关注系统资源的使用情况。 这里的资源主要包括但不限于：CPU，内存，网络，磁盘等等。100%的使用率通常是系统性能瓶颈的标志。\n  饱和度：例如CPU的平均运行排队长度，这里主要是针对资源的饱和度(注意，不同于4大黄金信号)。任何资源在某种程度上的饱和都可能导致系统性能的下降。\n  错误：错误计数。例如：“网卡在数据包传输过程中检测到的以太网网络冲突了14次”。\n  "},{"id":186,"href":"/posts/monitor/%E4%B8%9A%E5%8A%A1%E7%9B%91%E6%8E%A74%E4%B8%AA%E9%BB%84%E9%87%91%E6%8C%87%E6%A0%87/","title":"业务监控4个黄金指标","section":"监控","content":"Four Golden Signals是Google针对大量分布式监控的经验总结，4个黄金指标可以在服务级别帮助衡量终端用户体验、服务中断、业务影响等层面的问题。主要关注与以下四种类型的指标：延迟，通讯量，错误以及饱和度：\n 延迟：服务请求所需时间。  记录用户所有请求所需的时间，重点是要区分成功请求的延迟时间和失败请求的延迟时间。 例如在数据库或者其他关键祸端服务异常触发HTTP 500的情况下，用户也可能会很快得到请求失败的响应内容，如果不加区分计算这些请求的延迟，可能导致计算结果与实际结果产生巨大的差异。除此以外，在微服务中通常提倡“快速失败”，开发人员需要特别注意这些延迟较大的错误，因为这些缓慢的错误会明显影响系统的性能，因此追踪这些错误的延迟也是非常重要的。\n 通讯量：监控当前系统的流量，用于衡量服务的容量需求。  流量对于不同类型的系统而言可能代表不同的含义。例如，在HTTP REST API中, 流量通常是每秒HTTP请求数；\n 错误：监控当前系统所有发生的错误请求，衡量当前系统错误发生的速率。  对于失败而言有些是显式的(比如, HTTP 500错误)，而有些是隐式(比如，HTTP响应200，单实际业务流程依然是失败的)。\n对于一些显式的错误如HTTP 500可以通过在负载均衡器(如Nginx)上进行捕获，而对于一些系统内部的异常，则可能需要直接从服务中添加钩子统计并进行获取。\n 饱和度：衡量当前服务的饱和度。  主要强调最能影响服务状态的受限制的资源。 例如，如果系统主要受内存影响，那就主要关注系统的内存状态，如果系统主要受限与磁盘I/O，那就主要观测磁盘I/O的状态。因为通常情况下，当这些资源达到饱和后，服务的性能会明显下降。同时还可以利用饱和度对系统做出预测，比如，“磁盘是否可能在4个小时候就满了”。\n"},{"id":187,"href":"/posts/monitor/%E7%9B%91%E6%8E%A7red%E6%96%B9%E6%B3%95/","title":"监控 Red方法","section":"监控","content":"RED方法是Weave Cloud在基于Google的“4个黄金指标”的原则下结合Prometheus以及Kubernetes容器实践，细化和总结的方法论，特别适合于云原生应用以及微服务架构应用的监控和度量。主要关注以下三种关键指标：\n(请求)速率：服务每秒接收的请求数。\n(请求)错误：每秒失败的请求数。\n(请求)耗时：每个请求的耗时。\n在“4大黄金信号”的原则下，RED方法可以有效的帮助用户衡量云原生以及微服务应用下的用户体验问题。\n"},{"id":188,"href":"/posts/mysql/rds-mysql-%E5%BF%AB%E9%80%9F%E7%BB%93%E6%9D%9F%E8%BF%9B%E7%A8%8B/","title":"Rds Mysql 快速结束进程","section":"mysql","content":"RDS 默认管理员也没有super权限，数据库在执行DDL语句时没有super权限是不能结束进程会报异常：\n you are not owner for thread ******* show 不是sql语句也不能处理输出，很多连接的时候我想到想到是使用excel来生成结束进程的kill命令，关键在于一个函数：在一单元格前后加上字符：\n=\u0026quot;kill \u0026quot;\u0026amp;B2\u0026amp;\u0026quot;;\u0026quot; "},{"id":189,"href":"/posts/network/wifi%E5%B8%B8%E8%AF%86/","title":"Wifi常识","section":"网络","content":"频段带宽\r#\r\r频段带宽指的是你的路由器的发射频率宽度：\n  20MHz对应的是65M带宽穿透性好传输距离远（100米左右）。 40MHz对应的是150M带宽穿透性差传输距离近（50米左右）。   　而你路由器的300M是指的你的路由器的传输速率（最大传输速率）：300Mbps，也就是俗称网速, 40MHZ双通道能达到300M。\n频段标准\r#\r\r无线路由工作根据频段的不同分好几种标准，分别是11a，11b，11g，11n。其中工作频段不同也导致传输速度不同。11n的可以在11b和11g之间用，自动转换。 频段带宽是路由频段带宽的选择\n 20MHz对应的是65M带宽，穿透性相对较好 40MHz对应的是150M带宽，穿透性不如20MHz\n 5g\r#\r\r5G Wi-Fi的诞生很好解决现在WiFi面临的问题，首先它运行在5GHz以上的高频段，宽带能提高到40MHz甚至80MHz或更高，传输速度最高提升到了1Gbps，每秒可以传输约125MB的内容。\n"},{"id":190,"href":"/posts/network/windows-powershell-%E6%9F%A5%E7%9C%8B%E7%AB%AF%E5%8F%A3%E5%92%8C%E9%A1%BE%E8%99%91%E6%96%87%E6%9C%AC%E4%B8%8A%E4%B8%8B%E6%96%87/","title":"Windows Powershell 查看端口和顾虑文本上下文","section":"网络","content":"example\r#\r\rNETSTAT.EXE -abno | Select-String -Pattern Sangfor -Context 1,2  windows netstat使用-abno显示的信息最完善，建议常用 select-string 匹配文本，使用-context指定匹配文本的前后行数，例子是前面一行后面两行 谢谢！  "},{"id":191,"href":"/posts/network/windows-powershell%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99/","title":"Windows Powershell关闭防火墙","section":"网络","content":"Set-NetFirewallProfile -Profile Private -Enabled False Set-NetFirewallProfile -Profile Public -Enabled False Get-NetFirewallProfile 加域的还有一种属性，参考设置\n"},{"id":192,"href":"/posts/network/windows%E4%BD%BF%E7%94%A8netsh%E5%81%9A%E7%AB%AF%E5%8F%A3%E4%BB%A3%E7%90%86%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/","title":"Windows使用netsh做端口代理，端口转发","section":"网络","content":"example\r#\r\rnetsh interface portproxy add v4tov4 listenaddress=172.20.0.2 listenport=1521 connectaddress=172.16.100.74 connectport=1521 netsh interface portproxy add v4tov4 listenaddress=172.20.0.2 listenport=1433 connectaddress=172.16.100.73 connectport=1433 删除\r#\r\rnetsh interface portproxy delete v4tov4 listenport=3340 listenaddress=10.1.1.110 netsh.exe interface portproxy delete v4tov4 listenport=1521 listenaddress=172.20.0.2\n清除所有当前的端口转发规则：\r#\r\rnetsh interface portproxy reset\n"},{"id":193,"href":"/posts/network/%E4%BD%BF%E7%94%A8ssh%E5%81%9A%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/","title":"使用ssh做端口转发","section":"网络","content":"10.240.0.4是remoteserver后面的主机，把访问本机5500端口的流量通过remoteserver转发到10.240.0.4 demo自己参照理解 ssh -L 5500:10.240.0.4:3389 remoteserver mstsc.exe /v:localhost:5500\n"},{"id":194,"href":"/posts/network/%E5%9C%A8%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%E4%B8%AD%E5%B0%86%E4%BB%BB%E4%BD%95linux%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BD%AC%E6%8D%A2%E4%B8%BAsocks5%E4%BB%A3%E7%90%86/","title":"在一个命令中将任何 Linux计算机转换为 Socks5代理","section":"网络","content":"对于那些想上网的人来说这很方便 - 你可以在一个命令中将任何Linux计算机变成SOCKS5（和SOCKS4）代理：\nssh -N -D 0.0.0.0:1080 user@ip 并且它不需要root权限。该ssh命令启动-D端口上的动态端口转发，1080并通过SOCSK5或SOCKS4协议与客户端通信，就像常规的SOCKS5代理一样！该-N选项确保ssh保持空闲状态，并且不在主机上执行任何命令。0.0.0.0允许任意地址连接，设置为127.0.0.1可以限制本机之外的主机使用代理，ip可以是远程代理主机，也可以是本机相当于把本机做为代理服务器\n如果您还希望命令作为守护进程进入后台，则添加-f选项：\nssh -f -N -D 0.0.0.0:1080 user@ip 要使用它，只需让您的软件在您的Linux计算机的IP，端口1080上使用SOCKS5代理，并且您已完成，您的所有请求现在都会被代理.\n访问控制可以通过实现iptables。例如，要仅允许来自ip的1.2.3.4人员使用SOCKS5代理，请添加以下iptables规则：\niptables -A INPUT --src 1.2.3.4 -p tcp --dport 1080 -j ACCEPT iptables -A INPUT -p tcp --dport 1080 -j REJECT 第一条规则说，允许任何人1.2.3.4连接到端口1080，另一条规则说，拒绝其他所有人连接到端口1080。\n"},{"id":195,"href":"/posts/network/%E9%98%B2%E7%81%AB%E5%A2%99%E6%8A%80%E6%9C%AF%E6%A6%82%E8%BF%B0/","title":"防火墙技术概述","section":"网络","content":"一、防火墙技术概述\r#\r\r随着互联网的普及和发展，尤其是Internet的广泛使用，使计算机应用更加广泛与深入。同时，我们不得不注意到，网络虽然功能强大，也有其脆弱易受到攻击的一面。据美国FBI统计，美国每年因网络安全问题所造成的经济损失高达75亿美元，而全求平均每20秒钟就发生一起Internet计算机侵入事件。在我国，每年因黑客入侵、计算机病毒的破坏也造成了巨大的经济损失。人们在利用网络的优越性的同时，对网络安全问题也决不能忽视。如何建立比较安全的网络体系，值得我们关注研究。\n二、防火墙的概念\r#\r\r 防火墙是设置在被保护网络和外部网络之间的一道屏障，以防止发生不可预测的、潜在破坏性的侵入。防火墙是指设置在不同网络(如可信任的企业内部网和不可信的公共网)或网络安全域之间的一系列部件的组合。它是不同网络或网络安全域之间信息的唯一出入口，能根据企业的安全政策控制(允许、拒绝、监测)出入网络的信息流，且本身具有较强的抗攻击能力。防火墙提供信息安全服务，是实现网络和信息安全的基础设施。在逻辑上，防火墙是一个分离器，一个限制器，也是一个分析器，它有效地监控了内部网络和互联网之间的任何活动，保证了内部网络的安全。目前的防火墙技术无论从技术上还是从产品发展历程上，都经历了五个发展历程。\n第一代防火墙技术几乎与路由器同时出现，采用了包过滤（ Packet filter）技术。由贝尔实验室的 Dave Presotto 和 Howard Trickey 推出了第二代防火墙，即电路层防火墙，同时提出了第三代防火墙— 应用层防火墙（代理防火墙）的初步结构。 1992 年，USC 信息科学院的 BobBraden 开发出了基于动态包过滤（Dynamic packet filter）技术的第四代防火墙 ，后来演变为目前所说的状态监视（Stateful inspection）技术。1994 年，以色列的 CheckPoint 公司开发出了第一个采用这种技术的商业化的产品。 1998年，NAI 公司推出了一种自适应代理（Adaptive proxy）技术，并在其产品 Gauntlet Firewall for NT 中得以实现，给代理类型的防火墙赋予了全 新的意义，可以称之为第五代防火墙。但传统的防火墙并没有解决目前网络中主要的安全问题。目前网络安全的三大主要问题是:以拒绝访问(DDOS)为主要代表的网络攻击，以蠕虫(Worm)为主要代表的病毒传播和以垃圾电子邮件(SPAM)为代表的内容控制。这三大安全问题占据网络安全问题九成以上。而这三大问题，传统防火墙都无能为力。主要有以下三个原因: 一是传统防火墙的计算能力的限制。传统的防火墙是以高强度的检查为代价，检查的强度越高，计算的代价越大。二是传统防火墙的访问控制机制是一个简单的过滤机制。它是一个简单的条件过滤器，不具有智能功能，无法检测复杂的攻击。三是传统的防火墙无法区分识别善意和恶意的行为。该特征决定了传统的防火墙无法解决恶意的攻击行为。现在防火墙正在向分布、智能的方向发展，其中智能防火墙可以很好的解决上面的问题。智能防火墙是相对传统的防火墙而言的，从技术特征上智能防火墙是利用统计、记忆、概率和决策的智能方法来对数据进行识别，并达到访问控制的目的。新的数学方法，消除了匹配检查所需要的海量计算，高效发现网络行为的特征值，直接进行访问控制。由于这些方法多是人工智能学科采用的方法，因此，又称为智能防火墙。\n三、防火墙的功能\r#\r\r防火墙的主要功能主要为：\n** 1．包过滤**\r#\r\r 包过滤是一种网络的数据安全保护机制，它可用来控制流出和流入网络的数据，它通常由定义的各条数据安全规则所组成，防火墙设置可基于源地址、源端口、目的地址、目的端口、协议和时间;可根据地址簿进行设置规则。\n2．地址转换\r#\r\r网络地址变换是将内部网络或外部网络的IP地址转换，可分为源地址转换SourceNAT(SNAT)和目的地址转换 Destination NAT(DNAT)。SNAT 用于对内部网络地址进行转换，对外部网络隐藏起内部网络的结构，避免受到来自外部其他网络的非授权访问或恶意攻击。并将有限的 IP 地址动态或静态的与内部 IP 地址对应起来，用来缓解地址空间的短缺问题，节省资源，降低成本。DNAT 主要用于外网主机访问内网主机。\n3．认证和应用代理\r#\r\r 认证指防火墙对访问网络者合法身分的确定。代理指防火墙内置用户认证数据库;提供 HTTP、FTP和 SMTP代理功能，并可对这三种协议进行访问控制；同时支持 URL 过滤功能。\n4．透明和路由\r#\r\r指防火墙将网关隐藏在公共系统之后使其免遭直接攻击。隐蔽智能网关提供了对互联网服务进行几乎透明的访问， 同时阻止了外部未授权访问者对专用网络的非法访问;防火墙还支持路由方式，提供静态路由功能，支持内部多个子网之间的安全访问。\n5.入侵检测功能\r#\r\r入侵检测技术就是一种主动保护自己免受黑客攻击的一种网络安全技术，包括以下内容:\n（1）反端口扫描\r#\r\r端口扫描就是指黑客通过远程端口扫描的工具，从中发现主机的哪些非常用端口是打开的;是否支持 FTP、 服务；且 FTP 服务是否支持 Web “匿名”，以及 IIS 版本，是否有可以被成功攻破的 IIS 漏洞，进而对内部网络的主机进行攻击。 顾名思义反端口扫描就是防范端口扫描的方法，目前常用的方法有:关闭闲置和有潜在危险的端口；检查各端口，有端口扫描的症状时，立即屏蔽该端口，多数防火墙设备采用的都是这种反端口扫描方式。\n（2）检测拒绝服务攻击\r#\r\r拒绝服务(DoS)攻击就是利用合理的服务请求来占用过多的服务资源，从而使合法用户无法得到服务的响应，其攻击方式有很多种;而分布式的拒绝服务攻击(DDoS)攻击手段则是在传统的 DoS 攻击基础之上产生 的一类攻击方式，分布式的拒绝服务攻击(DDoS)。其原理很简单，就是利用更多的受控主机同时发起进攻，以比 DoS 更大的规模(或者说以更高于受攻主机处理能力的进攻能力)来进攻受害者。现在的防火墙设备通常都可检测 Synflod、 Land、Ping of Death、TearDrop、ICMP flood 和 UDPflod 等多种 DOS/DDOS 攻击。\n（3）检测多种缓冲区溢出攻击 (Buffer Overflow)\r#\r\r缓冲区溢出 (Buffer Overflow)攻击指利用软件的弱点将任意数据添加进某个程序中，造成缓冲区的溢出，从而破坏程序的堆栈，使程序转而执行其它指令，以达到攻击的目的。更为严重的是，可以利用它执行非授权指令，甚至可以取得系统特权，进而进行各种非法操作，防火墙设备可检测对 FTP、Telnet、SSH、RPC 和 SMTP 等服务的远程堆栈溢出入侵。\n（4）检测 CGI/IIS 服务器入侵\r#\r\rCGI 就是 Common Gateway Inter——face 的 简称。是 World Wide Web 主机和 CGI 程序间传输资讯的定义。IIS 就是 Internet Information server 的简称，也就是微软的 Internet 信息服务器。防火墙设备可检测包括针对 Unicode、ASP 源码泄漏、PHF、NPH、pfdisPlay.cgi 等已知上百种的有安全隐患的 CGI/IIS 进行的探测和攻击方式。\n（5）检测后门、木马及其网络蠕虫\r#\r\r后门程序是指采用某种方法定义出一个特殊的端口并依靠某种程序在机器启动之前自动加载到内存， 强行控制机器打开那个特殊的端口的程序。木马程序的全称是“特洛依木马”它们是指寻找后门，窃取计算机的密码的一类程序。网络蠕虫病毒分为 2 类，一种是面向企业用户和局域网而一言，这种病毒利用系统漏洞，主动进行攻击，可以对整个互联网造成瘫痪性的后果，以“红色代码”，“尼姆达”，以及最新的“sql 蠕虫王”为代表。另外一种是针对个人用户的，通过网络(主要是电子邮件，恶意网页形式)迅速传播的蠕虫病毒，以爱虫病毒，求职信病毒为例。防火墙设备可检测试图穿透防火墙系统的木马控制端和客户端程序;检测试图穿透防火墙系统的蠕虫程序。\n（6）其他功能\r#\r\r（1）IP 地址/MAC 地址绑定\r#\r\r可支持任一网络接口的 IP 地址和 MAC 地址的绑定，从而禁止用户随意修改 IP 地址。\n（2）审计\r#\r\r要求对使用身份标识和认证的机制，文件的创建，修改，系统管理的所有操作以及其他有关安全事件进行记录，以便系统管理员进行安全跟踪。一般防火墙设备可以提供三种日志审计功能:系统管理日志、流量日志和入侵日志。\n（3）特殊站点封禁\r#\r\r内置特殊站点数据库，用户可选择是否封禁色情、反动和暴力等特殊站点。\n四、防火墙的原理及分类\r#\r\r国际计算机安全委员会 ICSA 将防火墙分成三大类:包过滤防火墙，应用级代理服务器以及状态包检测防火墙。\n1.包过滤防火墙\r#\r\r包过滤防火墙就是把接收到的每个数据包同预先设定的包过滤规则相比较，从而决定是否阻塞或通过。过滤规则是基于网络层 IP 包包头信息的比较。包过滤防火墙工作在网络层，IP 包的包头中包含源、目的 IP 地址， 封装协议类型(TCP，UDP，ICMP 或 IP Tunnel)，TCP/UDP 端口号，ICMP 消息类型， TCP 包头中的 ACK 等等。如果接收的数据包与允许转发的规则相匹配，则数据包按正常情况处理；如果与拒绝转发的规则相匹配，则防火墙丢弃数据包；如果没有匹配规则，则按缺省情况处理。包过滤防火墙是速度最快的防火墙，这是因为它处于网络层，并且只是粗略的检查连接的正确性，所以在一般的传统路由器上就可以实现，对用户来说都是透明的。但是它的安全程度较低，很容易暴露内部网络，使之遭受攻击。例如，HTTP。通常是使用 80 端口。包过滤防火墙的维护比较困难，定义过滤规则也比较复杂，因为任何一条过滤规则的不完善都会给网络黑客造成可乘之机。同时，包过滤防火墙一般无法提供完善的日志。\n2.应用级代理防火墙\r#\r\r应用级代理技术通过在 OSI 的最高层检查每一个 IP 包，从而实现安全策略。 代理技术与包过滤技术完全不同，包过滤技术在网络层控制所有的信息流，而代 理技术一直处理到应用层，在应用层实现防火墙功能。它的代理功能，就是在防火墙处终止客户连接并初始化一个新的连接到受保护的内部网络。这一内建代理机制提供额外的安全，这是因为它将内部和外部网络隔离开来，使网络外部的黑客在防火墙内部网络上进行探测变得困难，更重要的是能够让网络管理员对网络服务进行全面的控制。但是，这将花费更多的处理时间，并且由于代理防火墙支持的应用有限，每一种应用都需要安装和配置不同的应用代理程序。此外，代理服务也对过往的数据包进行分析、注册登记，形成报告，同时当发现被攻击迹象时会向网络管理员发出警报，并保留攻击痕迹。应用代理型防火墙是内部网与外部网的隔离点，起着监视和隔绝应用层通信流的作用。同时 常结合入过滤器的功能。它工作在 OSI 模型的最高层，掌握着应用系统中可用作安全决策的全部信息。\n3.状态包检测防火墙\r#\r\r状态检测防火墙采用了状态检测包过滤的技术，是传统包过滤上的功能扩展。状态检测防火墙在网络层有一个检查引擎截获数据包并抽取出与应用层状态有关的信息，并以此为依据决定对该连接是接受还是拒绝。这种技术提供了高度安全的解决方案，同时具有较好的适应性和扩展性。状态检测防火墙一般也包括一些代理级的服务，它们提供附加的对特定应用程序数据内容的支持。状态检测技术最适合提供对UDP协议的有限支持。它将所有通过防火墙的UDP分组均视为一个虚连接，当反向应答分组送达时，就认为一个虚拟连接已经建立。状态检测防火墙克服了包过滤防火墙和应用代理服务器的局限性，不仅仅检测“to”和“from”的地址，而且不要求每个访问的应用都有代理。\n这是第三代防火墙技术，能对网络通信的各层实行检测。同包过滤技术一样，它能够检测通过IP地址、端口号以及TCP标记，过滤进出的数据包。它允许受信任的客户机和不受信任的主机建立直接连接，不依靠与应用层有关的代理，而是依靠某种算法来识别进出的应用层数据，这些算法通过己知合法数据包的模式来比较进出数据包，这样从理论上就能比应用级代理在过滤数据包上更有效。状态监视器的监视模块支持多种协议和应用程序，可方便地实现应用和服务的扩充。此外，它还可监测RPC和UDP端口信息，而包过滤和代理都不支持此类端口。这样，通过对各层进行监测，状态监视器实现网络安全的目的。目前，多使用状态监测防火墙，它对用户透明，在OSI最高层上加密数据，而无需修改客户端程序，也无需对每个需在防火墙上运行的服务额外增加一个代理。\n五、防火墙的配置硬件连接与实施\r#\r\r一般来说硬件防火墙和路由交换设备一样具备多个以太接口，速度根据档次 与价格不同而在百兆与千兆之间有所区别。\n 对于中小企业来说一般出口带宽都在 100M 以内，所以我们选择 100M 相关产 品即可。网络拓扑图中防火墙的位置很关键，一般介于内网与外网互连中间区域，针对外网访问数据进行过滤和监控。如果防火墙上有 WAN 接口，那么直接将 WAN 接口连接外网即可，如果所有接口都标记为 LAN 接口，那么按照常规标准选择最后一个 LAN 接口作为外网连接端 口。相应的其他 LAN 接口连接内网各个网络设备。\n六、防火墙的特色配置\r#\r\r从外观上看防火墙和传统的路由器交换机没有太大的差别，一部分防火墙具备 CONSOLE 接口通过超级终端的方式初始化配置，而另外一部分则直接通过默 认的 LAN 接口和管理地址访问进行配置。与路由器交换机不同的是在防火墙配置中我们需要划分多个不同权限不同 优先级别的区域，另外还需要针对相应接口隶属的区域进行配置，例如 1 接口划 分到 A 区域，2 接口划分到 B 区域等等，通过不同区域的访问权限差别来实现防火墙保护功能。默认情况下防火墙会自动建立 trust 信任区，untrust 非信任区，DMZ 堡垒主机区以及 LOCAL 本地区域。相应的本地区域优先级最高，其次是 trust 信任区，DMZ 堡垒主机区，最低的是 untrust 非信任区域。\n在实际设置时我们必须将端口划分到某区域后才能对其进行各个访问操 作，否则默认将阻止对该接口的任何数据通讯。 除此之外防火墙的其他相关配置与路由交换设备差不多，无外乎通过超级 终端下的命令行参数进行配置或者通过 WEB 管理界面配置。\n七、防火墙包过滤技术发展趋势\r#\r\r针对传统防火墙不能解决的问题，及新的网络攻击的出现，防火墙技术也出现了新的发展趋势。主要可以从包过滤技术、防火墙体系结构和防火墙系统管理三方面来体现。\n1.安全策略功能\r#\r\r一些防火墙厂商把在 AAA 系统上运用的用户认证及其服务扩展到防火墙中，使其拥有可以支持基于用户角色的安全策略功能。该功能在无线网络应用中非常必要。具有用户身份验证的防火墙通常是采用应用级网关技术的，包过滤技术的防火墙不具有。用户身份验证功能越强，它的安全级别越高，但它给网络通信带来的负面影响也越大，因为用户身份验证需要时间，特别是加密型的用户身份验证。\n2.多级过滤技术\r#\r\r所谓多级过滤技术，是指防火墙采用多级过滤措施，并辅以鉴别手段。在分组过滤(网络层)一级，过滤掉所有的源路由分组和假冒的 IP 源地址；在传输层 一级，遵循过滤规则，过滤掉所有禁止出或/和入的协议和有害数据包如 nuke 包、圣诞树包等；在应用网关(应用层)一级，能利用 FTP、SMTP 等各种网关，控制和监测 Internet 提供的所用通用服务。这是针对以上各种已有防火墙技术的 不足而产生的一种综合型过滤技术，它可以弥补以上各种单独过滤技术的不足。这种过滤技术在分层上非常清楚，每种过滤技术对应于不同的网络层，从这个概念出发，又有很多内容可以扩展，为将来的防火墙技术发展打下基础。\n3.功能扩展\r#\r\r功能扩展是指一种集成多种功能的设计趋势，包括 VPN、AAA、PKI、IPSec 等附加功能，甚至防病毒、入侵检测这样的主流功能，都被集成到防火墙产品中了，很多时候我们已经无法分辨这样的产品到底是以防火墙为主，还是以某个功能为主了，即其已经逐渐向我们普遍称之为 IPS （入侵防御系统）的产品转化了。\n有些防火墙集成了防病毒功能，通常被称之为“病毒防火墙”，当然目前主要还是在个人防火墙中体现，因为它是纯软件形式，更容易实现。这种防火墙技术可以有效地防止病毒在网络中的传播，比等待攻击的发生更加积极。拥有病毒防护功能的防火墙可以大大减少公司的损失。\n八、防火墙的体系结构发展趋势\r#\r\r 随着网络应用的增加，对网络带宽提出了更高的要求。这意味着防火墙要能够以非常高的速率处理数据。另外，在以后几年里，多媒体应用将会越来越普遍，它要求数据穿过防火墙所带来的延迟要足够小。为了满足这种需要，一些防火墙制造商开发了基于ASIC的防火墙和基于网络处理器的防火墙。从执行速度的角度看来，基于网络处理器的防火墙也是基于软件的解决方案，它需要在很大程度上依赖于软件的性能，但是由于这类防火墙中有一些专门用于处理数据层面任务的引擎，从而减轻了CPU的负担，该类防火墙的性能要比传统防火墙的性能好许多。与基于ASIC的纯硬件防火墙相比，基于网络处理器的防火墙具有软件色彩，因而更加具有灵活性。基于ASIC 的防火墙使用专门的硬件处理网络数据流，比起前两种类型的防火墙具有更好的性能。但是纯硬件的 ASIC 防火墙缺乏可编程性，这就使得它缺乏灵活性，从而跟不上防火墙功能的快速发展。理想的解决方案是增加ASIC芯片的可编程性，使其与软件更好地配合。这样的防火墙就可以 同时满足来自灵活性和运行性能的要求。\n九、防火墙的系统管理发展趋势\r#\r\r(1)集中式管理，分布式和分层的安全结构。(2)强大的审计功能和自动日志分析功能。(3)网络安全产品的系统化 纵观防火墙技术的发展，黑客入侵系统技术的不断进步以及网络病毒朝智能化和多样化发展，对防火墙技术的同步发展提出了更高的要求。防火墙技术只有不断向主动型和智能型等方向发展，才能更好的满足人们对防火墙技术日益增长的需求。\n随着 Internet （因特网），和 Intranet（企业内部网） 技术的发展,网络的安全已经显得越来越重要, 网络病毒对企业造成的危害已经相当广泛和严重,其中也会涉及到是否构成犯罪行为的问题，相应的病毒防范技术也发展到了网络层面,并且愈来愈有与黑客技术和漏洞相结合的趋势。新型防火墙技术产生,就是为了解决来自企业网络内和外的攻击；克服传统“边界防火墙”的缺点,集成了 IDS 、VPN 和防病毒等安全技术,实现从网络到服务器以及客户端全方位的安全解决方案,满足企业实际 应用和发展的安全要求。防火墙目的在于为用户提供信息的保密，认证和完整性保护机制，使网络中的服务，数据以及系统免受侵扰和破坏。\n"},{"id":196,"href":"/posts/poetry/2018-10-09/","title":"2018 10 09","section":"诗歌","content":"结就来生双绾带，写成今世不休书 造就一世鸳鸯情，演绎万代繁荣景 ——佚名\n"},{"id":197,"href":"/posts/poetry/%E6%B1%82%E4%BB%81%E5%BE%97%E4%BB%81/","title":"求仁得仁","section":"诗歌","content":"心之所向， 无惧无悔。 求仁得仁， 复无怨怼。\n"},{"id":198,"href":"/posts/poetry/%E7%9B%9B%E5%90%8D%E4%B9%8B%E4%B8%8B%E5%85%B6%E5%AE%9E%E9%9A%BE%E5%89%AF/","title":"盛名之下，其实难副","section":"诗歌","content":"峣峣者易缺，皦皦者易污 阳春之曲，和者必寡，盛名之下，其实难副\n"},{"id":199,"href":"/posts/postgresql/postgresql-%E7%81%BE%E5%A4%87%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E8%84%9A%E6%9C%AC-barman/","title":"Postgresql 灾备自动配置脚本 Barman","section":"postgresql","content":"前置条件：\r#\r\rpostgreql版本：12+ barman版本：2.+ 运行环境：centos系列加上网\n脚本：\r#\r\r结合末尾的执行参数看更容易理解\ncat pg_disaster_recovery_with_barman.sh\r#!/bin/bash\rset -o nounset #遇到变量不存在，脚本报错\rset -o xtrace # 打印执行命令\rset -o errexit # 错误退出\rset -o pipefail # 只要一个子命令失败，整个管道命令就失败，脚本就会终止执行\rtarget=$1\r# 设置本地yum源\rfunction set_pg_repo(){\recho \u0026quot;[barman-pg]\rname=barman-pg-rhel7\rbaseurl=https://download.postgresql.org/pub/repos/yum/12/redhat/rhel-8-x86_64/\rgpgcheck=0\u0026quot; \u0026gt; /etc/yum.repos.d/barman-pg.repo\r}\rfunction set_pg_admin_secret(){\recho \u0026quot;${pg_host}:5432:*:${pg_user}:${pg_password}\u0026quot; \u0026gt; ${HOME}/.pgpass\rchmod 600 ${HOME}/.pgpass\r}\rfunction create_pg_user_barman(){\rpsql -h ${pg_host} -U ${pg_user} -c \u0026quot;CREATE USER barman WITH superuser LOGIN REPLICATION createdb createrole ENCRYPTED password '${pg_password}';\u0026quot;\r}\rfunction install_barman(){\ryum install epel-release -y\rset_pg_repo\ryum install barman -y\ryum install postgresql12 -y\r}\rfunction config_barman(){\rset_pg_repo\rinstall_barman\rset_pg_admin_secret\rcreate_pg_user_barman\rmkdir -p /var/lib/barman/\recho \u0026quot;${pg_host}:5432:*:barman:${pg_password}\u0026quot; \u0026gt;/var/lib/barman/.pgpass\rchown barman:barman /var/lib/barman/.pgpass\rchmod 600 /var/lib/barman/.pgpass if su - barman -c \u0026quot;psql -c 'SELECT version()' -U barman -h ${pg_host} postgres\u0026quot;\rthen\recho \u0026quot;barman user is ok\u0026quot;\relse\recho \u0026quot;barman user in pg is bad\u0026quot;\rexit 1\rfi\rsed -e 's/streaming_barman/barman/' -e \u0026quot;s/=pg/=${pg_host}/\u0026quot; -e 's/;path_prefix/path_prefix/' /etc/barman.d/streaming-server.conf-template \u0026gt; /etc/barman.d/streaming-server.conf\recho \u0026quot;export PATH=\\$PATH:/usr/pgsql-12/bin\u0026quot; \u0026gt; /etc/profile.d/pg.sh\rsource /etc/profile.d/pg.sh\rbarman receive-wal --create-slot streaming\rif ! barman switch-xlog --force --archive --archive-timeout 60 streaming # if failed, do it baragain\rthen\rbarman switch-xlog --force --archive --archive-timeout 60 streaming fi\rbarman check streaming\r}\rif test $target = \u0026quot;barman\u0026quot;\rthen\rpg_host=$2\rpg_user=$3\rpg_password=$4\rconfig_barman\recho \u0026quot;config barman successful\u0026quot;\recho \u0026quot;execute barman backup streaming to start backup\u0026quot;\rfi\r使用方式\r#\r\r例如\nbash pg_disaster_recovery_with_barman.sh barman 10.0.0.1 postgres 123456\r备份恢复\r#\r\r本地恢复\r#\r\rbarman list-backup streaming\rchown barman /var/lib/postgresql\rbarman recover --target-time \u0026quot;2021-07-07 17:56:09+08:00\u0026quot; --target-action promote streaming 20210707T173939 /var/lib/postgresql\r#barman recover streaming 20210707T145829 /var/lib/postgresql\rchown -R postgres:postgres /var/lib/postgresql\rmv -f /opt/data/postgresql/postgresql.auto.conf{.origin,}\rmv -f /opt/data/postgresql/postgresql.conf{.origin,} 远程恢复\r#\r\r#为barman用户生成证书\rsu - barman -c \u0026quot;ssh-keygen -t rsa -P '' -b 4096 -C 'barman@pg-barman' -m PEM -f /var/lib/barman/pg.pem\u0026quot;\r# 把公钥/var/lib/barman/pg.pem放在pg恢复的目标数据库主机上有权限的用户，具体请了解linux公钥交换认证\rsu - barman -c \u0026quot;cat /var/lib/barman/pg.pem.pub\u0026quot;\r#恢复示例\rbarman recover --remote-ssh-command \u0026quot;ssh root@10.0.0.1 -i /var/lib/barman/pg.pem\u0026quot; --target-time \u0026quot;2021-07-07 17:56:09+08:00\u0026quot; --target-action promote streaming 20210707T173939 /opt/data/postgresql\r工作中使用的，效果很好,遇到问题请留言讨论\r#\r\r"},{"id":200,"href":"/posts/security/kubernetes-opaopen-policy-agent/","title":"Kubernetes Opa(open Policy Agent)","section":"安全","content":"在本文中，我们将演示如何使用OPA执行最细粒度的安全策略。请注意，本文是一个系列的一部分，我们将基于“OPA作为代码介绍”和“集成OPA到Kubernetes”中获得的知识进行。如果你还没有这样做，请浏览本系列中已发表的文章。\nhttps://www.magalix.com/blog/introducing-policy-as-code-the-open-policy-agent-opa https://www.magalix.com/blog/integrating-open-policy-agent-opa-with-kubernetes-a-deep-dive-tutorial\n你可能已经熟悉Pod安全策略，可以在其中对Pod应用非常特定的安全控制。例如，使用Linux内核功能，使用主机命名空间、网络、端口或文件系统，以及其他许多功能。使用OPA，你还可以对pods施加类似的控制，在本实验室中，我们将创建一个OPA策略，不允许在pods中创建有特权的容器。特权容器对主机的访问级别比非特权容器高。\n为什么使用OPA而不是原生的Pod安全策略？\r#\r\r使用Pod安全策略来执行我们的安全策略并没有什么问题。然而，根据定义，PSP只能应用于pods。它们不能处理其他Kubernetes资源，如Ingresses、Deployments、Services等。OPA的强大之处在于它可以应用于任何Kubernetes资源。OPA作为一个许可控制器部署到Kubernetes，它拦截发送到API服务器的API调用，并验证和/或修改它们。相应地，你可以有一个统一的OPA策略，适用于系统的不同组件，而不仅仅是pods。例如，有一种策略，强制用户在其服务中使用公司的域，并确保用户只从公司的镜像存储库中提取镜像。请注意，我们使用的OPA是使用kube-mgmt部署的，而不是OPA Gatekeeper。\nRego的策略代码\r#\r\r在本文中，我们假设你已经熟悉了OPA和Rego语言。我们还假设你有一个正在运行的Kubernetes集群，该集群部署了OPA和kube-mgmt容器。有关安装说明，请参阅我们的前一篇文章。我们的no-priv-pod.rego文件如下所示：\npackage kubernetes.admission deny[msg] { c := input_containers[_] c.securityContext.privileged msg := sprintf(\u0026quot;Privileged container is not allowed: %v, securityContext: %v\u0026quot;, [c.name, c.securityContext]) } input_containers[c] { c := input.request.object.spec.containers[_] } input_containers[c] { c := input.request.object.spec.initContainers[_] } 让我们简要地浏览一下这个文件：\n第1行：包含package。注意，你必须使用kubernetes.admission让政策工作。\n第2行：Deny是默认对象，它将包含我们需要执行的策略。如果所包含的代码计算结果为true，则将违反策略。\n第3行：我们定义了一个变量，它将容纳pod中的所有容器，并从稍后定义的input_containers[c]接收值。\n第4行：如果pod包含“privileged”属性，则该语句为true。\n第5行：当用户尝试运行特权容器时显示给他们的消息。它包括容器名称和违规的安全上下文。\n第7-9行：input_containers[c]函数从请求对象中提取容器。注意，使用了_字符来遍历数组中的所有容器。在Rego中，你不需要定义循环—下划线字符将自动为你完成此操作。\n第10-12行：我们再次为init容器定义函数。请注意，在Rego中，可以多次定义同一个函数。这样做是为了克服Rego函数中不能返回多个输出的限制。当调用函数名时，将执行两个函数，并使用AND操作符组合输出。因此，在我们的例子中，在一个或多个位置中存在一个有特权的容器将违反策略。\n部署策略\r#\r\rOPA会在opa命名空间的ConfigMaps中找到它的策略。要将我们的代码应用到ConfigMap中，我们运行以下命令：\nkubectl create configmap no-priv-pods \u0026ndash;from-file=no-priv-pod.rego kube-mgmt边车（sidecar）容器在opa命名空间中持续监视API服务器，以便你只需创建ConfigMap就可以部署策略。\n运行策略\n让我们通过尝试部署一个特权容器来确保我们的策略是有效的：\nkubectl -n default apply -f - \u0026lt;\u0026lt;EOT apiVersion: v1 kind: Pod metadata: name: nginx-privileged labels: app: nginx-privileged spec: containers: - name: nginx image: nginx securityContext: privileged: true #false EOT Error from server (Privileged container is not allowed: nginx, securityContext: {\u0026ldquo;privileged\u0026rdquo;: true}): error when creating \u0026ldquo;STDIN\u0026rdquo;: admission webhook \u0026ldquo;validating-webhook.openpolicyagent.org\u0026rdquo; denied the request: Privileged container is not allowed: nginx, securityContext: {\u0026ldquo;privileged\u0026rdquo;: true} 请注意，我们有意将pod部署到默认命名空间，因为我们的admission webhook将忽略在opa命名空间或kube-system中创建的任何资源。\n总结\nOPA是一种通用的、平台无感的策略实施工具，可以通过多种方式与Kubernetes集成。\n你可以使用OPA策略来模拟Pod安全策略，以防止在集群上调度特权容器。\n因为OPA可以与其他Kubernetes资源一起工作，而不仅仅是Pods，所以建议使用它来创建跨越所有相关资源的集群级策略文档。\n"},{"id":201,"href":"/posts/security/kubernetes-pod-%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5psp%E9%85%8D%E7%BD%AE/","title":"Kubernetes Pod 安全策略( Psp)配置","section":"安全","content":"Kubernetes Pod 安全策略(PSP)配置 默认情况下，Kubernetes 允许创建一个有特权容器的 Pod，这些容器很可能会危机系统安全，而 Pod 安全策略（PSP）则通过确保请求者有权限按配置来创建 Pod，从而来保护集群免受特权 Pod 的影响。\nPodSecurityPolicy 是 Kubernetes API 对象，你可以在不对 Kubernetes 进行任何修改的情况下创建它们，但是，默认情况下不会强制执行我们创建的一些策略，我们需要一个准入控制器、kube-controller-manager 配置以及 RBAC 权限配置，下面我们就来对这些配置进行一一说明。 Kubernetes Pod 安全策略(PSP)配置 kubernetes psp Admission Controller Admission Controller（准入控制器）拦截对 kube-apiserver 的请求，拦截发生在请求的对象被持久化之前，但是在请求被验证和授权之后。这样我们就可以查看请求对象的来源，并验证需要的内容是否正确。通过将它们添加到 kube-apiserver 的enable-admission-plugins参数中来启用准入控制器。在1.10版本之前，使用现在已经弃用的admision-control参数，另外需要注意准入控制器的顺序很重要。 将PodSecurityPolicy添加到 kube-apiserver 上的enabled-admission-plugins参数中，然后重启 kube-apiserver： enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,PodSecurityPolicy  其他插件来自 Kubernetes 文档中推荐的一些插件列表。\nPodSecurityPolicy 已经添加到上面的列表中了，现在 PSP 的控制器已经启用了，但是我们集群中现在缺少一些安全策略，那么新的 Pod 创建就会失败。 比如现在我们创建一个 Nginx 的 Deployment，YAML 文件内容如下所示：（nginx.yaml）  apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deploy namespace: default labels: app: nginx spec: replicas: 1 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:1.15.4 然后直接创建上面的 Deployment：\n$ kubectl apply -f nginx.yaml  deployment.apps/nginx-deploy created 我们可以看到 Deployment 已经创建成功了，现在检查下 default 命名空间下面的 pod、replicaset、deployment：\n$ kubectl get po,rs,deploy -l app=nginx  NAME READY STATUS RESTARTS AGE NAME DESIRED CURRENT READY AGE replicaset.extensions/nginx-deploy-77f7d4c6b4 1 0 0 40s NAME READY UP-TO-DATE AVAILABLE AGE deployment.extensions/nginx-deploy 0/1 0 0 40s 可以看到 replicaset 和 deployment 都创建成功了，但是 replicaset 控制器却并没有创建 Pod，这个时候就需要使用 ServiceAccount 了。\nServiceAccount Controller Manager 一般来说用户很少会直接创建 Pod，通过是通过 Deployment、StatefulSet、Job 或者 DasemonSet 这些控制器来创建 Pod 的，我们这里需要配置 kube-controller-manager 来为其包含的每个控制器使用单独的 ServiceAccount，我们可以通过在其命令启动参数中添加如下标志来实现： use-service-account-credentials=true 一般情况下上面这个标志在大多数安装工具（如 kubeadm）中都是默认开启的，所以不需要单独配置了。 当 kube-controller-manager 开启上面的标志后，它将使用由 Kubernetes 自动生成的以下 ServiceAccount: $ kubectl get serviceaccount -n kube-system | egrep -o '[A-Za-z0-9-]+-controller'  attachdetach-controller calico-kube-controller certificate-controller clusterrole-aggregation-controller cronjob-controller daemon-set-controller deployment-controller disruption-controller endpoint-controller expand-controller job-controller namespace-controller node-controller pv-protection-controller pvc-protection-controller replicaset-controller replication-controller resourcequota-controller service-account-controller service-controller statefulset-controller ttl-controller 这些 ServiceAccount 指定了哪个控制器可以解析哪些策略的配置。\n策略 PodSecurityPolicy 对象提供了一种声明式的方式，用于表达我们运行用户和 ServiceAccount 在我们的集群中创建的内容。我们可以查看策略文档来了解如何设置。在我们当前示例中，我们将创建2个策略，第一个是提供限制访问的“默认”策略，保证使用特权设置（例如使用 hostNetwork）无法创建 Pod。第二种是一个“提升”的许可策略，允许将特权设置用于某些 Pod，例如在 kube-system 命名空间下面创建的 Pod 有权限。 首先，创建一个限制性策略，作为默认策略：(psp-restrictive.yaml)  apiVersion: policy/v1beta1 kind: PodSecurityPolicy metadata: name: restrictive spec: privileged: false hostNetwork: false allowPrivilegeEscalation: false defaultAllowPrivilegeEscalation: false hostPID: false hostIPC: false runAsUser: rule: RunAsAny fsGroup: rule: RunAsAny seLinux: rule: RunAsAny supplementalGroups: rule: RunAsAny volumes: - 'configMap' - 'downwardAPI' - 'emptyDir' - 'persistentVolumeClaim' - 'secret' - 'projected' allowedCapabilities: - '*' 直接创建上面的 psp 对象： $ kubectl apply -f psp-restrictive.yaml  podsecuritypolicy.policy/restrictive configured 虽然限制性的访问对于大多数 Pod 创建是足够的了，但是对于需要提升访问权限的 Pod 来说，就需要一些允许策略了，例如，kube-proxy 就需要启用 hostNetwork:\n$ kubectl get pods -n kube-system -l k8s-app=kube-proxy  NAME READY STATUS RESTARTS AGE kube-proxy-4z4vf 1/1 Running 0 18d $ kubectl get pods -n kube-system kube-proxy-4z4vf -o yaml |grep hostNetwork hostNetwork: true 这就需要创建一个用于提升创建权限的许可策略了：(psp-permissive.yaml)\napiVersion: policy/v1beta1 kind: PodSecurityPolicy metadata: name: permissive spec: privileged: true hostNetwork: true hostIPC: true hostPID: true seLinux: rule: RunAsAny supplementalGroups: rule: RunAsAny runAsUser: rule: RunAsAny fsGroup: rule: RunAsAny hostPorts: - min: 0 max: 65535 volumes: - '*' 同样直接创建上面的 psp 对象： $ kubectl apply -f psp-permissive.yaml  podsecuritypolicy.policy/permissive configured $ kubectl get psp NAME PRIV CAPS SELINUX RUNASUSER FSGROUP SUPGROUP READONLYROOTFS VOLUMES permissive true RunAsAny RunAsAny RunAsAny RunAsAny false * restrictive false * RunAsAny RunAsAny RunAsAny RunAsAny false configMap,downwardAPI,emptyDir,persistentVolumeClaim,secret,projected 现在配置都已经就绪了，但是我们需要引入到 Kubernetes 授权，这样才可以确定请求 Pod 创建的用户或者 ServiceAccount 是否解决了限制性或许可性策略，这就需要用到 RBAC 了。\nRBAC 在我们启用 Pod 安全策略的时候，可能会对 RBAC 引起混淆。它确定了一个账户可以使用的策略，使用集群范围的 ClusterRoleBinding 可以为 ServiceAccount（例如 replicaset-controller）提供对限制性策略的访问权限。使用命名空间范围的 RoleBinding，可以启用对许可策略的访问，这样可以在特定的命名空间（如 kube-system）中进行操作。下面演示了 daemonset-controller 创建 kube-proxy Pod 的解析路径： Kubernetes Pod 安全策略(PSP)配置 rbac flow 上面的流程图可以帮助我们从概念上去了解策略解决方案，当然实际上的代码执行路径不一定就完全就是这样的，这只是一个简单的演示。 首先创建允许使用restrictive策略的 ClusterRole。然后创建一个 ClusterRoleBinding，将restrictive策略和系统中所有的控制器 ServiceAccount 进行绑定:(psp-restrictive-rbac.yaml)  kind: ClusterRole apiVersion: rbac.authorization.k8s.io/v1 metadata: name: psp-restrictive rules: - apiGroups: - extensions resources: - podsecuritypolicies resourceNames: - restrictive verbs: - use - kind: ClusterRoleBinding apiVersion: rbac.authorization.k8s.io/v1 metadata: name: psp-default subjects: - kind: Group name: system:serviceaccounts namespace: kube-system roleRef: kind: ClusterRole name: psp-restrictive apiGroup: rbac.authorization.k8s.io 直接创建上面的 RBAC 相关的资源对象： $ kubectl apply -f psp-restrictive-rbac.yaml  clusterrole.rbac.authorization.k8s.io/psp-restrictive created clusterrolebinding.rbac.authorization.k8s.io/psp-default created 然后现在我们再重新创建上面我们的定义的 Deployment：\n$ kubectl -f nginx.yaml  deployment.apps \u0026ldquo;nginx-deploy\u0026rdquo; deleted $ kubectl apply -f nginx.yaml deployment.apps/nginx-deploy created 创建完成后同样查看下 default 命名空间下面我们创建的一些资源对象：\n$ kubectl get po,rs,deploy -l app=nginx  NAME READY STATUS RESTARTS AGE pod/nginx-deploy-77f7d4c6b4-njfdl 1/1 Running 0 13s NAME DESIRED CURRENT READY AGE replicaset.extensions/nginx-deploy-77f7d4c6b4 1 1 1 13s NAME READY UP-TO-DATE AVAILABLE AGE deployment.extensions/nginx-deploy 1/1 1 1 13s 我们可以看到 Pods 被成功创建了，但是，如果我们尝试做一些策略不允许的事情，正常来说就应该被拒绝了。首先删除上面的这个 Deployment：\n$ kubectl -f nginx.yaml  deployment.apps \u0026ldquo;nginx-deploy\u0026rdquo; deleted 现在我们在 nginx-deploy 基础上添加hostNetwork: true来使用 hostNetwork 这个特权：（nginx-hostnetwork.yaml）\napiVersion: apps/v1 kind: Deployment metadata: name: nginx-hostnetwork-deploy namespace: default labels: app: nginx spec: replicas: 1 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:1.15.4 hostNetwork: true # 注意添加hostNetwork 然后直接创建上面的 Deployment 这个资源对象： $ kubectl apply -f nginx-hostnetwork.yaml  deployment.apps/nginx-hostnetwork-deploy created 创建完成后同样查看 default 这个命名空间下面的一些资源对象：\n$ kubectl get po,rs,deploy -l app=nginx  NAME READY STATUS RESTARTS AGE NAME DESIRED CURRENT READY AGE replicaset.extensions/nginx-hostnetwork-deploy-74c8fbd687 1 0 0 44s NAME READY UP-TO-DATE AVAILABLE AGE deployment.extensions/nginx-hostnetwork-deploy 0/1 0 0 44s 现在我们发现 ReplicaSet 又没有创建 Pod 了，可以使用kubectl describe命令去查看这里我们创建的 ReplicaSet 资源对象来了解更多的信息：\n$ kubectl describe rs nginx-hostnetwork-deploy-74c8fbd687  Name: nginx-hostnetwork-deploy-74c8fbd687 \u0026hellip;\u0026hellip; Events:\n   Type Reason Age From Message     Warning FailedCreate 80s (x15 over 2m42s) replicaset-controller Error creating: pods \u0026ldquo;nginx-hostnetwork-deploy-74c8fbd687-\u0026rdquo; is forbidden: unable to validate against any pod security policy: [spec.securityContext.hostNetwork: Invalid value: true: Host network is not allowed to be used]   我们可以看到很明显 Hostnetwork 不被允许使用，但是在某些情况下，我们的确有在某个命名空间（比如 kube-system）下面创建使用 hostNetwork 的 Pod，这里就需要我们创建一个允许执行的 ClusterRole，然后为特定的命名空间创建一个 RoleBinding，将这里的 ClusterRole 和相关的控制器 ServiceAccount 进行绑定:(psp-permissive-rbac.yaml)    kind: ClusterRole apiVersion: rbac.authorization.k8s.io/v1 metadata: name: psp-permissive rules: - apiGroups: - extensions resources: - podsecuritypolicies resourceNames: - permissive verbs: - use - apiVersion: rbac.authorization.k8s.io/v1beta1 kind: RoleBinding metadata: name: psp-permissive namespace: kube-system roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: psp-permissive subjects: - kind: ServiceAccount name: daemon-set-controller namespace: kube-system - kind: ServiceAccount name: replicaset-controller namespace: kube-system - kind: ServiceAccount name: job-controller namespace: kube-system 然后直接创建上面的 RBAC 相关的资源对象： $ kubectl apply -f psp-permissive-rbac.yaml  clusterrole.rbac.authorization.k8s.io/psp-permissive created rolebinding.rbac.authorization.k8s.io/psp-permissive created 现在，我们就可以在 kube-system 这个命名空间下面使用 hostNetwork 来创建 Pod 了，将上面的 nginx 资源清单更改成 kube-system 命名空间下面：\napiVersion: apps/v1 kind: Deployment metadata: name: nginx-hostnetwork-deploy namespace: kube-system labels: app: nginx spec: replicas: 1 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:1.15.4 hostNetwork: true 重新创建这个 Deployment：\n$ kubectl apply -f nginx-hostnetwork.yaml  deployment.apps/nginx-hostnetwork-deploy created 创建完成后同样查看下对应的资源对象创建情况：\n$ kubectl get po,rs,deploy -n kube-system -l app=nginx  NAME READY STATUS RESTARTS AGE pod/nginx-hostnetwork-deploy-74c8fbd687-7x8px 1/1 Running 0 2m1s NAME DESIRED CURRENT READY AGE replicaset.extensions/nginx-hostnetwork-deploy-74c8fbd687 1 1 1 2m1s NAME READY UP-TO-DATE AVAILABLE AGE deployment.extensions/nginx-hostnetwork-deploy 1/1 1 1 2m1s 现在我们可以看到 Pod 在 kube-system 这个命名空间下面创建成功了。\n特定应用的 ServiceAccount 如果我们现在有这样的一个需求，在某个命名空间下面要强制执行我们创建的 restrictive（限制性）策略，但是这个命名空间下面的某个应用需要使用 permissive（许可）策略，那么应该怎么办呢？在当前模型中，我们只有集群级别和命名空间级别的解析。为了给某个应用提供单独的许可策略，我们可以为应用的 ServiceAccount 提供使用 permissive 这个 ClusterRole 的能力。 比如，还是在默认的命名空间下面创建一个名为 specialsa 的 ServiceAccount: $ kubectl create serviceaccount specialsa  serviceaccount/specialsa created 然后创建一个 RoleBinding 将 specialsa 绑定到上面的 psp-permissive 这个 CluterRole 上:(specialsa-psp.yaml)\napiVersion: rbac.authorization.k8s.io/v1beta1 kind: RoleBinding metadata: name: specialsa-psp-permissive namespace: default roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: psp-permissive subjects: - kind: ServiceAccount name: specialsa namespace: default 创建上面的 RoleBinding 对象：\n$ kubectl apply -f specialsa-psp.yaml  rolebinding.rbac.authorization.k8s.io/specialsa-psp-permissive created 然后为我们上面的 Deployment 添加上 serviceAccount 属性:(nginx-hostnetwork-sa.yaml)\napiVersion: apps/v1 kind: Deployment metadata: name: nginx-hostnetwork-deploy namespace: default labels: app: nginx spec: replicas: 1 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:1.15.4 hostNetwork: true serviceAccount: specialsa # 注意这里使用的sa的权限绑定 然后直接创建即可:\n$ kubectl apply -f nginx-hostnetwork-sa.yaml  deployment.apps/nginx-hostnetwork-deploy configured 这个时候我们查看 default 这个命名空间下面带有 hostNetwork 的 Pod 也创建成功了:\n$ kubectl get po,rs,deploy -l app=nginx  NAME READY STATUS RESTARTS AGE pod/nginx-hostnetwork-deploy-6c85dfbf95-hqt8j 1/1 Running 0 65s NAME DESIRED CURRENT READY AGE replicaset.extensions/nginx-hostnetwork-deploy-6c85dfbf95 1 1 1 65s replicaset.extensions/nginx-hostnetwork-deploy-74c8fbd687 0 0 0 31m NAME READY UP-TO-DATE AVAILABLE AGE deployment.extensions/nginx-hostnetwork-deploy 1/1 1 1 31m\n上面我们描述了 Pod 安全策略是一种通过使用 PSP 授权策略来保护 k8s 集群中的 Pod 的创建过程的方法。\n参考资料  https://kubernetes.io/docs/concepts/policy/pod-security-policy/#policy-reference\nhttps://octetz.com/posts/setting-up-psps\nhttps://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#is-there-a-recommended-set-of-admission-controllers-to-use\n"},{"id":202,"href":"/posts/security/linux-%E7%9A%84%E5%BC%80%E6%BA%90%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E8%BD%AF%E4%BB%B6extundelete/","title":"Linux 的开源数据恢复软件 Extundelete","section":"安全","content":"Extundelete工具简介 Extundelete 是基于 linux 的开源数据恢复软件。如果您不小心误删除数据，并且 Linux 系统也没有与 Windows 系统下回收站类似的功能，您可以方便快速安装此工具。\n在利用 extundelete 恢复文件时并不依赖特定文件格式，首先extundelete会通过文件系统的inode信息（根目录的inode一般为2）来获得当前文件系统下所有文件的信息，包括存在的和已经删除的文件，这些信息包括文件名和inode。然后利用inode信息结合日志去查询该inode所在的block位置，包括直接块，间接块等信息。最后利用dd命令将这些信息备份出来，从而恢复数据文件。该工具最给力的一点就是支持ext3/ext4双格式分区恢复，基于整个磁盘的恢复功能较为强大。 注意：在实际线上恢复过程中，切勿将extundelete安装到你误删的文件所在硬盘，这样会有一定几率将需要恢复的数据彻底覆盖\nsrc/extundelete \u0026ndash;help\r#\r\rA typical usage scenario is presented below. Note that some of the commands below require special permissions to complete. Adding \u0026lsquo;sudo ' before the command is one way to ensure you have the necessary permissions. Assume you have deleted a file called /home/user/an/important/file. Also assume the output of the \u0026lsquo;mount\u0026rsquo; command shows this line (among others): /dev/sda3 on /home type ext3 (rw) This line shows that the /home directory is on the partition named /dev/sda3, so then run: umount /dev/sda3 and check that it is now unmounted by running the mount command again and seeing it is not listed. Now, with this information, run extundelete: extundelete /dev/sda3 --restore-file user/an/important/file If you have deleted the directory \u0026lsquo;important\u0026rsquo;, you can run: extundelete /dev/sda3 --restore-directory user/an/important Or if you have deleted everything, you can run: extundelete /dev/sda3 --restore-all\n"},{"id":203,"href":"/posts/security/openssl-%E8%87%AA%E7%AD%BE%E5%90%8Dca%E9%A2%81%E5%8F%91%E5%A4%9A%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6/","title":"Openssl 自签名 Ca颁发多域名证书","section":"安全","content":"概述\r#\r\rHTTPS服务是工作在SSL/TLS上的HTTP。 首先简单区分一下HTTPS，SSL ，TLS ，OpenSSL这四者的关系： SSL：（Secure Socket Layer，安全套接字层）是在客户端和服务器之间建立一条SSL安全通道的安全协议； TLS：（Transport Layer Security，传输层安全协议），用于两个应用程序之间提供保密性和数据完整性； TLS的前身是SSL； OpenSSL是TLS/SSL协议的开源实现，提供开发库和命令行程序； HTTPS是HTTP的加密版，底层使用的加密协议是TLS。 结论：SSL/TLS 是协议，OpenSSL是协议的代码实现。\n用OpenSSL配置带有SubjectAltName的ssl请求 对于多域名，只需要一个证书就可以保护非常多的域名。 SubjectAltName是X509 Version 3 (RFC 2459)的扩展，允许ssl证书指定多个可以匹配的名称。\nSubjectAltName 可以包含email 地址，ip地址，正则匹配DNS主机名，等等。 ssl这样的一个特性叫做：SubjectAlternativeName（简称：san）\n生成证书请求文件\r#\r\r对于一个通用的ssl证书请求文件（CSR），openssl不需要很多操作。 因为我们可能需要添加一个或者两个SAN到我们CSR，我们需要在openssl配置文件中添加一些东西：你需要告诉openssl创建一个包含x509 V3扩展的CSR，并且你也需要告诉openssl在你的CSR中包含subject alternative names列表。\n创建一个openssl配置文件（openssl.cnf），并启用subject alternative names：\n找到req段落。这段落的内容将会告诉openssl如何去处理证书请求（CSR）。 在req段落中应该要包含一个以req_extensions开始的行。如下： [req] distinguished_name = req_distinguished_name req_extensions = v3_req\n这个配置是告诉openssl在CSR中要包含v3_req段落的部分。 现在我们来配置v3_req，如下：\n[req_distinguished_name]\rcountryName = Country Name (2 letter code)\rcountryName_default = US\rstateOrProvinceName = State or Province Name (full name)\rstateOrProvinceName_default = MN\rlocalityName = Locality Name (eg, city)\rlocalityName_default = Minneapolis\rorganizationalUnitName = Organizational Unit Name (eg, section)\rorganizationalUnitName_default = Domain Control Validated\rcommonName = Internet Widgits Ltd\rcommonName_max = 64\r[ v3_req ]\r# Extensions to add to a certificate request\rbasicConstraints = CA:FALSE\rkeyUsage = nonRepudiation, digitalSignature, keyEncipherment\rsubjectAltName = @alt_names\r[alt_names]\rDNS.1 = kb.example.com\rDNS.2 = helpdesk.example.org\rDNS.3 = systems.example.net\rIP.1 = 192.168.1.1\rIP.2 = 192.168.69.14\r请注意：无论v3_req放哪里，都是可以的，都会在所有生成的CSR中。 要是之后，你又想生成一个不同的SANs的CSR文件，你需要编辑这个配置文件，并改变DNS.x列表。\n生成私钥\r#\r\r首先我们创建一个私钥：\nopenssl genrsa -out san_domain_com.key 2048\r# 如果是生成ca的使用，建议这样\ropenssl genrsa -out ca.key 2048\r这里的san_domain_com，是你正式使用的服务器的全称地址 创建CSR文件 执行下面语句\nopenssl req -new -out san_domain_com.csr -key san_domain_com.key -config openssl.cnf\r# 注意这里指定了openssl.cnf，使用了上面我们创建的，因为默认是没有`san`。\r# 如果之前创建的是ca.key\ropenssl req -new -out ca.csr -key c.key -confaig openssl.cnf\r执行后，系统会提示你要你输入组织信息，并询问你是否想要包含密码（你可以不需要）。接着你将会看到san_domain_com.csr被创建。\n检查我们是否创建好了，我们可以使用下面的命令来查看CSR包含的信息：\nopenssl req -text -noout -in san_domain_com.csr\r# 如果是ca.csr\ropenssl req -text -noout -in ca.csr\r自签名并创建证书\nopenssl x509 -req -days 3650 -in san_domain_com.csr -signkey san_domain_com.key\r-out san_domain_com.crt-extensions v3_req -extfile openssl.cnf\r# 如果是ca.csr\ropenssl x509 -req -days 3650 -in ca.csr -signkey ca.key\r-out ca.crt-extensions v3_req -extfile openssl.cnf\r"},{"id":204,"href":"/posts/security/openssl%E5%8A%A0%E5%AF%86%E6%96%87%E4%BB%B6/","title":"Openssl加密文件","section":"安全","content":"openssl是个密码工具集，提供多端接口调用方式 组成:\n  代码库 libcryto ,libssl(ssl/tls) 工具集 openssl   对称加密\r#\r\r对称加密主要是用aes，des算法 usage:\n-in \u0026lt;file\u0026gt; input file -out \u0026lt;file\u0026gt; output file 加密后的文件存放位置 -pass \u0026lt;arg\u0026gt; pass phrase source -e encrypt 指定加密算法 -d decrypt 指定解密算法 -a/-base64 base64 encode/decode, depending on encryption flag #使用base64编/解码 -k passphrase is the next argument 指定密码 -kfile passphrase is the first line of the file argument -md the next argument is the md to use to create a key from a passphrase. One of md2, md5, sha or sha1 -S salt in hex is the next argument -K/-iv key/iv in hex is the next argument -[pP] print the iv/key (then exit if -P) -bufsize \u0026lt;n\u0026gt; buffer size -nopad disable standard block padding -engine e use engine e, possibly a hardware device. Cipher Types -aes-128-cbc -aes-128-ccm -aes-128-cfb ... 加密:\r#\r\rcat 123.txt openssl.exe enc -e -aes-128-cbc -in 123.txt -k qqqq -out 321.txt 解密:\r#\r\ropenssl.exe enc -d -aes-128-cbc -in 321.txt -k qqqq -out 456.txt cat 456.txt "},{"id":205,"href":"/posts/security/%E4%BB%80%E4%B9%88%E6%98%AF-devsecops-/","title":"什么是 Dev Sec Ops","section":"安全","content":"DevSecOps 和 DevOps 有什么区别 ?\r#\r\r我们知道，DevOps 不仅仅涉及开发和运维团队。而如果您想充分发挥出 DevOps 的敏捷性和响应力，就必须将IT 安全防护融入应用的整个生命周期中 。\n为什么呢？从前，安全防护只是特定团队的责任，在开发的最后阶段才会介入。当开发周期长达数月、甚至数年时，这样做没什么问题；但是现在，这种做法现在已经行不通了。采用 DevOps 可以有效推进快速频繁的开发周期（有时全程只有数周或数天），但是过时的安全措施则可能会拖累整个流程，即使最高效的 DevOps 计划也可能会放慢速度。\nDevOps安全防护DevOps安全防护\n如今，在 DevOps 协作框架下，安全防护是整个 IT 团队的共同责任，需要贯穿至整个生命周期的每一个环节。这个理念非常重要，因此催生出了“DevSecOps”一词，强调必须为 DevOps 计划打下扎实的安全基础。\nDevSecOps 意味着从一开始就要考虑应用和基础架构的安全性；同时还要让某些安全网关实现自动化，以防止 DevOps 工作流程变慢。选择合适的工具来持续集成安全防护（比如在集成开发环境（IDE）中集成安全防护功能）有助于实现这些目标。但是高效的 DevOps 安防需要的不仅是新工具。它更需要整个公司实现 DevOps 文化变革，从而尽早集成安全团队的工作。\n 从 DevOps 到 DevSecOps 内置安全防护\r#\r\r无论您习惯叫它“DevOps”还是“DevSecOps”，最好确保安全防护融入了软件的整个生命周期中。DevSecOps 就是要内置安全防护，而不是仅仅在应用和数据层面做文章。如果把安全问题留到开发流程的最后再考虑，那么企业即便是采用了 DevOps 方法，也会重回冗长开发周期的老路，而这就是大家从一开始就想要避免的情况。\nDevSecOps 强调，在 DevOps 计划刚启动时就要邀请安全团队来确保信息的安全性，并制定自动安全防护计划，实现持续 IT 防护。它还强调，要帮助开发人员从代码层面确保安全性；在这个过程中，安全团队需要针对已知的威胁共享掌握的全局信息、提供反馈并进行智能分析。由于 DevSecOps 并非始终着眼于较为传统的应用开发模式，所以这可能还包括为开发人员提供新的安全培训。\n那么，怎样才算是真正地实现了安全防护一体化？对于新手而言，优良的 DevSecOps 策略应能确定风险承受能力并进行风险/收益分析。在一个特定的应用中，需要配备多少个安全控制功能？对于不同的应用，上市速度又有多重要？由于在管道中运行手动安全检查可能会非常耗时，所以自动执行重复任务是 DevSecOps 的关键所在。\n DevOps 安全防护自动化\r#\r\r要推行 DevOps，企业需要：确保采用时间短、频率高的开发周期；采取安全措施，最大限度地缩短运维中断时间；及时应用创新技术，如容器和微服务；同时，还要促使以往各自为阵的团队加强合作——这一切对所有企业来说都是艰巨的任务。上述所有措施都是以人员为根本，都需要企业内部协同合作；但是，要想在 DevSecOps 框架中实现这些人员的变革，自动化是关键所在（点击查看自动化的带来的优势）。\n那么，企业应该在哪些方面实现自动化？具体又该怎么做呢？这份的企业自动化检查清单也许能够为您提供答案。企业应该退后一步，以全局视角，着眼整个开发和运维环境。其中涉及：源控制存储库；容器注册表；持续集成和持续部署（CI/CD）管道；应用编程接口（API）的管理、编排和发布自动化；以及运维管理和监控。\n全新的自动化技术已帮助企业应用了更敏捷的开发实践，也在促进新的安全措施方面起到了重要作用。但是，自动化并不是近年来 IT 领域发生的唯一变化。现在，对于大多数 DevOps 计划而言，容器和微服务等云原生技术也是一个非常重要的组成部分。所以，企业必须及时调整 DevOps 安全措施。\n 针对容器和微服务的 DevOps 安全防护\r#\r\r容器可以实现更大的规模和更灵活的基础架构，从而改变了许多组织开展业务的方式。因此，DevOps 的安全防护实践必须适应新环境并遵循容器特有的安全准则。云原生技术不适合用来落实静态安全策略和检查清单。相反，企业必须确保应用和基础架构生命周期的每个阶段都有集成其中的持续安全防护。\nDevSecOps 意味着，安全防护要贯穿应用开发的整个过程。要实现集成进管道，我们既需要一种全新的思维方式，也需要合适的新工具。因此，DevOps 团队应该实现安全防护自动化，从而保护整体环境和数据，同时实现持续集成/持续交付流程——可能还要确保容器中的微服务的安全。\n环境和数据安全防护：\r#\r\r环境标准化和自动化。\r#\r\r每项服务都应具有限制权限，从而最大限度地减少未经授权的连接和访问。\n集中化管理用户身份和访问控制功能。\r#\r\r由于要在多个点发起身份验证，因此严格的访问控制和集中式身份验证机制对于确保微服务安全性而言至关重要。\n使运行微服务的容器相互以及与网络隔离。\r#\r\r这包括传输中和静止的数据，因为获取这两类数据是攻击者的重点目标。\n加密应用与服务间的数据。\r#\r\r使用具有集成安全防护的容器编排平台，可以最大限度地减少未经授权的访问。\n使用安全的 API 网关。\r#\r\r安全的 API 可让授权和路由更加清晰可见。通过减少公开的 API，组织可以减小攻击面。\nCI/CD 流程安全防护：\r#\r\r集成适用于容器的安全扫描程序。\r#\r\r这应成为向注册表添加容器的其中一个步骤。\n自动化 CI 流程中的安全测试。\r#\r\r包括在构建过程中运行静态安全分析工具；以及在构建管道中拖入任何预构建容器映像时，都要进行扫描，以检查是否存在已知的安全漏洞。\n在验收测试流程中加入针对安全功能的自动化测试。\r#\r\r自动化输入验证测试、身份验证和授权功能。\n自动化安全更新，例如修补已知漏洞。\r#\r\rDevOps 可以实现这一点。这样，在创建记录可跟踪更改的日志时，管理员便无需登录生产系统。\n自动化系统和服务配置管理功能。\r#\r\r这样可以确保遵守安全策略，避免出现人为错误。审核和补救操作也应实现自动化。\n"},{"id":206,"href":"/posts/security/%E5%9C%A8-linux-%E4%B8%8A%E7%94%A8-selinux-%E6%88%96-apparmor-%E5%AE%9E%E7%8E%B0%E5%BC%BA%E5%88%B6%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6mac/","title":"在 Linux 上用 Selinux 或 App Armor 实现强制访问控制（ Mac)","section":"安全","content":"为了解决标准的“用户-组-其他/读-写-执行”权限以及访问控制列表[1]的限制以及加强安全机制，美国国家安全局（NSA）设计出一个灵活的强制访问控制（MAC）方法 SELinux（Security Enhanced Linux 的缩写），来限制标准的权限之外的种种权限，在仍然允许对这个控制模型后续修改的情况下，让进程尽可能以最小权限访问或在系统对象（如文件，文件夹，网络端口等）上执行其他操作。\n\nSELinux 和 AppArmor 加固 Linux 安全\n另一个流行并且被广泛使用的 MAC 是 AppArmor，相比于 SELinux 它提供更多的特性，包括一个学习模式，可以让系统“学习”一个特定应用的行为，以及通过配置文件设置限制实现安全的应用使用。\n在 CentOS 7 中，SELinux 合并进了内核并且默认启用强制模式（下一节会介绍这方面更多的内容），与之不同的是，openSUSE 和 Ubuntu 使用的是 AppArmor 。\n在这篇文章中我们会解释 SELinux 和 AppArmor 的本质，以及如何在你选择的发行版上使用这两个工具之一并从中获益。\nSELINUX 介绍以及如何在 CENTOS 7 中使用\r#\r\rSecurity Enhanced Linux 可以以两种不同模式运行：\n 强制：这种情况下，SELinux 基于 SELinux 策略规则拒绝访问，策略规则是一套控制安全引擎的规则。 宽容：这种情况下，SELinux 不拒绝访问，但如果在强制模式下会被拒绝的操作会被记录下来。  SELinux 也能被禁用。尽管这不是它的一个操作模式，不过也是一种选择。但学习如何使用这个工具强过只是忽略它。时刻牢记这一点！\n使用 getenforce 命令来显示 SELinux 的当前模式。如果你想要更改模式，使用 setenforce 0（设置为宽容模式）或 setenforce 1（强制模式）。\n因为这些设置重启后就失效了，你需要编辑 /etc/selinux/config 配置文件并设置 SELINUX 变量为 enforcing、permissive 或 disabled ，保存设置让其重启后也有效：\n\n如何启用和禁用 SELinux 模式\n还有一点要注意，如果 getenforce 返回 Disabled，你得编辑 /etc/selinux/config 配置文件为你想要的操作模式并重启。否则你无法利用 setenforce 设置（或切换）操作模式。\nsetenforce 的典型用法之一包括在 SELinux 模式之间切换（从强制到宽容或相反）来定位一个应用是否行为不端或没有像预期一样工作。如果它在你将 SELinux 设置为宽容模式正常工作，你就可以确定你遇到的是 SELinux 权限问题。\n有两种我们使用 SELinux 可能需要解决的典型案例：\n 改变一个守护进程监听的默认端口。 给一个虚拟主机设置 /var/www/html 以外的文档根路径值。  让我们用以下例子来看看这两种情况。\n例 1：更改 SSHD 守护进程的默认端口\r#\r\r大部分系统管理员为了加强服务器安全首先要做的事情之一就是更改 SSH 守护进程监听的端口，主要是为了阻止端口扫描和外部攻击。要达到这个目的，我们要更改 /etc/ssh/sshd_config 中的 Port 值为以下值（我们在这里使用端口 9999 为例）： Port 9999 在尝试重启服务并检查它的状态之后，我们会看到它启动失败： systemctl restart sshd # systemctl status sshd\n检查 SSH 服务状态\n如果我们看看 /var/log/audit/audit.log，就会看到 sshd 被 SELinux 阻止在端口 9999 上启动，因为它是 JBoss 管理服务的保留端口（SELinux 日志信息包含了词语“AVC”，所以应该很容易把它同其他信息区分开来）： cat /var/log/audit/audit``.log | grep AVC | tail -1 检查 Linux 审计日志\n在这种情况下大部分人可能会禁用 SELinux，但我们不这么做。我们会看到有个让 SELinux 和监听其他端口的 sshd 和谐共处的方法。首先确保你有 policycoreutils-python 这个包，执行： yum install policycoreutils-python 查看 SELinux 允许 sshd 监听的端口列表。在接下来的图片中我们还能看到端口 9999 是为其他服务保留的，所以我们暂时无法用它来运行其他服务： semanage port -l | grep ssh 当然我们可以给 SSH 选择其他端口，但如果我们确定我们不会使用这台机器跑任何 JBoss 相关的服务，我们就可以修改 SELinux 已存在的规则，转而给 SSH 分配那个端口： semanage port -m -t ssh_port_t -p tcp 9999 这之后，我们就可以用前一个 semanage 命令检查端口是否正确分配了，即使用 -lC 参数（list custom 的简称）： semanage port -lC # semanage port -l | grep ssh\n\n给 SSH 分配端口\n我们现在可以重启 SSH 服务并通过端口 9999 连接了。注意这个更改重启之后依然有效。\n例 2：给一个虚拟主机设置 /VAR/WWW/HTML 以外的文档根路径\r#\r\r如果你需要用除 /var/www/html 以外目录作为文档根目录设置一个Apache 虚拟主机[2]（也就是说，比如 /websrv/sites/gabriel/public_html）： DocumentRoot “``/websrv/sites/gabriel/public_html``” Apache 会拒绝提供内容，因为 index.html 已经被标记为了 default_t SELinux 类型，Apache 无法访问它： wget http:``//localhost/index``.html # ls -lZ /websrv/sites/gabriel/public_html/index.html  被标记为 default_t SELinux 类型 和之前的例子一样，你可以用以下命令验证这是不是 SELinux 相关的问题： cat /var/log/audit/audit``.log | grep AVC | tail -1  检查日志确定是不是 SELinux 的问题 要将 /websrv/sites/gabriel/public_html 整个目录内容标记为 httpd_sys_content_t，执行： semanage fcontext -a -t httpd_sys_content_t \u0026quot;/websrv/sites/gabriel/public_html(/.*)?\u0026quot; 上面这个命令会赋予 Apache 对那个目录以及其内容的读取权限。 最后，要应用这条策略（并让更改的标记立即生效），执行： restorecon -R -``v /websrv/sites/gabriel/public_html 现在你应该可以访问这个目录了： wget http:``//localhost/index``.html \n访问 Apache 目录\n要获取关于 SELinux 的更多信息，参阅 Fedora 22 中的 SELinux 用户及管理员指南[3]。\nAPPARMOR 介绍以及如何在 OPENSUSE 和 UBUNTU 上使用它\r#\r\rAppArmor 的操作是基于写在纯文本文件中的规则定义，该文件中含有允许权限和访问控制规则。安全配置文件用来限制应用程序如何与系统中的进程和文件进行交互。\n系统初始就提供了一系列的配置文件，但其它的也可以由应用程序在安装的时候设置或由系统管理员手动设置。\n像 SELinux 一样，AppArmor 以两种模式运行。在 强制 enforce模式下，应用被赋予它们运行所需要的最小权限，但在 抱怨 complain模式下 AppArmor 允许一个应用执行受限的操作并将操作造成的“抱怨”记录到日志里（/var/log/kern.log，/var/log/audit/audit.log，和其它放在 /var/log/apparmor 中的日志）。\n日志中会显示配置文件在强制模式下运行时会产生错误的记录，它们中带有 audit 这个词。因此，你可以在 AppArmor 的 强制 enforce模式下运行之前，先在 抱怨 complain模式下尝试运行一个应用并调整它的行为。\n可以用这个命令显示 AppArmor 的当前状态：\nsudo apparmor_status \n查看 AppArmor 的状态\n上面的图片指明配置 /sbin/dhclient，/usr/sbin/，和 /usr/sbin/tcpdump 等处在强制 模式下（在 Ubuntu 下默认就是这样的）。\n因为不是所有的应用都包含相关的 AppArmor 配置，apparmor-profiles 包给其它没有提供限制的包提供了配置。默认它们配置在抱怨模式下运行，以便系统管理员能够测试并选择一个所需要的配置。\n我们将会利用 apparmor-profiles，因为写一份我们自己的配置已经超出了 LFCS 认证[4]的范围了。但是，由于配置都是纯文本文件，你可以查看并学习它们，为以后创建自己的配置做准备。\nAppArmor 配置保存在 /etc/apparmor.d 中。让我们来看看这个文件夹在安装 apparmor-profiles 之前和之后有什么不同： ls /etc/apparmor``.d \n查看 AppArmor 文件夹内容\n如果你再次执行 sudo apparmor_status，你会在抱怨模式看到更长的配置文件列表。你现在可以执行下列操作。\n将当前在强制模式下的配置文件切换到 抱怨模式： sudo aa-complain /path/to/file 以及相反的操作（抱怨 –\u0026gt; 强制）： sudo aa-enforce /path/to/file 上面这些例子是允许使用通配符的。举个例子： sudo aa-complain /etc/apparmor``.d/* 会将 /etc/apparmor.d 中的所有配置文件设置为 抱怨 complain模式，反之 sudo aa-enforce /etc/apparmor``.d/* 会将所有配置文件设置为 强制 enforce模式。 要完全禁用一个配置，在 /etc/apparmor.d/disabled 目录中创建一个符号链接： sudo ln -s /etc/apparmor``.d``/profile``.name /etc/apparmor``.d``/disable/\n要获取关于 AppArmor 的更多信息，参阅官方的AppArmor wiki[5] 以及 Ubuntu 提供的[6]文档。\n"},{"id":207,"href":"/posts/security/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6/","title":"数字证书","section":"安全","content":"数字证书（Certificate）\r#\r\r在HTTPS的传输过程中，有一个非常关键的角色——数字证书，所谓数字证书，是一种用于电脑的身份识别机制。由数字证书颁发机构（CA）对使用私钥创建的签名请求文件做的签名（盖章），表示CA结构对证书持有者的认可。数字证书拥有以下几个优点：\n 使用数字证书能够提高用户的可信度 数字证书中的公钥，能够与服务端的私钥配对使用，实现数据传输过程中的加密和解密 在证认使用者身份期间，使用者的敏感个人数据并不会被传输至证书持有者的网络系统上 X.509证书包含三个文件：key，csr，crt。 key是服务器上的私钥文件，用于对发送给客户端数据的加密，以及对从客户端接收到数据的解密 csr是证书签名请求文件，用于提交给证书颁发机构（CA）对证书签名 crt是由证书颁发机构（CA）签名后的证书，或者是开发者自签名的证书，包含证书持有人的信息，持有人的公钥，以及签署者的签名等信息 备注：在密码学中，X.509是一个标准，规范了公开秘钥认证、证书吊销列表、授权凭证、凭证路径验证算法等\n 使用Openssl生成自签名证书\r#\r\ropenssl是个密码工具集，提供多端接口调用方式 组成:\n 代码库 libcryto ,libssl(ssl/tls) 工具集 openssl 1 生成服务器端的私钥(key文件) openssl genrsa -des3 -out server.key 2048 说明：生成rsa私钥，des3算法，2048位强度，server.key是秘钥文件名。 注意：生成私钥，需要提供一个至少4位的密码，,此密码用于加密key文件(参数des3是加密算法,也可以选用其他安全的算法),以后每当需读取此文件(通过openssl提供的命令或API)都需输入口令.如果不要口令,则可用以下命令去除口令:openssl rsa -in server.key -out server.key  "},{"id":208,"href":"/posts/sre/ningx%E5%AE%9E%E7%8E%B0%E9%87%8D%E8%BD%BD%E9%85%8D%E7%BD%AE%E4%B8%8D%E4%B8%A2%E5%A4%B1%E8%AF%B7%E6%B1%82%E7%9A%84%E5%8E%9F%E7%90%86/","title":"Ningx实现重载配置不丢失请求的原理","section":"站点可靠性工程","content":"前言\r#\r\rnginx启动时，会启动两个进程： 一个是Master进程和worker进程。\n改变配置后nginx做的事\r#\r\r1）改变了nginx配置之后，HUP signal的信号需要发送给主进程。 2）主进程首先会检测新配置的语法有效性。 3）尝试应用新的配置 1.打开日志文件，并且新分配一个socket来监听。 2.如果1失败，则回滚改变，还是会使用原有的配置。 3.如果1成功，则使用新的配置，新建一个线程。新建成功后发送一个关闭消息给旧的进程。要求旧线程优雅的关闭。 4.旧的线程 受到信号后会继续服务，当所有请求的客户端被服务后，旧线程关闭。 ———————————————— 修改配置后使用如下命令生效配置 nginx -s reload "},{"id":209,"href":"/posts/sre/site-reliability-engineering%E4%B9%A6%E8%AF%84/","title":"Site Reliability Engineering书评","section":"站点可靠性工程","content":" 深入的技术和管理实践每个公司都可以使用，但只有谷歌能发明。 对于任何大规模运行高可用性web服务的人来说都是必须阅读的。 你有责任为自己和你的组织读这本书，为自己尝试这些想法。  "},{"id":210,"href":"/posts/sre/%E7%AB%99%E7%82%B9%E5%8F%AF%E9%9D%A0%E6%80%A7%E5%B7%A5%E7%A8%8B/","title":"站点可靠性工程","section":"站点可靠性工程","content":"绝大多数软件系统的生命周期花费在使用上，不在设计和实现上。如此，为什么普遍的理论坚持软件工程师主要关注大规模计算系统的设计和实现。 在这一些列的文章和论文中谷歌站点可靠性工程团队的关键成员们说明了怎样和为什么他们整个生命周期的投入能使公司成功构建、部署、监控和维护一些世界上最大的软件系统。你将学习谷歌工程师创造系统更高可扩展性，可靠性和高效的理论和实践课程，直接应用到你的组织。\n 简介：学习什么是站点可靠性工程和为什么它不同于传统信息技术行业的做法 理论：研究公司的模式，行为和区域对一个站点可靠性工程师（SRE）的工作的影响 实践：理解站点可靠性工程师日常工作中构建和维护大型分部署系统的理论和实践 管理：探索你的组织可以使用的谷歌培训，沟通和会议的最佳实践  有兴趣和我一起实践网站可靠性工程的朋友请加微信群，特别对于新参加工作的同学，力所能及的地方我保证会提供帮助 "},{"id":211,"href":"/posts/posts/","title":"post main page","section":"Posts","content":"article is in the sub direcotry\r#\r\r"},{"id":212,"href":"/about/","title":"关于作者","section":"home","content":"the writer:\r#\r\rI am a certified Kubernetes administrator and I have 7+ years of experience in the field of IT or Development, I have the skills and tools like Azure, AWS, Aliyun, Istio, Jenkins, Ansible, GitHub, Python programming, Golang programming, bash scripting, networking, etc. I can implement a highly available container platform using Kubernetes. Deploy microservices-based applications, implement green-blue deployments, canary releases, and A/B testing\n"}]